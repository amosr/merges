[6 of 6] Compiling Automata4QQEg    ( Automata4QQEg.hs, Automata4QQEg.o )

==================== CorePrep ====================
let {
  sat_s3Iz :: GHC.Base.String
  [LclId, Str=DmdType]
  sat_s3Iz =
    GHC.CString.unpackCString#
      "\n\
      \            a = read pull1\n\
      \            b = read pull2\n\
      \\n\
      \            incd = map inc a\n\
      \            filtd = filter gt1 incd\n\
      \\n\
      \            ff = map dup filtd\n\
      \            bb = map dup b      # self-zips don't work\n\
      \\n\
      \            merg = merge ff  bb\n\
      \\n\
      \            vals = map snd merg\n\
      \            ix = indices vals\n\
      \\n\
      \            when ix out_filtd\n\
      \            when merg  out_merg\n\
      \            "# } in
Language.Haskell.TH.Quote.quoteExp Automata4QQ.auto sat_s3Iz


Loading package ghc-prim ... linking ... done.
Loading package integer-gmp ... linking ... done.
Loading package base ... linking ... done.
Loading package pretty-1.1.1.1 ... linking ... done.
Loading package array-0.5.0.0 ... linking ... done.
Loading package deepseq-1.3.0.2 ... linking ... done.
Loading package containers-0.5.5.1 ... linking ... done.
Loading package template-haskell ... linking ... done.

==================== CorePrep ====================
Result size of CorePrep
  = {terms: 12,380, types: 15,481, coercions: 16}

Automata4QQEg.puller1
  :: forall a_a4cA.
     [a_a4cA]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Types.IO (Data.Maybe.Maybe a_a4cA) #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType <L,U><L,U>,
 Unf=OtherCon []]
Automata4QQEg.puller1 =
  \ (@ a_a4cA)
    (ls_sgeu [Occ=Once] :: [a_a4cA])
    (eta_sgev [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.Prim.newMutVar#
           @ [a_a4cA] @ GHC.Prim.RealWorld ls_sgeu eta_sgev
    of _ [Occ=Dead] { (# ipv_sgex [Occ=Once], ipv1_sgey #) ->
    let {
      sat_sgeI [Occ=Once] :: GHC.Types.IO (Data.Maybe.Maybe a_a4cA)
      [LclId, Str=DmdType]
      sat_sgeI =
        (\ (s_sgez [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
           case GHC.Prim.readMutVar#
                  @ GHC.Prim.RealWorld @ [a_a4cA] ipv1_sgey s_sgez
           of _ [Occ=Dead]
           { (# ipv2_sgeB [Occ=Once*], ipv3_sgeC [Occ=Once!] #) ->
           case ipv3_sgeC of _ [Occ=Dead] {
             [] -> (# ipv2_sgeB, Data.Maybe.Nothing @ a_a4cA #);
             : i_sgeE [Occ=Once] is_sgeF [Occ=Once] ->
               case GHC.Prim.writeMutVar#
                      @ GHC.Prim.RealWorld @ [a_a4cA] ipv1_sgey is_sgeF ipv2_sgeB
               of s2#_sgeG { __DEFAULT ->
               let {
                 sat_sgeH [Occ=Once] :: Data.Maybe.Maybe a_a4cA
                 [LclId, Str=DmdType]
                 sat_sgeH = Data.Maybe.Just @ a_a4cA i_sgeE } in
               (# s2#_sgeG, sat_sgeH #)
               }
           }
           })
        `cast` (Sym (GHC.Types.NTCo:IO[0] <Data.Maybe.Maybe a_a4cA>_R)
                :: (GHC.Prim.State# GHC.Prim.RealWorld
                    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                          Data.Maybe.Maybe a_a4cA #))
                     ~#
                   GHC.Types.IO (Data.Maybe.Maybe a_a4cA)) } in
    (# ipv_sgex, sat_sgeI #)
    }

Automata4QQEg.puller
  :: forall a_a3qJ.
     [a_a3qJ] -> GHC.Types.IO (GHC.Types.IO (Data.Maybe.Maybe a_a3qJ))
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType <L,U><L,U>,
 Unf=OtherCon []]
Automata4QQEg.puller =
  (\ (@ a_a4cA)
     (eta_B2 [Occ=Once] :: [a_a4cA])
     (eta_B1 [Occ=Once, OS=OneShot]
        :: GHC.Prim.State# GHC.Prim.RealWorld) ->
     Automata4QQEg.puller1 @ a_a4cA eta_B2 eta_B1)
  `cast` (forall a_a4cA.
          <[a_a4cA]>_R
          -> Sym
               (GHC.Types.NTCo:IO[0] <GHC.Types.IO (Data.Maybe.Maybe a_a4cA)>_R)
          :: (forall a_a4cA.
              [a_a4cA]
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    GHC.Types.IO (Data.Maybe.Maybe a_a4cA) #))
               ~#
             (forall a_a4cA.
              [a_a4cA] -> GHC.Types.IO (GHC.Types.IO (Data.Maybe.Maybe a_a4cA))))

inc_rgem :: GHC.Types.Int -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType <S,1*U(U)>m,
 Unf=OtherCon []]
inc_rgem =
  \ (ds_sgeJ [Occ=Once!] :: GHC.Types.Int) ->
    case ds_sgeJ of _ [Occ=Dead] { GHC.Types.I# x_sgeL [Occ=Once] ->
    case GHC.Prim.+# x_sgeL 5 of sat_sgeM { __DEFAULT ->
    GHC.Types.I# sat_sgeM
    }
    }

lvl_rgen :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl_rgen = GHC.CString.unpackCString# "Uninitialised"#

lvl1_rgeo :: GHC.Types.Int
[GblId, Str=DmdType b]
lvl1_rgeo = GHC.Err.error @ GHC.Types.Int lvl_rgen

lvl2_rgep :: (GHC.Types.Int, GHC.Types.Int)
[GblId, Str=DmdType b]
lvl2_rgep = GHC.Err.error @ (GHC.Types.Int, GHC.Types.Int) lvl_rgen

lvl3_rgeq :: GHC.Prim.Any
[GblId, Str=DmdType b]
lvl3_rgeq = GHC.Err.error @ GHC.Prim.Any lvl_rgen

lvl4_rger :: [GHC.Types.Char]
[GblId, Caf=NoCafRefs, Str=DmdType, Unf=OtherCon []]
lvl4_rger =
  GHC.Types.:
    @ GHC.Types.Char GHC.Show.shows12 (GHC.Types.[] @ GHC.Types.Char)

lvl5_rges :: [GHC.Types.Int]
[GblId, Str=DmdType]
lvl5_rges = GHC.Enum.eftInt 5 15

lvl6_rget :: [GHC.Types.Int]
[GblId, Str=DmdType]
lvl6_rget = GHC.Enum.eftInt 1 10

Automata4QQEg.bobo1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
Automata4QQEg.bobo1 =
  \ (eta_sgeN [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.Prim.newMutVar#
           @ [GHC.Types.Int] @ GHC.Prim.RealWorld lvl6_rget eta_sgeN
    of _ [Occ=Dead] { (# ipv_sgeP [Occ=Once], ipv1_sgeQ #) ->
    case GHC.Prim.newMutVar#
           @ [GHC.Types.Int] @ GHC.Prim.RealWorld lvl5_rges ipv_sgeP
    of _ [Occ=Dead] { (# ipv2_sgeS [Occ=Once], ipv3_sgeT #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Types.Int @ GHC.Prim.RealWorld lvl1_rgeo ipv2_sgeS
    of _ [Occ=Dead] { (# ipv4_sgeV [Occ=Once], ipv5_sgeW #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Types.Int @ GHC.Prim.RealWorld lvl1_rgeo ipv4_sgeV
    of _ [Occ=Dead] { (# ipv6_sgeY [Occ=Once], ipv7_sgeZ #) ->
    case GHC.Prim.newMutVar#
           @ (GHC.Types.Int, GHC.Types.Int)
           @ GHC.Prim.RealWorld
           lvl2_rgep
           ipv6_sgeY
    of _ [Occ=Dead] { (# ipv8_sgf1 [Occ=Once], ipv9_sgf2 #) ->
    case GHC.Prim.newMutVar#
           @ (GHC.Types.Int, GHC.Types.Int)
           @ GHC.Prim.RealWorld
           lvl2_rgep
           ipv8_sgf1
    of _ [Occ=Dead] { (# ipv10_sgf4 [Occ=Once], ipv11_sgf5 #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Types.Int @ GHC.Prim.RealWorld lvl1_rgeo ipv10_sgf4
    of _ [Occ=Dead] { (# ipv12_sgf7 [Occ=Once], ipv13_sgf8 #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Types.Int @ GHC.Prim.RealWorld lvl1_rgeo ipv12_sgf7
    of _ [Occ=Dead] { (# ipv14_sgfa [Occ=Once], ipv15_sgfb #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Types.Int @ GHC.Prim.RealWorld lvl1_rgeo ipv14_sgfa
    of _ [Occ=Dead] { (# ipv16_sgfd [Occ=Once], ipv17_sgfe #) ->
    case GHC.Prim.newMutVar#
           @ (GHC.Types.Int, GHC.Types.Int)
           @ GHC.Prim.RealWorld
           lvl2_rgep
           ipv16_sgfd
    of _ [Occ=Dead] { (# ipv18_sgfg [Occ=Once], ipv19_sgfh #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Types.Int @ GHC.Prim.RealWorld lvl1_rgeo ipv18_sgfg
    of _ [Occ=Dead] { (# ipv20_sgfj [Occ=Once], ipv21_sgfk #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Prim.Any @ GHC.Prim.RealWorld lvl3_rgeq ipv20_sgfj
    of _ [Occ=Dead] { (# ipv22_sgfm [Occ=Once], _ [Occ=Dead] #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Prim.Any @ GHC.Prim.RealWorld lvl3_rgeq ipv22_sgfm
    of _ [Occ=Dead] { (# ipv24_sgfp [Occ=Once], _ [Occ=Dead] #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Prim.Any @ GHC.Prim.RealWorld lvl3_rgeq ipv24_sgfp
    of _ [Occ=Dead] { (# ipv26_sgfs [Occ=Once], _ [Occ=Dead] #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Prim.Any @ GHC.Prim.RealWorld lvl3_rgeq ipv26_sgfs
    of _ [Occ=Dead] { (# ipv28_sgfv [Occ=Once], _ [Occ=Dead] #) ->
    case GHC.Prim.newMutVar#
           @ (GHC.Types.Int, GHC.Types.Int)
           @ GHC.Prim.RealWorld
           lvl2_rgep
           ipv28_sgfv
    of _ [Occ=Dead] { (# ipv30_sgfy [Occ=Once], ipv31_sgfz #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Prim.Any @ GHC.Prim.RealWorld lvl3_rgeq ipv30_sgfy
    of _ [Occ=Dead] { (# ipv32_sgfB [Occ=Once], _ [Occ=Dead] #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Prim.Any @ GHC.Prim.RealWorld lvl3_rgeq ipv32_sgfB
    of _ [Occ=Dead] { (# ipv34_sgfE [Occ=Once], _ [Occ=Dead] #) ->
    case GHC.Prim.readMutVar#
           @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ ipv34_sgfE
    of _ [Occ=Dead]
    { (# ipv36_sgfH [Occ=Once*], ipv37_sgfI [Occ=Once!] #) ->
    let {
      a_sgfJ
        :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
      a_sgfJ =
        \ (eta1_sgfK [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
          letrec {
            a1_sgfL [Occ=LoopBreaker]
              :: GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
            [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
            a1_sgfL =
              \ (eta2_sgfM [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                case GHC.Prim.readMutVar#
                       @ GHC.Prim.RealWorld
                       @ (GHC.Types.Int, GHC.Types.Int)
                       ipv31_sgfz
                       eta2_sgfM
                of _ [Occ=Dead]
                { (# ipv38_sgfO [Occ=Once], ipv39_sgfP [Occ=Once] #) ->
                let {
                  ix_sgfQ [Dmd=<L,U(U)>] :: GHC.Types.Int
                  [LclId, Str=DmdType]
                  ix_sgfQ = Automata4Coms.indices_a_get_ix ipv39_sgfP } in
                case GHC.Prim.writeMutVar#
                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv17_sgfe ix_sgfQ ipv38_sgfO
                of s2#_sgfR { __DEFAULT ->
                let {
                  sat_sgfY [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                  [LclId, Str=DmdType]
                  sat_sgfY =
                    let {
                      sat_sgfX [Occ=Once] :: [GHC.Types.Char]
                      [LclId, Str=DmdType]
                      sat_sgfX =
                        case ix_sgfQ of _ [Occ=Dead] { GHC.Types.I# ww3_sgfT [Occ=Once] ->
                        case GHC.Show.$wshowSignedInt
                               0 ww3_sgfT (GHC.Types.[] @ GHC.Types.Char)
                        of _ [Occ=Dead] { (# ww5_sgfV [Occ=Once], ww6_sgfW [Occ=Once] #) ->
                        GHC.Types.: @ GHC.Types.Char ww5_sgfV ww6_sgfW
                        }
                        } } in
                    GHC.CString.unpackAppendCString# "filtd:"# sat_sgfX } in
                case GHC.IO.Handle.Text.hPutStr2
                       GHC.IO.Handle.FD.stdout sat_sgfY GHC.Types.True s2#_sgfR
                of _ [Occ=Dead] { (# ipv40_sgg0 [Occ=Once], _ [Occ=Dead] #) ->
                case GHC.Prim.readMutVar#
                       @ GHC.Prim.RealWorld
                       @ (GHC.Types.Int, GHC.Types.Int)
                       ipv31_sgfz
                       ipv40_sgg0
                of _ [Occ=Dead]
                { (# ipv42_sgg3 [Occ=Once], ipv43_sgg4 [Occ=Once] #) ->
                let {
                  sat_sgg5 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                  [LclId, Str=DmdType]
                  sat_sgg5 = Automata4Coms.indices_a_inc_ix ipv43_sgg4 } in
                case GHC.Prim.writeMutVar#
                       @ GHC.Prim.RealWorld
                       @ (GHC.Types.Int, GHC.Types.Int)
                       ipv31_sgfz
                       sat_sgg5
                       ipv42_sgg3
                of s2#1_sgg6 { __DEFAULT ->
                case GHC.Prim.readMutVar#
                       @ GHC.Prim.RealWorld
                       @ (GHC.Types.Int, GHC.Types.Int)
                       ipv31_sgfz
                       s2#1_sgg6
                of _ [Occ=Dead]
                { (# ipv44_sgg8 [Occ=Once*], ipv45_sgg9 [Occ=Once] #) ->
                case Automata4Coms.indices_a_check ipv45_sgg9 of _ [Occ=Dead] {
                  GHC.Types.False -> (# ipv44_sgg8, GHC.Tuple.() #);
                  GHC.Types.True -> a1_sgfL ipv44_sgg8
                }
                }
                }
                }
                }
                }
                }; } in
          a1_sgfL eta1_sgfK } in
    letrec {
      a2_sggc
        :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
      a2_sggc =
        \ (eta1_sggI [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_sgeZ eta1_sggI
          of _ [Occ=Dead] { (# ipv38_sggK [Occ=Once], ipv39_sggL #) ->
          let {
            sat_sggM [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
            [LclId, Str=DmdType]
            sat_sggM = (ipv39_sggL, ipv39_sggL) } in
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv9_sgf2
                 sat_sggM
                 ipv38_sggK
          of s2#_sggN { __DEFAULT ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv9_sgf2
                 s2#_sggN
          of _ [Occ=Dead] { (# ipv40_sggP [Occ=Once], ipv41_sggQ #) ->
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv19_sgfh
                 ipv41_sggQ
                 ipv40_sggP
          of s2#1_sggR { __DEFAULT ->
          let {
            sat_sghb [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
            [LclId, Str=DmdType]
            sat_sghb =
              let {
                sat_sgha [Occ=Once] :: [GHC.Types.Char]
                [LclId, Str=DmdType]
                sat_sgha =
                  case ipv41_sggQ
                  of _ [Occ=Dead] { (ww1_sggT [Occ=Once!], ww2_sggU [Occ=OnceL!]) ->
                  let {
                    sat_sgh9 [Occ=Once] :: [GHC.Types.Char]
                    [LclId, Str=DmdType]
                    sat_sgh9 =
                      case ww1_sggT of _ [Occ=Dead] { GHC.Types.I# ww4_sggW [Occ=Once] ->
                      let {
                        sat_sgh4 [Occ=Once] :: [GHC.Types.Char]
                        [LclId, Str=DmdType]
                        sat_sgh4 =
                          let {
                            sat_sgh3 [Occ=Once] :: GHC.Base.String -> GHC.Base.String
                            [LclId, Str=DmdType]
                            sat_sgh3 =
                              \ (w2_sggX [Occ=Once] :: GHC.Base.String) ->
                                case ww2_sggU of _ [Occ=Dead] { GHC.Types.I# ww6_sggZ [Occ=Once] ->
                                case GHC.Show.$wshowSignedInt 0 ww6_sggZ w2_sggX
                                of _ [Occ=Dead] { (# ww8_sgh1 [Occ=Once], ww9_sgh2 [Occ=Once] #) ->
                                GHC.Types.: @ GHC.Types.Char ww8_sgh1 ww9_sgh2
                                }
                                } } in
                          GHC.List.foldr1_$sfoldr1
                            @ (GHC.Base.String -> GHC.Base.String)
                            GHC.Show.$fShow(,)1
                            sat_sgh3
                            (GHC.Types.[] @ GHC.Show.ShowS)
                            lvl4_rger } in
                      let {
                        sat_sgh5 [Occ=Once] :: GHC.Base.String
                        [LclId, Str=DmdType]
                        sat_sgh5 =
                          GHC.Types.: @ GHC.Types.Char GHC.Show.showList__1 sat_sgh4 } in
                      case GHC.Show.$wshowSignedInt 0 ww4_sggW sat_sgh5
                      of _ [Occ=Dead] { (# ww6_sgh7 [Occ=Once], ww7_sgh8 [Occ=Once] #) ->
                      GHC.Types.: @ GHC.Types.Char ww6_sgh7 ww7_sgh8
                      }
                      } } in
                  GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgh9
                  } } in
              GHC.CString.unpackAppendCString# "merg: "# sat_sgha } in
          case GHC.IO.Handle.Text.hPutStr2
                 GHC.IO.Handle.FD.stdout sat_sghb GHC.Types.True s2#1_sggR
          of _ [Occ=Dead] { (# ipv42_sghd [Occ=Once], _ [Occ=Dead] #) ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv19_sgfh
                 ipv42_sghd
          of _ [Occ=Dead]
          { (# ipv44_sghg [Occ=Once], ipv45_sghh [Occ=Once] #) ->
          let {
            sat_sghi [Occ=Once] :: GHC.Types.Int
            [LclId, Str=DmdType]
            sat_sghi =
              Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv45_sghh } in
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk sat_sghi ipv44_sghg
          of s2#2_sghj { __DEFAULT ->
          a1_sggb s2#2_sghj
          }
          }
          }
          }
          }
          }
          };
      a3_sggd
        :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
      a3_sggd =
        \ (eta1_sghk [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_sgeT eta1_sghk
          of _ [Occ=Dead]
          { (# ipv38_sghm [Occ=Once*], ipv39_sghn [Occ=Once!] #) ->
          case ipv39_sghn of _ [Occ=Dead] {
            [] -> a_sgfJ ipv38_sghm;
            : i_sghp [Occ=Once] is_sghq [Occ=Once] ->
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_sgeT is_sghq ipv38_sghm
              of s2#_sghr { __DEFAULT ->
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_sgeZ i_sghp s2#_sghr
              of s2#1_sghs { __DEFAULT ->
              a2_sggc s2#1_sghs
              }
              }
          }
          };
      a1_sggb [Occ=LoopBreaker]
        :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
      a1_sggb =
        \ (eta1_sgge [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv31_sgfz
                 eta1_sgge
          of _ [Occ=Dead]
          { (# ipv38_sggg [Occ=Once], ipv39_sggh [Occ=Once] #) ->
          let {
            ix_sggi [Dmd=<L,U(U)>] :: GHC.Types.Int
            [LclId, Str=DmdType]
            ix_sggi = Automata4Coms.indices_a_get_ix ipv39_sggh } in
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv17_sgfe ix_sggi ipv38_sggg
          of s2#_sggj { __DEFAULT ->
          let {
            sat_sggq [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
            [LclId, Str=DmdType]
            sat_sggq =
              let {
                sat_sggp [Occ=Once] :: [GHC.Types.Char]
                [LclId, Str=DmdType]
                sat_sggp =
                  case ix_sggi of _ [Occ=Dead] { GHC.Types.I# ww3_sggl [Occ=Once] ->
                  case GHC.Show.$wshowSignedInt
                         0 ww3_sggl (GHC.Types.[] @ GHC.Types.Char)
                  of _ [Occ=Dead] { (# ww5_sggn [Occ=Once], ww6_sggo [Occ=Once] #) ->
                  GHC.Types.: @ GHC.Types.Char ww5_sggn ww6_sggo
                  }
                  } } in
              GHC.CString.unpackAppendCString# "filtd:"# sat_sggp } in
          case GHC.IO.Handle.Text.hPutStr2
                 GHC.IO.Handle.FD.stdout sat_sggq GHC.Types.True s2#_sggj
          of _ [Occ=Dead] { (# ipv40_sggs [Occ=Once], _ [Occ=Dead] #) ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv31_sgfz
                 ipv40_sggs
          of _ [Occ=Dead]
          { (# ipv42_sggv [Occ=Once], ipv43_sggw [Occ=Once] #) ->
          let {
            sat_sggx [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
            [LclId, Str=DmdType]
            sat_sggx = Automata4Coms.indices_a_inc_ix ipv43_sggw } in
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv31_sgfz
                 sat_sggx
                 ipv42_sggv
          of s2#1_sggy { __DEFAULT ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv31_sgfz
                 s2#1_sggy
          of _ [Occ=Dead]
          { (# ipv44_sggA [Occ=Once*], ipv45_sggB [Occ=Once] #) ->
          case Automata4Coms.indices_a_check ipv45_sggB of _ [Occ=Dead] {
            GHC.Types.False ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv44_sggA
              of _ [Occ=Dead]
              { (# ipv46_sggE [Occ=Once], ipv47_sggF [Occ=Once] #) ->
              let {
                sat_sggG [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                [LclId, Str=DmdType]
                sat_sggG = Automata4Coms.indices_a_init ipv47_sggF } in
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld
                     @ (GHC.Types.Int, GHC.Types.Int)
                     ipv31_sgfz
                     sat_sggG
                     ipv46_sggE
              of s2#2_sggH { __DEFAULT ->
              a3_sggd s2#2_sggH
              }
              };
            GHC.Types.True -> a1_sggb ipv44_sggA
          }
          }
          }
          }
          }
          }
          }; } in
    let {
      a4_sght [Occ=OnceL*!]
        :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
      a4_sght =
        \ (eta1_sghu [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_sgeT eta1_sghu
          of _ [Occ=Dead]
          { (# ipv38_sghw [Occ=Once*], ipv39_sghx [Occ=Once!] #) ->
          case ipv39_sghx of _ [Occ=Dead] {
            [] -> (# ipv38_sghw, GHC.Tuple.() #);
            : i_sghz [Occ=Once] is_sghA [Occ=Once] ->
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_sgeT is_sghA ipv38_sghw
              of s2#_sghB { __DEFAULT ->
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_sgeZ i_sghz s2#_sghB
              of s2#1_sghC { __DEFAULT ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_sgeZ s2#1_sghC
              of _ [Occ=Dead] { (# ipv40_sghE [Occ=Once], ipv41_sghF #) ->
              let {
                sat_sghG [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                [LclId, Str=DmdType]
                sat_sghG = (ipv41_sghF, ipv41_sghF) } in
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld
                     @ (GHC.Types.Int, GHC.Types.Int)
                     ipv9_sgf2
                     sat_sghG
                     ipv40_sghE
              of s2#2_sghH { __DEFAULT ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld
                     @ (GHC.Types.Int, GHC.Types.Int)
                     ipv9_sgf2
                     s2#2_sghH
              of _ [Occ=Dead] { (# ipv42_sghJ [Occ=Once], ipv43_sghK #) ->
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld
                     @ (GHC.Types.Int, GHC.Types.Int)
                     ipv19_sgfh
                     ipv43_sghK
                     ipv42_sghJ
              of s2#3_sghL { __DEFAULT ->
              let {
                sat_sgi5 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                [LclId, Str=DmdType]
                sat_sgi5 =
                  let {
                    sat_sgi4 [Occ=Once] :: [GHC.Types.Char]
                    [LclId, Str=DmdType]
                    sat_sgi4 =
                      case ipv43_sghK
                      of _ [Occ=Dead] { (ww1_sghN [Occ=Once!], ww2_sghO [Occ=OnceL!]) ->
                      let {
                        sat_sgi3 [Occ=Once] :: [GHC.Types.Char]
                        [LclId, Str=DmdType]
                        sat_sgi3 =
                          case ww1_sghN of _ [Occ=Dead] { GHC.Types.I# ww4_sghQ [Occ=Once] ->
                          let {
                            sat_sghY [Occ=Once] :: [GHC.Types.Char]
                            [LclId, Str=DmdType]
                            sat_sghY =
                              let {
                                sat_sghX [Occ=Once] :: GHC.Base.String -> GHC.Base.String
                                [LclId, Str=DmdType]
                                sat_sghX =
                                  \ (w2_sghR [Occ=Once] :: GHC.Base.String) ->
                                    case ww2_sghO
                                    of _ [Occ=Dead] { GHC.Types.I# ww6_sghT [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt 0 ww6_sghT w2_sghR
                                    of _ [Occ=Dead]
                                    { (# ww8_sghV [Occ=Once], ww9_sghW [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww8_sghV ww9_sghW
                                    }
                                    } } in
                              GHC.List.foldr1_$sfoldr1
                                @ (GHC.Base.String -> GHC.Base.String)
                                GHC.Show.$fShow(,)1
                                sat_sghX
                                (GHC.Types.[] @ GHC.Show.ShowS)
                                lvl4_rger } in
                          let {
                            sat_sghZ [Occ=Once] :: GHC.Base.String
                            [LclId, Str=DmdType]
                            sat_sghZ =
                              GHC.Types.: @ GHC.Types.Char GHC.Show.showList__1 sat_sghY } in
                          case GHC.Show.$wshowSignedInt 0 ww4_sghQ sat_sghZ
                          of _ [Occ=Dead] { (# ww6_sgi1 [Occ=Once], ww7_sgi2 [Occ=Once] #) ->
                          GHC.Types.: @ GHC.Types.Char ww6_sgi1 ww7_sgi2
                          }
                          } } in
                      GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgi3
                      } } in
                  GHC.CString.unpackAppendCString# "merg: "# sat_sgi4 } in
              case GHC.IO.Handle.Text.hPutStr2
                     GHC.IO.Handle.FD.stdout sat_sgi5 GHC.Types.True s2#3_sghL
              of _ [Occ=Dead] { (# ipv44_sgi7 [Occ=Once], _ [Occ=Dead] #) ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld
                     @ (GHC.Types.Int, GHC.Types.Int)
                     ipv19_sgfh
                     ipv44_sgi7
              of _ [Occ=Dead]
              { (# ipv46_sgia [Occ=Once], ipv47_sgib [Occ=Once] #) ->
              let {
                sat_sgic [Occ=Once] :: GHC.Types.Int
                [LclId, Str=DmdType]
                sat_sgic =
                  Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv47_sgib } in
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk sat_sgic ipv46_sgia
              of s2#4_sgid { __DEFAULT ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk s2#4_sgid
              of _ [Occ=Dead]
              { (# ipv48_sgif [Occ=Once], ipv49_sgig [Occ=Once] #) ->
              let {
                sat_sgih [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                [LclId, Str=DmdType]
                sat_sgih = Automata4Coms.indices_a_init ipv49_sgig } in
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld
                     @ (GHC.Types.Int, GHC.Types.Int)
                     ipv31_sgfz
                     sat_sgih
                     ipv48_sgif
              of s2#5_sgii { __DEFAULT ->
              a3_sggd s2#5_sgii
              }
              }
              }
              }
              }
              }
              }
              }
              }
              }
              }
          }
          } } in
    case ipv37_sgfI of _ [Occ=Dead] {
      [] -> a4_sght ipv36_sgfH;
      : i_sgik [Occ=Once] is_sgil [Occ=Once] ->
        case GHC.Prim.writeMutVar#
               @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ is_sgil ipv36_sgfH
        of s2#_sgim { __DEFAULT ->
        case GHC.Prim.writeMutVar#
               @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_sgeW i_sgik s2#_sgim
        of s2#1_sgin { __DEFAULT ->
        letrec {
          a5_sgio [Occ=LoopBreaker]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
          a5_sgio =
            \ (eta1_sgip [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_sgeW eta1_sgip
              of _ [Occ=Dead]
              { (# ipv38_sgir [Occ=Once], ipv39_sgis [Occ=Once] #) ->
              let {
                sat_sgit [Occ=Once] :: GHC.Types.Int
                [LclId, Str=DmdType]
                sat_sgit = inc_rgem ipv39_sgis } in
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb sat_sgit ipv38_sgir
              of s2#2_sgiu { __DEFAULT ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb s2#2_sgiu
              of _ [Occ=Dead]
              { (# ipv40_sgiw [Occ=Once*], ipv41_sgix [Occ=Once!] #) ->
              case ipv41_sgix of _ [Occ=Dead] { GHC.Types.I# x_sgiz [Occ=Once] ->
              case GHC.Prim.># x_sgiz 10 of sat_sgiA { __DEFAULT ->
              case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_sgiA
              of _ [Occ=Dead] {
                GHC.Types.False ->
                  case GHC.Prim.readMutVar#
                         @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ ipv40_sgiw
                  of _ [Occ=Dead]
                  { (# ipv42_sgiD [Occ=Once*], ipv43_sgiE [Occ=Once!] #) ->
                  case ipv43_sgiE of _ [Occ=Dead] {
                    [] -> a4_sght ipv42_sgiD;
                    : i1_sgiG [Occ=Once] is1_sgiH [Occ=Once] ->
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ [GHC.Types.Int]
                             ipv1_sgeQ
                             is1_sgiH
                             ipv42_sgiD
                      of s2#3_sgiI { __DEFAULT ->
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_sgeW i1_sgiG s2#3_sgiI
                      of s2#4_sgiJ { __DEFAULT ->
                      a5_sgio s2#4_sgiJ
                      }
                      }
                  }
                  };
                GHC.Types.True ->
                  case GHC.Prim.readMutVar#
                         @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb ipv40_sgiw
                  of _ [Occ=Dead]
                  { (# ipv42_sgiL [Occ=Once], ipv43_sgiM [Occ=Once] #) ->
                  case GHC.Prim.writeMutVar#
                         @ GHC.Prim.RealWorld
                         @ GHC.Types.Int
                         ipv13_sgf8
                         ipv43_sgiM
                         ipv42_sgiL
                  of s2#3_sgiN { __DEFAULT ->
                  case GHC.Prim.readMutVar#
                         @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_sgf8 s2#3_sgiN
                  of _ [Occ=Dead] { (# ipv44_sgiP [Occ=Once], ipv45_sgiQ #) ->
                  let {
                    sat_sgiR [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                    [LclId, Str=DmdType]
                    sat_sgiR = (ipv45_sgiQ, ipv45_sgiQ) } in
                  case GHC.Prim.writeMutVar#
                         @ GHC.Prim.RealWorld
                         @ (GHC.Types.Int, GHC.Types.Int)
                         ipv11_sgf5
                         sat_sgiR
                         ipv44_sgiP
                  of s2#4_sgiS { __DEFAULT ->
                  case GHC.Prim.readMutVar#
                         @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_sgeT s2#4_sgiS
                  of _ [Occ=Dead]
                  { (# ipv46_sgiU [Occ=Once*], ipv47_sgiV [Occ=Once!] #) ->
                  case ipv47_sgiV of _ [Occ=Dead] {
                    [] ->
                      letrec {
                        a7_sgiY [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a7_sgiY =
                          \ (eta2_sgjZ [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_sgjZ
                            of _ [Occ=Dead]
                            { (# ipv48_sgk1 [Occ=Once], ipv49_sgk2 [Occ=Once] #) ->
                            let {
                              ix_sgk3 [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_sgk3 = Automata4Coms.indices_a_get_ix ipv49_sgk2 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_sgk3
                                   ipv48_sgk1
                            of s2#5_sgk4 { __DEFAULT ->
                            let {
                              sat_sgkb [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sgkb =
                                let {
                                  sat_sgka [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sgka =
                                    case ix_sgk3
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_sgk6 [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_sgk6 (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_sgk8 [Occ=Once], ww6_sgk9 [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_sgk8 ww6_sgk9
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_sgka } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sgkb GHC.Types.True s2#5_sgk4
                            of _ [Occ=Dead] { (# ipv50_sgkd [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv50_sgkd
                            of _ [Occ=Dead]
                            { (# ipv52_sgkg [Occ=Once], ipv53_sgkh [Occ=Once] #) ->
                            let {
                              sat_sgki [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_sgki = Automata4Coms.indices_a_inc_ix ipv53_sgkh } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_sgki
                                   ipv52_sgkg
                            of s2#6_sgkj { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#6_sgkj
                            of _ [Occ=Dead]
                            { (# ipv54_sgkl [Occ=Once*], ipv55_sgkm [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv55_sgkm of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv54_sgkl
                                of _ [Occ=Dead]
                                { (# ipv56_sgkp [Occ=Once], ipv57_sgkq [Occ=Once] #) ->
                                let {
                                  sat_sgkr [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sgkr = Automata4Coms.indices_a_init ipv57_sgkq } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_sgkr
                                       ipv56_sgkp
                                of s2#7_sgks { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ s2#7_sgks
                                of _ [Occ=Dead]
                                { (# ipv58_sgku [Occ=Once*], ipv59_sgkv [Occ=Once!] #) ->
                                case ipv59_sgkv of _ [Occ=Dead] {
                                  [] -> a_sgfJ ipv58_sgku;
                                  : i1_sgkx [Occ=Once] is1_sgky [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_sgeQ
                                           is1_sgky
                                           ipv58_sgku
                                    of s2#8_sgkz { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_sgeW
                                           i1_sgkx
                                           s2#8_sgkz
                                    of s2#9_sgkA { __DEFAULT ->
                                    a6_sgiX s2#9_sgkA
                                    }
                                    }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a7_sgiY ipv54_sgkl
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a6_sgiX [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a6_sgiX =
                          \ (eta2_sgiZ [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_sgeW eta2_sgiZ
                            of _ [Occ=Dead]
                            { (# ipv48_sgj1 [Occ=Once], ipv49_sgj2 [Occ=Once] #) ->
                            let {
                              sat_sgj3 [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sgj3 = inc_rgem ipv49_sgj2 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv15_sgfb
                                   sat_sgj3
                                   ipv48_sgj1
                            of s2#5_sgj4 { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb s2#5_sgj4
                            of _ [Occ=Dead]
                            { (# ipv50_sgj6 [Occ=Once*], ipv51_sgj7 [Occ=Once!] #) ->
                            case ipv51_sgj7
                            of _ [Occ=Dead] { GHC.Types.I# x1_sgj9 [Occ=Once] ->
                            case GHC.Prim.># x1_sgj9 10 of sat_sgja { __DEFAULT ->
                            case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_sgja
                            of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ ipv50_sgj6
                                of _ [Occ=Dead]
                                { (# ipv52_sgjd [Occ=Once*], ipv53_sgje [Occ=Once!] #) ->
                                case ipv53_sgje of _ [Occ=Dead] {
                                  [] -> a_sgfJ ipv52_sgjd;
                                  : i1_sgjg [Occ=Once] is1_sgjh [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_sgeQ
                                           is1_sgjh
                                           ipv52_sgjd
                                    of s2#6_sgji { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_sgeW
                                           i1_sgjg
                                           s2#6_sgji
                                    of s2#7_sgjj { __DEFAULT ->
                                    a6_sgiX s2#7_sgjj
                                    }
                                    }
                                }
                                };
                              GHC.Types.True ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb ipv50_sgj6
                                of _ [Occ=Dead]
                                { (# ipv52_sgjl [Occ=Once], ipv53_sgjm [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_sgf8
                                       ipv53_sgjm
                                       ipv52_sgjl
                                of s2#6_sgjn { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_sgf8 s2#6_sgjn
                                of _ [Occ=Dead] { (# ipv54_sgjp [Occ=Once], ipv55_sgjq #) ->
                                let {
                                  sat_sgjr [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sgjr = (ipv55_sgjq, ipv55_sgjq) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       sat_sgjr
                                       ipv54_sgjp
                                of s2#7_sgjs { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       s2#7_sgjs
                                of _ [Occ=Dead] { (# ipv56_sgju [Occ=Once], ipv57_sgjv #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv19_sgfh
                                       ipv57_sgjv
                                       ipv56_sgju
                                of s2#8_sgjw { __DEFAULT ->
                                let {
                                  sat_sgjQ [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                  [LclId, Str=DmdType]
                                  sat_sgjQ =
                                    let {
                                      sat_sgjP [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_sgjP =
                                        case ipv57_sgjv
                                        of _ [Occ=Dead]
                                        { (ww1_sgjy [Occ=Once!], ww2_sgjz [Occ=OnceL!]) ->
                                        let {
                                          sat_sgjO [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgjO =
                                            case ww1_sgjy
                                            of _ [Occ=Dead] { GHC.Types.I# ww4_sgjB [Occ=Once] ->
                                            let {
                                              sat_sgjJ [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sgjJ =
                                                let {
                                                  sat_sgjI [Occ=Once]
                                                    :: GHC.Base.String -> GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sgjI =
                                                    \ (w2_sgjC [Occ=Once] :: GHC.Base.String) ->
                                                      case ww2_sgjz
                                                      of _ [Occ=Dead]
                                                      { GHC.Types.I# ww6_sgjE [Occ=Once] ->
                                                      case GHC.Show.$wshowSignedInt
                                                             0 ww6_sgjE w2_sgjC
                                                      of _ [Occ=Dead]
                                                      { (# ww8_sgjG [Occ=Once], ww9_sgjH [Occ=Once] #) ->
                                                      GHC.Types.: @ GHC.Types.Char ww8_sgjG ww9_sgjH
                                                      }
                                                      } } in
                                                GHC.List.foldr1_$sfoldr1
                                                  @ (GHC.Base.String -> GHC.Base.String)
                                                  GHC.Show.$fShow(,)1
                                                  sat_sgjI
                                                  (GHC.Types.[] @ GHC.Show.ShowS)
                                                  lvl4_rger } in
                                            let {
                                              sat_sgjK [Occ=Once] :: GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_sgjK =
                                                GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.showList__1
                                                  sat_sgjJ } in
                                            case GHC.Show.$wshowSignedInt 0 ww4_sgjB sat_sgjK
                                            of _ [Occ=Dead]
                                            { (# ww6_sgjM [Occ=Once], ww7_sgjN [Occ=Once] #) ->
                                            GHC.Types.: @ GHC.Types.Char ww6_sgjM ww7_sgjN
                                            }
                                            } } in
                                        GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgjO
                                        } } in
                                    GHC.CString.unpackAppendCString# "merg: "# sat_sgjP } in
                                case GHC.IO.Handle.Text.hPutStr2
                                       GHC.IO.Handle.FD.stdout sat_sgjQ GHC.Types.True s2#8_sgjw
                                of _ [Occ=Dead] { (# ipv58_sgjS [Occ=Once], _ [Occ=Dead] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv19_sgfh
                                       ipv58_sgjS
                                of _ [Occ=Dead]
                                { (# ipv60_sgjV [Occ=Once], ipv61_sgjW [Occ=Once] #) ->
                                let {
                                  sat_sgjX [Occ=Once] :: GHC.Types.Int
                                  [LclId, Str=DmdType]
                                  sat_sgjX =
                                    Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv61_sgjW } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv21_sgfk
                                       sat_sgjX
                                       ipv60_sgjV
                                of s2#9_sgjY { __DEFAULT ->
                                a7_sgiY s2#9_sgjY
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                            }
                            }
                            }
                            }
                            }
                            }; } in
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int)
                             ipv11_sgf5
                             ipv46_sgiU
                      of _ [Occ=Dead] { (# ipv48_sgkC [Occ=Once], ipv49_sgkD #) ->
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int)
                             ipv19_sgfh
                             ipv49_sgkD
                             ipv48_sgkC
                      of s2#5_sgkE { __DEFAULT ->
                      let {
                        sat_sgkY [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                        [LclId, Str=DmdType]
                        sat_sgkY =
                          let {
                            sat_sgkX [Occ=Once] :: [GHC.Types.Char]
                            [LclId, Str=DmdType]
                            sat_sgkX =
                              case ipv49_sgkD
                              of _ [Occ=Dead] { (ww1_sgkG [Occ=Once!], ww2_sgkH [Occ=OnceL!]) ->
                              let {
                                sat_sgkW [Occ=Once] :: [GHC.Types.Char]
                                [LclId, Str=DmdType]
                                sat_sgkW =
                                  case ww1_sgkG
                                  of _ [Occ=Dead] { GHC.Types.I# ww4_sgkJ [Occ=Once] ->
                                  let {
                                    sat_sgkR [Occ=Once] :: [GHC.Types.Char]
                                    [LclId, Str=DmdType]
                                    sat_sgkR =
                                      let {
                                        sat_sgkQ [Occ=Once] :: GHC.Base.String -> GHC.Base.String
                                        [LclId, Str=DmdType]
                                        sat_sgkQ =
                                          \ (w2_sgkK [Occ=Once] :: GHC.Base.String) ->
                                            case ww2_sgkH
                                            of _ [Occ=Dead] { GHC.Types.I# ww6_sgkM [Occ=Once] ->
                                            case GHC.Show.$wshowSignedInt 0 ww6_sgkM w2_sgkK
                                            of _ [Occ=Dead]
                                            { (# ww8_sgkO [Occ=Once], ww9_sgkP [Occ=Once] #) ->
                                            GHC.Types.: @ GHC.Types.Char ww8_sgkO ww9_sgkP
                                            }
                                            } } in
                                      GHC.List.foldr1_$sfoldr1
                                        @ (GHC.Base.String -> GHC.Base.String)
                                        GHC.Show.$fShow(,)1
                                        sat_sgkQ
                                        (GHC.Types.[] @ GHC.Show.ShowS)
                                        lvl4_rger } in
                                  let {
                                    sat_sgkS [Occ=Once] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_sgkS =
                                      GHC.Types.:
                                        @ GHC.Types.Char GHC.Show.showList__1 sat_sgkR } in
                                  case GHC.Show.$wshowSignedInt 0 ww4_sgkJ sat_sgkS
                                  of _ [Occ=Dead]
                                  { (# ww6_sgkU [Occ=Once], ww7_sgkV [Occ=Once] #) ->
                                  GHC.Types.: @ GHC.Types.Char ww6_sgkU ww7_sgkV
                                  }
                                  } } in
                              GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgkW
                              } } in
                          GHC.CString.unpackAppendCString# "merg: "# sat_sgkX } in
                      case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout sat_sgkY GHC.Types.True s2#5_sgkE
                      of _ [Occ=Dead] { (# ipv50_sgl0 [Occ=Once], _ [Occ=Dead] #) ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int)
                             ipv19_sgfh
                             ipv50_sgl0
                      of _ [Occ=Dead]
                      { (# ipv52_sgl3 [Occ=Once], ipv53_sgl4 [Occ=Once] #) ->
                      let {
                        sat_sgl5 [Occ=Once] :: GHC.Types.Int
                        [LclId, Str=DmdType]
                        sat_sgl5 =
                          Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv53_sgl4 } in
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk sat_sgl5 ipv52_sgl3
                      of s2#6_sgl6 { __DEFAULT ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk s2#6_sgl6
                      of _ [Occ=Dead]
                      { (# ipv54_sgl8 [Occ=Once], ipv55_sgl9 [Occ=Once] #) ->
                      let {
                        sat_sgla [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                        [LclId, Str=DmdType]
                        sat_sgla = Automata4Coms.indices_a_init ipv55_sgl9 } in
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int)
                             ipv31_sgfz
                             sat_sgla
                             ipv54_sgl8
                      of s2#7_sglb { __DEFAULT ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ s2#7_sglb
                      of _ [Occ=Dead]
                      { (# ipv56_sgld [Occ=Once*], ipv57_sgle [Occ=Once!] #) ->
                      case ipv57_sgle of _ [Occ=Dead] {
                        [] -> a_sgfJ ipv56_sgld;
                        : i1_sglg [Occ=Once] is1_sglh [Occ=Once] ->
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ [GHC.Types.Int]
                                 ipv1_sgeQ
                                 is1_sglh
                                 ipv56_sgld
                          of s2#8_sgli { __DEFAULT ->
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_sgeW i1_sglg s2#8_sgli
                          of s2#9_sglj { __DEFAULT ->
                          a6_sgiX s2#9_sglj
                          }
                          }
                      }
                      }
                      }
                      }
                      }
                      }
                      }
                      }
                      };
                    : i1_sglk [Occ=Once] is1_sgll [Occ=Once] ->
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ [GHC.Types.Int]
                             ipv3_sgeT
                             is1_sgll
                             ipv46_sgiU
                      of s2#5_sglm { __DEFAULT ->
                      letrec {
                        a7_sglo [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a7_sglo =
                          \ (eta2_sglX [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_sgeW eta2_sglX
                            of _ [Occ=Dead]
                            { (# ipv48_sglZ [Occ=Once], ipv49_sgm0 [Occ=Once] #) ->
                            let {
                              sat_sgm1 [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sgm1 = inc_rgem ipv49_sgm0 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv15_sgfb
                                   sat_sgm1
                                   ipv48_sglZ
                            of s2#6_sgm2 { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb s2#6_sgm2
                            of _ [Occ=Dead]
                            { (# ipv50_sgm4 [Occ=Once*], ipv51_sgm5 [Occ=Once!] #) ->
                            case ipv51_sgm5
                            of _ [Occ=Dead] { GHC.Types.I# x1_sgm7 [Occ=Once] ->
                            case GHC.Prim.># x1_sgm7 10 of sat_sgm8 { __DEFAULT ->
                            case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_sgm8
                            of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ ipv50_sgm4
                                of _ [Occ=Dead]
                                { (# ipv52_sgmb [Occ=Once*], ipv53_sgmc [Occ=Once!] #) ->
                                case ipv53_sgmc of _ [Occ=Dead] {
                                  [] -> a_sgfJ ipv52_sgmb;
                                  : i2_sgme [Occ=Once] is2_sgmf [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_sgeQ
                                           is2_sgmf
                                           ipv52_sgmb
                                    of s2#7_sgmg { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_sgeW
                                           i2_sgme
                                           s2#7_sgmg
                                    of s2#8_sgmh { __DEFAULT ->
                                    a7_sglo s2#8_sgmh
                                    }
                                    }
                                }
                                };
                              GHC.Types.True ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb ipv50_sgm4
                                of _ [Occ=Dead]
                                { (# ipv52_sgmj [Occ=Once], ipv53_sgmk [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_sgf8
                                       ipv53_sgmk
                                       ipv52_sgmj
                                of s2#7_sgml { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_sgf8 s2#7_sgml
                                of _ [Occ=Dead] { (# ipv54_sgmn [Occ=Once], ipv55_sgmo #) ->
                                let {
                                  sat_sgmp [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sgmp = (ipv55_sgmo, ipv55_sgmo) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       sat_sgmp
                                       ipv54_sgmn
                                of s2#8_sgmq { __DEFAULT ->
                                a6_sgln s2#8_sgmq
                                }
                                }
                                }
                                }
                            }
                            }
                            }
                            }
                            }
                            };
                        a8_sglp [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a8_sglp =
                          \ (eta2_sgmr [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_sgmr
                            of _ [Occ=Dead]
                            { (# ipv48_sgmt [Occ=Once], ipv49_sgmu [Occ=Once] #) ->
                            let {
                              ix_sgmv [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_sgmv = Automata4Coms.indices_a_get_ix ipv49_sgmu } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_sgmv
                                   ipv48_sgmt
                            of s2#6_sgmw { __DEFAULT ->
                            let {
                              sat_sgmD [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sgmD =
                                let {
                                  sat_sgmC [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sgmC =
                                    case ix_sgmv
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_sgmy [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_sgmy (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_sgmA [Occ=Once], ww6_sgmB [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_sgmA ww6_sgmB
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_sgmC } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sgmD GHC.Types.True s2#6_sgmw
                            of _ [Occ=Dead] { (# ipv50_sgmF [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv50_sgmF
                            of _ [Occ=Dead]
                            { (# ipv52_sgmI [Occ=Once], ipv53_sgmJ [Occ=Once] #) ->
                            let {
                              sat_sgmK [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_sgmK = Automata4Coms.indices_a_inc_ix ipv53_sgmJ } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_sgmK
                                   ipv52_sgmI
                            of s2#7_sgmL { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#7_sgmL
                            of _ [Occ=Dead]
                            { (# ipv54_sgmN [Occ=Once*], ipv55_sgmO [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv55_sgmO of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv54_sgmN
                                of _ [Occ=Dead]
                                { (# ipv56_sgmR [Occ=Once], ipv57_sgmS [Occ=Once] #) ->
                                let {
                                  sat_sgmT [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sgmT = Automata4Coms.indices_a_init ipv57_sgmS } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_sgmT
                                       ipv56_sgmR
                                of s2#8_sgmU { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ s2#8_sgmU
                                of _ [Occ=Dead]
                                { (# ipv58_sgmW [Occ=Once*], ipv59_sgmX [Occ=Once!] #) ->
                                case ipv59_sgmX of _ [Occ=Dead] {
                                  [] -> a_sgfJ ipv58_sgmW;
                                  : i2_sgmZ [Occ=Once] is2_sgn0 [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_sgeQ
                                           is2_sgn0
                                           ipv58_sgmW
                                    of s2#9_sgn1 { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_sgeW
                                           i2_sgmZ
                                           s2#9_sgn1
                                    of s2#10_sgn2 { __DEFAULT ->
                                    a7_sglo s2#10_sgn2
                                    }
                                    }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a8_sglp ipv54_sgmN
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a6_sgln [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a6_sgln =
                          \ (eta2_sglq [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv11_sgf5
                                   eta2_sglq
                            of _ [Occ=Dead] { (# ipv48_sgls [Occ=Once], ipv49_sglt #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv49_sglt
                                   ipv48_sgls
                            of s2#6_sglu { __DEFAULT ->
                            let {
                              sat_sglO [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sglO =
                                let {
                                  sat_sglN [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sglN =
                                    case ipv49_sglt
                                    of _ [Occ=Dead]
                                    { (ww1_sglw [Occ=Once!], ww2_sglx [Occ=OnceL!]) ->
                                    let {
                                      sat_sglM [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_sglM =
                                        case ww1_sglw
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_sglz [Occ=Once] ->
                                        let {
                                          sat_sglH [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sglH =
                                            let {
                                              sat_sglG [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_sglG =
                                                \ (w2_sglA [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_sglx
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_sglC [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_sglC w2_sglA
                                                  of _ [Occ=Dead]
                                                  { (# ww8_sglE [Occ=Once], ww9_sglF [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_sglE ww9_sglF
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_sglG
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_sglI [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_sglI =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_sglH } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_sglz sat_sglI
                                        of _ [Occ=Dead]
                                        { (# ww6_sglK [Occ=Once], ww7_sglL [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_sglK ww7_sglL
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sglM
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_sglN } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sglO GHC.Types.True s2#6_sglu
                            of _ [Occ=Dead] { (# ipv50_sglQ [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv50_sglQ
                            of _ [Occ=Dead]
                            { (# ipv52_sglT [Occ=Once], ipv53_sglU [Occ=Once] #) ->
                            let {
                              sat_sglV [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sglV =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv53_sglU } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_sgfk
                                   sat_sglV
                                   ipv52_sglT
                            of s2#7_sglW { __DEFAULT ->
                            a8_sglp s2#7_sglW
                            }
                            }
                            }
                            }
                            }; } in
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_sgeZ i1_sglk s2#5_sglm
                      of s2#6_sgn3 { __DEFAULT ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_sgeZ s2#6_sgn3
                      of _ [Occ=Dead] { (# ipv48_sgn5 [Occ=Once], ipv49_sgn6 #) ->
                      let {
                        sat_sgn7 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                        [LclId, Str=DmdType]
                        sat_sgn7 = (ipv49_sgn6, ipv49_sgn6) } in
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int)
                             ipv9_sgf2
                             sat_sgn7
                             ipv48_sgn5
                      of s2#7_sgn8 { __DEFAULT ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int)
                             ipv11_sgf5
                             s2#7_sgn8
                      of _ [Occ=Dead]
                      { (# ipv50_sgna [Occ=Once], ipv51_sgnb [Occ=Once] #) ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int)
                             ipv9_sgf2
                             ipv50_sgna
                      of _ [Occ=Dead]
                      { (# ipv52_sgnd [Occ=Once*], ipv53_sgne [Occ=Once] #) ->
                      let {
                        a9_sgnf
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a9_sgnf =
                          \ (eta2_sgng [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv11_sgf5
                                   eta2_sgng
                            of _ [Occ=Dead] { (# ipv54_sgni [Occ=Once], ipv55_sgnj #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv55_sgnj
                                   ipv54_sgni
                            of s2#8_sgnk { __DEFAULT ->
                            let {
                              sat_sgnE [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sgnE =
                                let {
                                  sat_sgnD [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sgnD =
                                    case ipv55_sgnj
                                    of _ [Occ=Dead]
                                    { (ww1_sgnm [Occ=Once!], ww2_sgnn [Occ=OnceL!]) ->
                                    let {
                                      sat_sgnC [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_sgnC =
                                        case ww1_sgnm
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_sgnp [Occ=Once] ->
                                        let {
                                          sat_sgnx [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgnx =
                                            let {
                                              sat_sgnw [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_sgnw =
                                                \ (w2_sgnq [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_sgnn
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_sgns [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_sgns w2_sgnq
                                                  of _ [Occ=Dead]
                                                  { (# ww8_sgnu [Occ=Once], ww9_sgnv [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_sgnu ww9_sgnv
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_sgnw
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_sgny [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_sgny =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_sgnx } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_sgnp sat_sgny
                                        of _ [Occ=Dead]
                                        { (# ww6_sgnA [Occ=Once], ww7_sgnB [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_sgnA ww7_sgnB
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgnC
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_sgnD } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sgnE GHC.Types.True s2#8_sgnk
                            of _ [Occ=Dead] { (# ipv56_sgnG [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv56_sgnG
                            of _ [Occ=Dead]
                            { (# ipv58_sgnJ [Occ=Once], ipv59_sgnK [Occ=Once] #) ->
                            let {
                              sat_sgnL [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sgnL =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_sgnK } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_sgfk
                                   sat_sgnL
                                   ipv58_sgnJ
                            of s2#9_sgnM { __DEFAULT ->
                            letrec {
                              a10_sgnN [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a10_sgnN =
                                \ (eta3_sgnO [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         eta3_sgnO
                                  of _ [Occ=Dead]
                                  { (# ipv60_sgnQ [Occ=Once], ipv61_sgnR [Occ=Once] #) ->
                                  let {
                                    ix_sgnS [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_sgnS = Automata4Coms.indices_a_get_ix ipv61_sgnR } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_sgfe
                                         ix_sgnS
                                         ipv60_sgnQ
                                  of s2#10_sgnT { __DEFAULT ->
                                  let {
                                    sat_sgo0 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_sgo0 =
                                      let {
                                        sat_sgnZ [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_sgnZ =
                                          case ix_sgnS
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_sgnV [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_sgnV (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_sgnX [Occ=Once], ww6_sgnY [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_sgnX ww6_sgnY
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_sgnZ } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_sgo0 GHC.Types.True s2#10_sgnT
                                  of _ [Occ=Dead] { (# ipv62_sgo2 [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         ipv62_sgo2
                                  of _ [Occ=Dead]
                                  { (# ipv64_sgo5 [Occ=Once], ipv65_sgo6 [Occ=Once] #) ->
                                  let {
                                    sat_sgo7 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_sgo7 = Automata4Coms.indices_a_inc_ix ipv65_sgo6 } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         sat_sgo7
                                         ipv64_sgo5
                                  of s2#11_sgo8 { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         s2#11_sgo8
                                  of _ [Occ=Dead]
                                  { (# ipv66_sgoa [Occ=Once*], ipv67_sgob [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv67_sgob of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_sgfk
                                             ipv66_sgoa
                                      of _ [Occ=Dead]
                                      { (# ipv68_sgoe [Occ=Once], ipv69_sgof [Occ=Once] #) ->
                                      let {
                                        sat_sgog [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sgog = Automata4Coms.indices_a_init ipv69_sgof } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_sgfz
                                             sat_sgog
                                             ipv68_sgoe
                                      of s2#12_sgoh { __DEFAULT ->
                                      a_sgfJ s2#12_sgoh
                                      }
                                      };
                                    GHC.Types.True -> a10_sgnN ipv66_sgoa
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a10_sgnN s2#9_sgnM
                            }
                            }
                            }
                            }
                            } } in
                      let {
                        a10_sgoi
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a10_sgoi =
                          \ (eta2_sgoj [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv11_sgf5
                                   eta2_sgoj
                            of _ [Occ=Dead] { (# ipv54_sgol [Occ=Once], ipv55_sgom #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv55_sgom
                                   ipv54_sgol
                            of s2#8_sgon { __DEFAULT ->
                            let {
                              sat_sgoH [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sgoH =
                                let {
                                  sat_sgoG [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sgoG =
                                    case ipv55_sgom
                                    of _ [Occ=Dead]
                                    { (ww1_sgop [Occ=Once!], ww2_sgoq [Occ=OnceL!]) ->
                                    let {
                                      sat_sgoF [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_sgoF =
                                        case ww1_sgop
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_sgos [Occ=Once] ->
                                        let {
                                          sat_sgoA [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgoA =
                                            let {
                                              sat_sgoz [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_sgoz =
                                                \ (w2_sgot [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_sgoq
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_sgov [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_sgov w2_sgot
                                                  of _ [Occ=Dead]
                                                  { (# ww8_sgox [Occ=Once], ww9_sgoy [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_sgox ww9_sgoy
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_sgoz
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_sgoB [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_sgoB =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_sgoA } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_sgos sat_sgoB
                                        of _ [Occ=Dead]
                                        { (# ww6_sgoD [Occ=Once], ww7_sgoE [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_sgoD ww7_sgoE
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgoF
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_sgoG } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sgoH GHC.Types.True s2#8_sgon
                            of _ [Occ=Dead] { (# ipv56_sgoJ [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv56_sgoJ
                            of _ [Occ=Dead]
                            { (# ipv58_sgoM [Occ=Once], ipv59_sgoN [Occ=Once] #) ->
                            let {
                              sat_sgoO [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sgoO =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_sgoN } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_sgfk
                                   sat_sgoO
                                   ipv58_sgoM
                            of s2#9_sgoP { __DEFAULT ->
                            letrec {
                              a11_sgoQ [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a11_sgoQ =
                                \ (eta3_sgoR [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         eta3_sgoR
                                  of _ [Occ=Dead]
                                  { (# ipv60_sgoT [Occ=Once], ipv61_sgoU [Occ=Once] #) ->
                                  let {
                                    ix_sgoV [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_sgoV = Automata4Coms.indices_a_get_ix ipv61_sgoU } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_sgfe
                                         ix_sgoV
                                         ipv60_sgoT
                                  of s2#10_sgoW { __DEFAULT ->
                                  let {
                                    sat_sgp3 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_sgp3 =
                                      let {
                                        sat_sgp2 [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_sgp2 =
                                          case ix_sgoV
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_sgoY [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_sgoY (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_sgp0 [Occ=Once], ww6_sgp1 [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_sgp0 ww6_sgp1
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_sgp2 } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_sgp3 GHC.Types.True s2#10_sgoW
                                  of _ [Occ=Dead] { (# ipv62_sgp5 [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         ipv62_sgp5
                                  of _ [Occ=Dead]
                                  { (# ipv64_sgp8 [Occ=Once], ipv65_sgp9 [Occ=Once] #) ->
                                  let {
                                    sat_sgpa [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_sgpa = Automata4Coms.indices_a_inc_ix ipv65_sgp9 } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         sat_sgpa
                                         ipv64_sgp8
                                  of s2#11_sgpb { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         s2#11_sgpb
                                  of _ [Occ=Dead]
                                  { (# ipv66_sgpd [Occ=Once*], ipv67_sgpe [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv67_sgpe of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_sgfk
                                             ipv66_sgpd
                                      of _ [Occ=Dead]
                                      { (# ipv68_sgph [Occ=Once], ipv69_sgpi [Occ=Once] #) ->
                                      let {
                                        sat_sgpj [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sgpj = Automata4Coms.indices_a_init ipv69_sgpi } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_sgfz
                                             sat_sgpj
                                             ipv68_sgph
                                      of s2#12_sgpk { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv15_sgfb
                                             s2#12_sgpk
                                      of _ [Occ=Dead]
                                      { (# ipv70_sgpm [Occ=Once], ipv71_sgpn [Occ=Once] #) ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv13_sgf8
                                             ipv71_sgpn
                                             ipv70_sgpm
                                      of s2#13_sgpo { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv13_sgf8
                                             s2#13_sgpo
                                      of _ [Occ=Dead] { (# ipv72_sgpq [Occ=Once], ipv73_sgpr #) ->
                                      let {
                                        sat_sgps [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sgps = (ipv73_sgpr, ipv73_sgpr) } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv11_sgf5
                                             sat_sgps
                                             ipv72_sgpq
                                      of s2#14_sgpt { __DEFAULT ->
                                      a9_sgnf s2#14_sgpt
                                      }
                                      }
                                      }
                                      }
                                      }
                                      };
                                    GHC.Types.True -> a11_sgoQ ipv66_sgpd
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a11_sgoQ s2#9_sgoP
                            }
                            }
                            }
                            }
                            } } in
                      let {
                        a11_sgpu
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a11_sgpu =
                          \ (eta2_sgpv [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv11_sgf5
                                   eta2_sgpv
                            of _ [Occ=Dead] { (# ipv54_sgpx [Occ=Once], ipv55_sgpy #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv55_sgpy
                                   ipv54_sgpx
                            of s2#8_sgpz { __DEFAULT ->
                            let {
                              sat_sgpT [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sgpT =
                                let {
                                  sat_sgpS [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sgpS =
                                    case ipv55_sgpy
                                    of _ [Occ=Dead]
                                    { (ww1_sgpB [Occ=Once!], ww2_sgpC [Occ=OnceL!]) ->
                                    let {
                                      sat_sgpR [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_sgpR =
                                        case ww1_sgpB
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_sgpE [Occ=Once] ->
                                        let {
                                          sat_sgpM [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgpM =
                                            let {
                                              sat_sgpL [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_sgpL =
                                                \ (w2_sgpF [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_sgpC
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_sgpH [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_sgpH w2_sgpF
                                                  of _ [Occ=Dead]
                                                  { (# ww8_sgpJ [Occ=Once], ww9_sgpK [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_sgpJ ww9_sgpK
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_sgpL
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_sgpN [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_sgpN =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_sgpM } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_sgpE sat_sgpN
                                        of _ [Occ=Dead]
                                        { (# ww6_sgpP [Occ=Once], ww7_sgpQ [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_sgpP ww7_sgpQ
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgpR
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_sgpS } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sgpT GHC.Types.True s2#8_sgpz
                            of _ [Occ=Dead] { (# ipv56_sgpV [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv56_sgpV
                            of _ [Occ=Dead]
                            { (# ipv58_sgpY [Occ=Once], ipv59_sgpZ [Occ=Once] #) ->
                            let {
                              sat_sgq0 [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sgq0 =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_sgpZ } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_sgfk
                                   sat_sgq0
                                   ipv58_sgpY
                            of s2#9_sgq1 { __DEFAULT ->
                            letrec {
                              a12_sgq2 [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a12_sgq2 =
                                \ (eta3_sgq3 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         eta3_sgq3
                                  of _ [Occ=Dead]
                                  { (# ipv60_sgq5 [Occ=Once], ipv61_sgq6 [Occ=Once] #) ->
                                  let {
                                    ix_sgq7 [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_sgq7 = Automata4Coms.indices_a_get_ix ipv61_sgq6 } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_sgfe
                                         ix_sgq7
                                         ipv60_sgq5
                                  of s2#10_sgq8 { __DEFAULT ->
                                  let {
                                    sat_sgqf [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_sgqf =
                                      let {
                                        sat_sgqe [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_sgqe =
                                          case ix_sgq7
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_sgqa [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_sgqa (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_sgqc [Occ=Once], ww6_sgqd [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_sgqc ww6_sgqd
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_sgqe } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_sgqf GHC.Types.True s2#10_sgq8
                                  of _ [Occ=Dead] { (# ipv62_sgqh [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         ipv62_sgqh
                                  of _ [Occ=Dead]
                                  { (# ipv64_sgqk [Occ=Once], ipv65_sgql [Occ=Once] #) ->
                                  let {
                                    sat_sgqm [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_sgqm = Automata4Coms.indices_a_inc_ix ipv65_sgql } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         sat_sgqm
                                         ipv64_sgqk
                                  of s2#11_sgqn { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         s2#11_sgqn
                                  of _ [Occ=Dead]
                                  { (# ipv66_sgqp [Occ=Once*], ipv67_sgqq [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv67_sgqq of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_sgfk
                                             ipv66_sgqp
                                      of _ [Occ=Dead]
                                      { (# ipv68_sgqt [Occ=Once], ipv69_sgqu [Occ=Once] #) ->
                                      let {
                                        sat_sgqv [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sgqv = Automata4Coms.indices_a_init ipv69_sgqu } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_sgfz
                                             sat_sgqv
                                             ipv68_sgqt
                                      of s2#12_sgqw { __DEFAULT ->
                                      a_sgfJ s2#12_sgqw
                                      }
                                      };
                                    GHC.Types.True -> a12_sgq2 ipv66_sgqp
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a12_sgq2 s2#9_sgq1
                            }
                            }
                            }
                            }
                            } } in
                      let {
                        a12_sgqx
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a12_sgqx =
                          \ (eta2_sgqy [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv9_sgf2
                                   eta2_sgqy
                            of _ [Occ=Dead] { (# ipv54_sgqA [Occ=Once], ipv55_sgqB #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv55_sgqB
                                   ipv54_sgqA
                            of s2#8_sgqC { __DEFAULT ->
                            let {
                              sat_sgqW [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sgqW =
                                let {
                                  sat_sgqV [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sgqV =
                                    case ipv55_sgqB
                                    of _ [Occ=Dead]
                                    { (ww1_sgqE [Occ=Once!], ww2_sgqF [Occ=OnceL!]) ->
                                    let {
                                      sat_sgqU [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_sgqU =
                                        case ww1_sgqE
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_sgqH [Occ=Once] ->
                                        let {
                                          sat_sgqP [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgqP =
                                            let {
                                              sat_sgqO [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_sgqO =
                                                \ (w2_sgqI [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_sgqF
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_sgqK [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_sgqK w2_sgqI
                                                  of _ [Occ=Dead]
                                                  { (# ww8_sgqM [Occ=Once], ww9_sgqN [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_sgqM ww9_sgqN
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_sgqO
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_sgqQ [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_sgqQ =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_sgqP } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_sgqH sat_sgqQ
                                        of _ [Occ=Dead]
                                        { (# ww6_sgqS [Occ=Once], ww7_sgqT [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_sgqS ww7_sgqT
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgqU
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_sgqV } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sgqW GHC.Types.True s2#8_sgqC
                            of _ [Occ=Dead] { (# ipv56_sgqY [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv56_sgqY
                            of _ [Occ=Dead]
                            { (# ipv58_sgr1 [Occ=Once], ipv59_sgr2 [Occ=Once] #) ->
                            let {
                              sat_sgr3 [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sgr3 =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_sgr2 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_sgfk
                                   sat_sgr3
                                   ipv58_sgr1
                            of s2#9_sgr4 { __DEFAULT ->
                            letrec {
                              a13_sgr5 [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a13_sgr5 =
                                \ (eta3_sgr6 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         eta3_sgr6
                                  of _ [Occ=Dead]
                                  { (# ipv60_sgr8 [Occ=Once], ipv61_sgr9 [Occ=Once] #) ->
                                  let {
                                    ix_sgra [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_sgra = Automata4Coms.indices_a_get_ix ipv61_sgr9 } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_sgfe
                                         ix_sgra
                                         ipv60_sgr8
                                  of s2#10_sgrb { __DEFAULT ->
                                  let {
                                    sat_sgri [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_sgri =
                                      let {
                                        sat_sgrh [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_sgrh =
                                          case ix_sgra
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_sgrd [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_sgrd (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_sgrf [Occ=Once], ww6_sgrg [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_sgrf ww6_sgrg
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_sgrh } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_sgri GHC.Types.True s2#10_sgrb
                                  of _ [Occ=Dead] { (# ipv62_sgrk [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         ipv62_sgrk
                                  of _ [Occ=Dead]
                                  { (# ipv64_sgrn [Occ=Once], ipv65_sgro [Occ=Once] #) ->
                                  let {
                                    sat_sgrp [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_sgrp = Automata4Coms.indices_a_inc_ix ipv65_sgro } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         sat_sgrp
                                         ipv64_sgrn
                                  of s2#11_sgrq { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         s2#11_sgrq
                                  of _ [Occ=Dead]
                                  { (# ipv66_sgrs [Occ=Once*], ipv67_sgrt [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv67_sgrt of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_sgfk
                                             ipv66_sgrs
                                      of _ [Occ=Dead]
                                      { (# ipv68_sgrw [Occ=Once], ipv69_sgrx [Occ=Once] #) ->
                                      let {
                                        sat_sgry [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sgry = Automata4Coms.indices_a_init ipv69_sgrx } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_sgfz
                                             sat_sgry
                                             ipv68_sgrw
                                      of s2#12_sgrz { __DEFAULT ->
                                      a2_sggc s2#12_sgrz
                                      }
                                      };
                                    GHC.Types.True -> a13_sgr5 ipv66_sgrs
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a13_sgr5 s2#9_sgr4
                            }
                            }
                            }
                            }
                            } } in
                      let {
                        a13_sgrA
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a13_sgrA =
                          \ (eta2_sgrB [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv9_sgf2
                                   eta2_sgrB
                            of _ [Occ=Dead] { (# ipv54_sgrD [Occ=Once], ipv55_sgrE #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv55_sgrE
                                   ipv54_sgrD
                            of s2#8_sgrF { __DEFAULT ->
                            let {
                              sat_sgrZ [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sgrZ =
                                let {
                                  sat_sgrY [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sgrY =
                                    case ipv55_sgrE
                                    of _ [Occ=Dead]
                                    { (ww1_sgrH [Occ=Once!], ww2_sgrI [Occ=OnceL!]) ->
                                    let {
                                      sat_sgrX [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_sgrX =
                                        case ww1_sgrH
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_sgrK [Occ=Once] ->
                                        let {
                                          sat_sgrS [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgrS =
                                            let {
                                              sat_sgrR [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_sgrR =
                                                \ (w2_sgrL [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_sgrI
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_sgrN [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_sgrN w2_sgrL
                                                  of _ [Occ=Dead]
                                                  { (# ww8_sgrP [Occ=Once], ww9_sgrQ [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_sgrP ww9_sgrQ
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_sgrR
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_sgrT [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_sgrT =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_sgrS } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_sgrK sat_sgrT
                                        of _ [Occ=Dead]
                                        { (# ww6_sgrV [Occ=Once], ww7_sgrW [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_sgrV ww7_sgrW
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgrX
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_sgrY } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sgrZ GHC.Types.True s2#8_sgrF
                            of _ [Occ=Dead] { (# ipv56_sgs1 [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv56_sgs1
                            of _ [Occ=Dead]
                            { (# ipv58_sgs4 [Occ=Once], ipv59_sgs5 [Occ=Once] #) ->
                            let {
                              sat_sgs6 [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sgs6 =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_sgs5 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_sgfk
                                   sat_sgs6
                                   ipv58_sgs4
                            of s2#9_sgs7 { __DEFAULT ->
                            letrec {
                              a14_sgs8 [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a14_sgs8 =
                                \ (eta3_sgs9 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         eta3_sgs9
                                  of _ [Occ=Dead]
                                  { (# ipv60_sgsb [Occ=Once], ipv61_sgsc [Occ=Once] #) ->
                                  let {
                                    ix_sgsd [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_sgsd = Automata4Coms.indices_a_get_ix ipv61_sgsc } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_sgfe
                                         ix_sgsd
                                         ipv60_sgsb
                                  of s2#10_sgse { __DEFAULT ->
                                  let {
                                    sat_sgsl [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_sgsl =
                                      let {
                                        sat_sgsk [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_sgsk =
                                          case ix_sgsd
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_sgsg [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_sgsg (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_sgsi [Occ=Once], ww6_sgsj [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_sgsi ww6_sgsj
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_sgsk } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_sgsl GHC.Types.True s2#10_sgse
                                  of _ [Occ=Dead] { (# ipv62_sgsn [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         ipv62_sgsn
                                  of _ [Occ=Dead]
                                  { (# ipv64_sgsq [Occ=Once], ipv65_sgsr [Occ=Once] #) ->
                                  let {
                                    sat_sgss [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_sgss = Automata4Coms.indices_a_inc_ix ipv65_sgsr } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         sat_sgss
                                         ipv64_sgsq
                                  of s2#11_sgst { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         s2#11_sgst
                                  of _ [Occ=Dead]
                                  { (# ipv66_sgsv [Occ=Once*], ipv67_sgsw [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv67_sgsw of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_sgfk
                                             ipv66_sgsv
                                      of _ [Occ=Dead]
                                      { (# ipv68_sgsz [Occ=Once], ipv69_sgsA [Occ=Once] #) ->
                                      let {
                                        sat_sgsB [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sgsB = Automata4Coms.indices_a_init ipv69_sgsA } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_sgfz
                                             sat_sgsB
                                             ipv68_sgsz
                                      of s2#12_sgsC { __DEFAULT ->
                                      a_sgfJ s2#12_sgsC
                                      }
                                      };
                                    GHC.Types.True -> a14_sgs8 ipv66_sgsv
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a14_sgs8 s2#9_sgs7
                            }
                            }
                            }
                            }
                            } } in
                      let {
                        a14_sgsD
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a14_sgsD =
                          \ (eta2_sgsE [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            letrec {
                              a16_sgsG
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a16_sgsG =
                                \ (eta3_sgtb [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_sgeT eta3_sgtb
                                  of _ [Occ=Dead]
                                  { (# ipv54_sgtd [Occ=Once*], ipv55_sgte [Occ=Once!] #) ->
                                  case ipv55_sgte of _ [Occ=Dead] {
                                    [] ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv11_sgf5
                                             ipv54_sgtd
                                      of _ [Occ=Dead] { (# ipv56_sgth [Occ=Once], ipv57_sgti #) ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv19_sgfh
                                             ipv57_sgti
                                             ipv56_sgth
                                      of s2#8_sgtj { __DEFAULT ->
                                      let {
                                        sat_sgtD [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                        [LclId, Str=DmdType]
                                        sat_sgtD =
                                          let {
                                            sat_sgtC [Occ=Once] :: [GHC.Types.Char]
                                            [LclId, Str=DmdType]
                                            sat_sgtC =
                                              case ipv57_sgti
                                              of _ [Occ=Dead]
                                              { (ww1_sgtl [Occ=Once!], ww2_sgtm [Occ=OnceL!]) ->
                                              let {
                                                sat_sgtB [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sgtB =
                                                  case ww1_sgtl
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww4_sgto [Occ=Once] ->
                                                  let {
                                                    sat_sgtw [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId, Str=DmdType]
                                                    sat_sgtw =
                                                      let {
                                                        sat_sgtv [Occ=Once]
                                                          :: GHC.Base.String -> GHC.Base.String
                                                        [LclId, Str=DmdType]
                                                        sat_sgtv =
                                                          \ (w2_sgtp [Occ=Once]
                                                               :: GHC.Base.String) ->
                                                            case ww2_sgtm
                                                            of _ [Occ=Dead]
                                                            { GHC.Types.I# ww6_sgtr [Occ=Once] ->
                                                            case GHC.Show.$wshowSignedInt
                                                                   0 ww6_sgtr w2_sgtp
                                                            of _ [Occ=Dead]
                                                            { (# ww8_sgtt [Occ=Once], ww9_sgtu [Occ=Once] #) ->
                                                            GHC.Types.:
                                                              @ GHC.Types.Char ww8_sgtt ww9_sgtu
                                                            }
                                                            } } in
                                                      GHC.List.foldr1_$sfoldr1
                                                        @ (GHC.Base.String -> GHC.Base.String)
                                                        GHC.Show.$fShow(,)1
                                                        sat_sgtv
                                                        (GHC.Types.[] @ GHC.Show.ShowS)
                                                        lvl4_rger } in
                                                  let {
                                                    sat_sgtx [Occ=Once] :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sgtx =
                                                      GHC.Types.:
                                                        @ GHC.Types.Char
                                                        GHC.Show.showList__1
                                                        sat_sgtw } in
                                                  case GHC.Show.$wshowSignedInt 0 ww4_sgto sat_sgtx
                                                  of _ [Occ=Dead]
                                                  { (# ww6_sgtz [Occ=Once], ww7_sgtA [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww6_sgtz ww7_sgtA
                                                  }
                                                  } } in
                                              GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgtB
                                              } } in
                                          GHC.CString.unpackAppendCString# "merg: "# sat_sgtC } in
                                      case GHC.IO.Handle.Text.hPutStr2
                                             GHC.IO.Handle.FD.stdout
                                             sat_sgtD
                                             GHC.Types.True
                                             s2#8_sgtj
                                      of _ [Occ=Dead] { (# ipv58_sgtF [Occ=Once], _ [Occ=Dead] #) ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv19_sgfh
                                             ipv58_sgtF
                                      of _ [Occ=Dead]
                                      { (# ipv60_sgtI [Occ=Once], ipv61_sgtJ [Occ=Once] #) ->
                                      let {
                                        sat_sgtK [Occ=Once] :: GHC.Types.Int
                                        [LclId, Str=DmdType]
                                        sat_sgtK =
                                          Data.Tuple.snd
                                            @ GHC.Types.Int @ GHC.Types.Int ipv61_sgtJ } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_sgfk
                                             sat_sgtK
                                             ipv60_sgtI
                                      of s2#9_sgtL { __DEFAULT ->
                                      letrec {
                                        a17_sgtM [Occ=LoopBreaker]
                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                        a17_sgtM =
                                          \ (eta4_sgtN [Occ=Once]
                                               :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                            case GHC.Prim.readMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_sgfz
                                                   eta4_sgtN
                                            of _ [Occ=Dead]
                                            { (# ipv62_sgtP [Occ=Once], ipv63_sgtQ [Occ=Once] #) ->
                                            let {
                                              ix_sgtR [Dmd=<L,U(U)>] :: GHC.Types.Int
                                              [LclId, Str=DmdType]
                                              ix_sgtR =
                                                Automata4Coms.indices_a_get_ix ipv63_sgtQ } in
                                            case GHC.Prim.writeMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ GHC.Types.Int
                                                   ipv17_sgfe
                                                   ix_sgtR
                                                   ipv62_sgtP
                                            of s2#10_sgtS { __DEFAULT ->
                                            let {
                                              sat_sgtZ [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_sgtZ =
                                                let {
                                                  sat_sgtY [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sgtY =
                                                    case ix_sgtR
                                                    of _ [Occ=Dead]
                                                    { GHC.Types.I# ww3_sgtU [Occ=Once] ->
                                                    case GHC.Show.$wshowSignedInt
                                                           0
                                                           ww3_sgtU
                                                           (GHC.Types.[] @ GHC.Types.Char)
                                                    of _ [Occ=Dead]
                                                    { (# ww5_sgtW [Occ=Once], ww6_sgtX [Occ=Once] #) ->
                                                    GHC.Types.: @ GHC.Types.Char ww5_sgtW ww6_sgtX
                                                    }
                                                    } } in
                                                GHC.CString.unpackAppendCString#
                                                  "filtd:"# sat_sgtY } in
                                            case GHC.IO.Handle.Text.hPutStr2
                                                   GHC.IO.Handle.FD.stdout
                                                   sat_sgtZ
                                                   GHC.Types.True
                                                   s2#10_sgtS
                                            of _ [Occ=Dead]
                                            { (# ipv64_sgu1 [Occ=Once], _ [Occ=Dead] #) ->
                                            case GHC.Prim.readMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_sgfz
                                                   ipv64_sgu1
                                            of _ [Occ=Dead]
                                            { (# ipv66_sgu4 [Occ=Once], ipv67_sgu5 [Occ=Once] #) ->
                                            let {
                                              sat_sgu6 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                              [LclId, Str=DmdType]
                                              sat_sgu6 =
                                                Automata4Coms.indices_a_inc_ix ipv67_sgu5 } in
                                            case GHC.Prim.writeMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_sgfz
                                                   sat_sgu6
                                                   ipv66_sgu4
                                            of s2#11_sgu7 { __DEFAULT ->
                                            case GHC.Prim.readMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_sgfz
                                                   s2#11_sgu7
                                            of _ [Occ=Dead]
                                            { (# ipv68_sgu9 [Occ=Once*], ipv69_sgua [Occ=Once] #) ->
                                            case Automata4Coms.indices_a_check ipv69_sgua
                                            of _ [Occ=Dead] {
                                              GHC.Types.False ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ GHC.Types.Int
                                                       ipv21_sgfk
                                                       ipv68_sgu9
                                                of _ [Occ=Dead]
                                                { (# ipv70_sgud [Occ=Once], ipv71_sgue [Occ=Once] #) ->
                                                let {
                                                  sat_sguf [Occ=Once]
                                                    :: (GHC.Types.Int, GHC.Types.Int)
                                                  [LclId, Str=DmdType]
                                                  sat_sguf =
                                                    Automata4Coms.indices_a_init ipv71_sgue } in
                                                case GHC.Prim.writeMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_sgfz
                                                       sat_sguf
                                                       ipv70_sgud
                                                of s2#12_sgug { __DEFAULT ->
                                                a_sgfJ s2#12_sgug
                                                }
                                                };
                                              GHC.Types.True -> a17_sgtM ipv68_sgu9
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }; } in
                                      a17_sgtM s2#9_sgtL
                                      }
                                      }
                                      }
                                      }
                                      };
                                    : i2_sguh [Occ=Once] is2_sgui [Occ=Once] ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ [GHC.Types.Int]
                                             ipv3_sgeT
                                             is2_sgui
                                             ipv54_sgtd
                                      of s2#8_sguj { __DEFAULT ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv7_sgeZ
                                             i2_sguh
                                             s2#8_sguj
                                      of s2#9_sguk { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv7_sgeZ
                                             s2#9_sguk
                                      of _ [Occ=Dead] { (# ipv56_sgum [Occ=Once], ipv57_sgun #) ->
                                      let {
                                        sat_sguo [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sguo = (ipv57_sgun, ipv57_sgun) } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv9_sgf2
                                             sat_sguo
                                             ipv56_sgum
                                      of s2#10_sgup { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv11_sgf5
                                             s2#10_sgup
                                      of _ [Occ=Dead]
                                      { (# ipv58_sgur [Occ=Once], ipv59_sgus [Occ=Once] #) ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv9_sgf2
                                             ipv58_sgur
                                      of _ [Occ=Dead]
                                      { (# ipv60_sguu [Occ=Once*], ipv61_sguv [Occ=Once] #) ->
                                      case Automata4Coms.merge_a_le_pair
                                             @ GHC.Types.Int ipv59_sgus ipv61_sguv
                                      of _ [Occ=Dead] {
                                        GHC.Types.False ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv9_sgf2
                                                 ipv60_sguu
                                          of _ [Occ=Dead]
                                          { (# ipv62_sguy [Occ=Once], ipv63_sguz #) ->
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_sgfh
                                                 ipv63_sguz
                                                 ipv62_sguy
                                          of s2#11_sguA { __DEFAULT ->
                                          let {
                                            sat_sguU [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sguU =
                                              let {
                                                sat_sguT [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sguT =
                                                  case ipv63_sguz
                                                  of _ [Occ=Dead]
                                                  { (ww1_sguC [Occ=Once!], ww2_sguD [Occ=OnceL!]) ->
                                                  let {
                                                    sat_sguS [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId, Str=DmdType]
                                                    sat_sguS =
                                                      case ww1_sguC
                                                      of _ [Occ=Dead]
                                                      { GHC.Types.I# ww4_sguF [Occ=Once] ->
                                                      let {
                                                        sat_sguN [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sguN =
                                                          let {
                                                            sat_sguM [Occ=Once]
                                                              :: GHC.Base.String -> GHC.Base.String
                                                            [LclId, Str=DmdType]
                                                            sat_sguM =
                                                              \ (w2_sguG [Occ=Once]
                                                                   :: GHC.Base.String) ->
                                                                case ww2_sguD
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww6_sguI [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0 ww6_sguI w2_sguG
                                                                of _ [Occ=Dead]
                                                                { (# ww8_sguK [Occ=Once], ww9_sguL [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww8_sguK ww9_sguL
                                                                }
                                                                } } in
                                                          GHC.List.foldr1_$sfoldr1
                                                            @ (GHC.Base.String -> GHC.Base.String)
                                                            GHC.Show.$fShow(,)1
                                                            sat_sguM
                                                            (GHC.Types.[] @ GHC.Show.ShowS)
                                                            lvl4_rger } in
                                                      let {
                                                        sat_sguO [Occ=Once] :: GHC.Base.String
                                                        [LclId, Str=DmdType]
                                                        sat_sguO =
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.showList__1
                                                            sat_sguN } in
                                                      case GHC.Show.$wshowSignedInt
                                                             0 ww4_sguF sat_sguO
                                                      of _ [Occ=Dead]
                                                      { (# ww6_sguQ [Occ=Once], ww7_sguR [Occ=Once] #) ->
                                                      GHC.Types.: @ GHC.Types.Char ww6_sguQ ww7_sguR
                                                      }
                                                      } } in
                                                  GHC.Types.:
                                                    @ GHC.Types.Char GHC.Show.shows13 sat_sguS
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "merg: "# sat_sguT } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sguU
                                                 GHC.Types.True
                                                 s2#11_sguA
                                          of _ [Occ=Dead]
                                          { (# ipv64_sguW [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_sgfh
                                                 ipv64_sguW
                                          of _ [Occ=Dead]
                                          { (# ipv66_sguZ [Occ=Once], ipv67_sgv0 [Occ=Once] #) ->
                                          let {
                                            sat_sgv1 [Occ=Once] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            sat_sgv1 =
                                              Data.Tuple.snd
                                                @ GHC.Types.Int @ GHC.Types.Int ipv67_sgv0 } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv21_sgfk
                                                 sat_sgv1
                                                 ipv66_sguZ
                                          of s2#12_sgv2 { __DEFAULT ->
                                          a15_sgsF s2#12_sgv2
                                          }
                                          }
                                          }
                                          }
                                          };
                                        GHC.Types.True ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv11_sgf5
                                                 ipv60_sguu
                                          of _ [Occ=Dead]
                                          { (# ipv62_sgv4 [Occ=Once], ipv63_sgv5 #) ->
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_sgfh
                                                 ipv63_sgv5
                                                 ipv62_sgv4
                                          of s2#11_sgv6 { __DEFAULT ->
                                          let {
                                            sat_sgvq [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sgvq =
                                              let {
                                                sat_sgvp [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sgvp =
                                                  case ipv63_sgv5
                                                  of _ [Occ=Dead]
                                                  { (ww1_sgv8 [Occ=Once!], ww2_sgv9 [Occ=OnceL!]) ->
                                                  let {
                                                    sat_sgvo [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId, Str=DmdType]
                                                    sat_sgvo =
                                                      case ww1_sgv8
                                                      of _ [Occ=Dead]
                                                      { GHC.Types.I# ww4_sgvb [Occ=Once] ->
                                                      let {
                                                        sat_sgvj [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sgvj =
                                                          let {
                                                            sat_sgvi [Occ=Once]
                                                              :: GHC.Base.String -> GHC.Base.String
                                                            [LclId, Str=DmdType]
                                                            sat_sgvi =
                                                              \ (w2_sgvc [Occ=Once]
                                                                   :: GHC.Base.String) ->
                                                                case ww2_sgv9
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww6_sgve [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0 ww6_sgve w2_sgvc
                                                                of _ [Occ=Dead]
                                                                { (# ww8_sgvg [Occ=Once], ww9_sgvh [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww8_sgvg ww9_sgvh
                                                                }
                                                                } } in
                                                          GHC.List.foldr1_$sfoldr1
                                                            @ (GHC.Base.String -> GHC.Base.String)
                                                            GHC.Show.$fShow(,)1
                                                            sat_sgvi
                                                            (GHC.Types.[] @ GHC.Show.ShowS)
                                                            lvl4_rger } in
                                                      let {
                                                        sat_sgvk [Occ=Once] :: GHC.Base.String
                                                        [LclId, Str=DmdType]
                                                        sat_sgvk =
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.showList__1
                                                            sat_sgvj } in
                                                      case GHC.Show.$wshowSignedInt
                                                             0 ww4_sgvb sat_sgvk
                                                      of _ [Occ=Dead]
                                                      { (# ww6_sgvm [Occ=Once], ww7_sgvn [Occ=Once] #) ->
                                                      GHC.Types.: @ GHC.Types.Char ww6_sgvm ww7_sgvn
                                                      }
                                                      } } in
                                                  GHC.Types.:
                                                    @ GHC.Types.Char GHC.Show.shows13 sat_sgvo
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "merg: "# sat_sgvp } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sgvq
                                                 GHC.Types.True
                                                 s2#11_sgv6
                                          of _ [Occ=Dead]
                                          { (# ipv64_sgvs [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_sgfh
                                                 ipv64_sgvs
                                          of _ [Occ=Dead]
                                          { (# ipv66_sgvv [Occ=Once], ipv67_sgvw [Occ=Once] #) ->
                                          let {
                                            sat_sgvx [Occ=Once] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            sat_sgvx =
                                              Data.Tuple.snd
                                                @ GHC.Types.Int @ GHC.Types.Int ipv67_sgvw } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv21_sgfk
                                                 sat_sgvx
                                                 ipv66_sgvv
                                          of s2#12_sgvy { __DEFAULT ->
                                          letrec {
                                            a17_sgvz [Occ=LoopBreaker]
                                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                            [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                            a17_sgvz =
                                              \ (eta4_sgvA [Occ=Once]
                                                   :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_sgfz
                                                       eta4_sgvA
                                                of _ [Occ=Dead]
                                                { (# ipv68_sgvC [Occ=Once], ipv69_sgvD [Occ=Once] #) ->
                                                let {
                                                  ix_sgvE [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                  [LclId, Str=DmdType]
                                                  ix_sgvE =
                                                    Automata4Coms.indices_a_get_ix ipv69_sgvD } in
                                                case GHC.Prim.writeMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ GHC.Types.Int
                                                       ipv17_sgfe
                                                       ix_sgvE
                                                       ipv68_sgvC
                                                of s2#13_sgvF { __DEFAULT ->
                                                let {
                                                  sat_sgvM [Occ=Once, Dmd=<L,1*U>]
                                                    :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sgvM =
                                                    let {
                                                      sat_sgvL [Occ=Once] :: [GHC.Types.Char]
                                                      [LclId, Str=DmdType]
                                                      sat_sgvL =
                                                        case ix_sgvE
                                                        of _ [Occ=Dead]
                                                        { GHC.Types.I# ww3_sgvH [Occ=Once] ->
                                                        case GHC.Show.$wshowSignedInt
                                                               0
                                                               ww3_sgvH
                                                               (GHC.Types.[] @ GHC.Types.Char)
                                                        of _ [Occ=Dead]
                                                        { (# ww5_sgvJ [Occ=Once], ww6_sgvK [Occ=Once] #) ->
                                                        GHC.Types.:
                                                          @ GHC.Types.Char ww5_sgvJ ww6_sgvK
                                                        }
                                                        } } in
                                                    GHC.CString.unpackAppendCString#
                                                      "filtd:"# sat_sgvL } in
                                                case GHC.IO.Handle.Text.hPutStr2
                                                       GHC.IO.Handle.FD.stdout
                                                       sat_sgvM
                                                       GHC.Types.True
                                                       s2#13_sgvF
                                                of _ [Occ=Dead]
                                                { (# ipv70_sgvO [Occ=Once], _ [Occ=Dead] #) ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_sgfz
                                                       ipv70_sgvO
                                                of _ [Occ=Dead]
                                                { (# ipv72_sgvR [Occ=Once], ipv73_sgvS [Occ=Once] #) ->
                                                let {
                                                  sat_sgvT [Occ=Once]
                                                    :: (GHC.Types.Int, GHC.Types.Int)
                                                  [LclId, Str=DmdType]
                                                  sat_sgvT =
                                                    Automata4Coms.indices_a_inc_ix ipv73_sgvS } in
                                                case GHC.Prim.writeMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_sgfz
                                                       sat_sgvT
                                                       ipv72_sgvR
                                                of s2#14_sgvU { __DEFAULT ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_sgfz
                                                       s2#14_sgvU
                                                of _ [Occ=Dead]
                                                { (# ipv74_sgvW [Occ=Once*], ipv75_sgvX [Occ=Once] #) ->
                                                case Automata4Coms.indices_a_check ipv75_sgvX
                                                of _ [Occ=Dead] {
                                                  GHC.Types.False ->
                                                    case GHC.Prim.readMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ GHC.Types.Int
                                                           ipv21_sgfk
                                                           ipv74_sgvW
                                                    of _ [Occ=Dead]
                                                    { (# ipv76_sgw0 [Occ=Once], ipv77_sgw1 [Occ=Once] #) ->
                                                    let {
                                                      sat_sgw2 [Occ=Once]
                                                        :: (GHC.Types.Int, GHC.Types.Int)
                                                      [LclId, Str=DmdType]
                                                      sat_sgw2 =
                                                        Automata4Coms.indices_a_init ipv77_sgw1 } in
                                                    case GHC.Prim.writeMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ (GHC.Types.Int, GHC.Types.Int)
                                                           ipv31_sgfz
                                                           sat_sgw2
                                                           ipv76_sgw0
                                                    of s2#15_sgw3 { __DEFAULT ->
                                                    case GHC.Prim.readMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ [GHC.Types.Int]
                                                           ipv3_sgeT
                                                           s2#15_sgw3
                                                    of _ [Occ=Dead]
                                                    { (# ipv78_sgw5 [Occ=Once*], ipv79_sgw6 [Occ=Once!] #) ->
                                                    case ipv79_sgw6 of _ [Occ=Dead] {
                                                      [] -> a13_sgrA ipv78_sgw5;
                                                      : i3_sgw8 [Occ=Once] is3_sgw9 [Occ=Once] ->
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ [GHC.Types.Int]
                                                               ipv3_sgeT
                                                               is3_sgw9
                                                               ipv78_sgw5
                                                        of s2#16_sgwa { __DEFAULT ->
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv7_sgeZ
                                                               i3_sgw8
                                                               s2#16_sgwa
                                                        of s2#17_sgwb { __DEFAULT ->
                                                        a12_sgqx s2#17_sgwb
                                                        }
                                                        }
                                                    }
                                                    }
                                                    }
                                                    };
                                                  GHC.Types.True -> a17_sgvz ipv74_sgvW
                                                }
                                                }
                                                }
                                                }
                                                }
                                                }
                                                }; } in
                                          a17_sgvz s2#12_sgvy
                                          }
                                          }
                                          }
                                          }
                                          }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                  }
                                  };
                              a15_sgsF [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a15_sgsF =
                                \ (eta3_sgsH [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         eta3_sgsH
                                  of _ [Occ=Dead]
                                  { (# ipv54_sgsJ [Occ=Once], ipv55_sgsK [Occ=Once] #) ->
                                  let {
                                    ix_sgsL [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_sgsL = Automata4Coms.indices_a_get_ix ipv55_sgsK } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_sgfe
                                         ix_sgsL
                                         ipv54_sgsJ
                                  of s2#8_sgsM { __DEFAULT ->
                                  let {
                                    sat_sgsT [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_sgsT =
                                      let {
                                        sat_sgsS [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_sgsS =
                                          case ix_sgsL
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_sgsO [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_sgsO (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_sgsQ [Occ=Once], ww6_sgsR [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_sgsQ ww6_sgsR
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_sgsS } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_sgsT GHC.Types.True s2#8_sgsM
                                  of _ [Occ=Dead] { (# ipv56_sgsV [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         ipv56_sgsV
                                  of _ [Occ=Dead]
                                  { (# ipv58_sgsY [Occ=Once], ipv59_sgsZ [Occ=Once] #) ->
                                  let {
                                    sat_sgt0 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_sgt0 = Automata4Coms.indices_a_inc_ix ipv59_sgsZ } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         sat_sgt0
                                         ipv58_sgsY
                                  of s2#9_sgt1 { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         s2#9_sgt1
                                  of _ [Occ=Dead]
                                  { (# ipv60_sgt3 [Occ=Once*], ipv61_sgt4 [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv61_sgt4 of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_sgfk
                                             ipv60_sgt3
                                      of _ [Occ=Dead]
                                      { (# ipv62_sgt7 [Occ=Once], ipv63_sgt8 [Occ=Once] #) ->
                                      let {
                                        sat_sgt9 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sgt9 = Automata4Coms.indices_a_init ipv63_sgt8 } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_sgfz
                                             sat_sgt9
                                             ipv62_sgt7
                                      of s2#10_sgta { __DEFAULT ->
                                      a16_sgsG s2#10_sgta
                                      }
                                      };
                                    GHC.Types.True -> a15_sgsF ipv60_sgt3
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a16_sgsG eta2_sgsE } in
                      let {
                        a15_sgwc
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a15_sgwc =
                          \ (eta2_sgwd [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_sgeT eta2_sgwd
                            of _ [Occ=Dead]
                            { (# ipv54_sgwf [Occ=Once*], ipv55_sgwg [Occ=Once!] #) ->
                            case ipv55_sgwg of _ [Occ=Dead] {
                              [] ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_sgf8 ipv54_sgwf
                                of _ [Occ=Dead] { (# ipv56_sgwj [Occ=Once], ipv57_sgwk #) ->
                                let {
                                  sat_sgwl [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sgwl = (ipv57_sgwk, ipv57_sgwk) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       sat_sgwl
                                       ipv56_sgwj
                                of s2#8_sgwm { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       s2#8_sgwm
                                of _ [Occ=Dead]
                                { (# ipv58_sgwo [Occ=Once], ipv59_sgwp [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       ipv58_sgwo
                                of _ [Occ=Dead]
                                { (# ipv60_sgwr [Occ=Once*], ipv61_sgws [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv59_sgwp ipv61_sgws
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_sgf2
                                           ipv60_sgwr
                                    of _ [Occ=Dead] { (# ipv62_sgwv [Occ=Once], ipv63_sgww #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv63_sgww
                                           ipv62_sgwv
                                    of s2#9_sgwx { __DEFAULT ->
                                    let {
                                      sat_sgwR [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sgwR =
                                        let {
                                          sat_sgwQ [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgwQ =
                                            case ipv63_sgww
                                            of _ [Occ=Dead]
                                            { (ww1_sgwz [Occ=Once!], ww2_sgwA [Occ=OnceL!]) ->
                                            let {
                                              sat_sgwP [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sgwP =
                                                case ww1_sgwz
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sgwC [Occ=Once] ->
                                                let {
                                                  sat_sgwK [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sgwK =
                                                    let {
                                                      sat_sgwJ [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sgwJ =
                                                        \ (w2_sgwD [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sgwA
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sgwF [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sgwF w2_sgwD
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sgwH [Occ=Once], ww9_sgwI [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sgwH ww9_sgwI
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sgwJ
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sgwL [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sgwL =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sgwK } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sgwC sat_sgwL
                                                of _ [Occ=Dead]
                                                { (# ww6_sgwN [Occ=Once], ww7_sgwO [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sgwN ww7_sgwO
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgwP
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sgwQ } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout sat_sgwR GHC.Types.True s2#9_sgwx
                                    of _ [Occ=Dead] { (# ipv64_sgwT [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv64_sgwT
                                    of _ [Occ=Dead]
                                    { (# ipv66_sgwW [Occ=Once], ipv67_sgwX [Occ=Once] #) ->
                                    let {
                                      sat_sgwY [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sgwY =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_sgwX } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_sgwY
                                           ipv66_sgwW
                                    of s2#10_sgwZ { __DEFAULT ->
                                    letrec {
                                      a16_sgx0 [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a16_sgx0 =
                                        \ (eta3_sgx1 [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 eta3_sgx1
                                          of _ [Occ=Dead]
                                          { (# ipv68_sgx3 [Occ=Once], ipv69_sgx4 [Occ=Once] #) ->
                                          let {
                                            ix_sgx5 [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_sgx5 = Automata4Coms.indices_a_get_ix ipv69_sgx4 } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_sgfe
                                                 ix_sgx5
                                                 ipv68_sgx3
                                          of s2#11_sgx6 { __DEFAULT ->
                                          let {
                                            sat_sgxd [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sgxd =
                                              let {
                                                sat_sgxc [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sgxc =
                                                  case ix_sgx5
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_sgx8 [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_sgx8 (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_sgxa [Occ=Once], ww6_sgxb [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_sgxa ww6_sgxb
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_sgxc } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sgxd
                                                 GHC.Types.True
                                                 s2#11_sgx6
                                          of _ [Occ=Dead]
                                          { (# ipv70_sgxf [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 ipv70_sgxf
                                          of _ [Occ=Dead]
                                          { (# ipv72_sgxi [Occ=Once], ipv73_sgxj [Occ=Once] #) ->
                                          let {
                                            sat_sgxk [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sgxk =
                                              Automata4Coms.indices_a_inc_ix ipv73_sgxj } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 sat_sgxk
                                                 ipv72_sgxi
                                          of s2#12_sgxl { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 s2#12_sgxl
                                          of _ [Occ=Dead]
                                          { (# ipv74_sgxn [Occ=Once*], ipv75_sgxo [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_sgxo
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_sgfk
                                                     ipv74_sgxn
                                              of _ [Occ=Dead]
                                              { (# ipv76_sgxr [Occ=Once], ipv77_sgxs [Occ=Once] #) ->
                                              let {
                                                sat_sgxt [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sgxt =
                                                  Automata4Coms.indices_a_init ipv77_sgxs } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_sgfz
                                                     sat_sgxt
                                                     ipv76_sgxr
                                              of s2#13_sgxu { __DEFAULT ->
                                              a11_sgpu s2#13_sgxu
                                              }
                                              };
                                            GHC.Types.True -> a16_sgx0 ipv74_sgxn
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a16_sgx0 s2#10_sgwZ
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_sgf5
                                           ipv60_sgwr
                                    of _ [Occ=Dead] { (# ipv62_sgxw [Occ=Once], ipv63_sgxx #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv63_sgxx
                                           ipv62_sgxw
                                    of s2#9_sgxy { __DEFAULT ->
                                    let {
                                      sat_sgxS [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sgxS =
                                        let {
                                          sat_sgxR [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgxR =
                                            case ipv63_sgxx
                                            of _ [Occ=Dead]
                                            { (ww1_sgxA [Occ=Once!], ww2_sgxB [Occ=OnceL!]) ->
                                            let {
                                              sat_sgxQ [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sgxQ =
                                                case ww1_sgxA
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sgxD [Occ=Once] ->
                                                let {
                                                  sat_sgxL [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sgxL =
                                                    let {
                                                      sat_sgxK [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sgxK =
                                                        \ (w2_sgxE [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sgxB
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sgxG [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sgxG w2_sgxE
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sgxI [Occ=Once], ww9_sgxJ [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sgxI ww9_sgxJ
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sgxK
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sgxM [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sgxM =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sgxL } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sgxD sat_sgxM
                                                of _ [Occ=Dead]
                                                { (# ww6_sgxO [Occ=Once], ww7_sgxP [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sgxO ww7_sgxP
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgxQ
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sgxR } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout sat_sgxS GHC.Types.True s2#9_sgxy
                                    of _ [Occ=Dead] { (# ipv64_sgxU [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv64_sgxU
                                    of _ [Occ=Dead]
                                    { (# ipv66_sgxX [Occ=Once], ipv67_sgxY [Occ=Once] #) ->
                                    let {
                                      sat_sgxZ [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sgxZ =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_sgxY } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_sgxZ
                                           ipv66_sgxX
                                    of s2#10_sgy0 { __DEFAULT ->
                                    letrec {
                                      a16_sgy1 [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a16_sgy1 =
                                        \ (eta3_sgy2 [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 eta3_sgy2
                                          of _ [Occ=Dead]
                                          { (# ipv68_sgy4 [Occ=Once], ipv69_sgy5 [Occ=Once] #) ->
                                          let {
                                            ix_sgy6 [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_sgy6 = Automata4Coms.indices_a_get_ix ipv69_sgy5 } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_sgfe
                                                 ix_sgy6
                                                 ipv68_sgy4
                                          of s2#11_sgy7 { __DEFAULT ->
                                          let {
                                            sat_sgye [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sgye =
                                              let {
                                                sat_sgyd [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sgyd =
                                                  case ix_sgy6
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_sgy9 [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_sgy9 (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_sgyb [Occ=Once], ww6_sgyc [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_sgyb ww6_sgyc
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_sgyd } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sgye
                                                 GHC.Types.True
                                                 s2#11_sgy7
                                          of _ [Occ=Dead]
                                          { (# ipv70_sgyg [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 ipv70_sgyg
                                          of _ [Occ=Dead]
                                          { (# ipv72_sgyj [Occ=Once], ipv73_sgyk [Occ=Once] #) ->
                                          let {
                                            sat_sgyl [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sgyl =
                                              Automata4Coms.indices_a_inc_ix ipv73_sgyk } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 sat_sgyl
                                                 ipv72_sgyj
                                          of s2#12_sgym { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 s2#12_sgym
                                          of _ [Occ=Dead]
                                          { (# ipv74_sgyo [Occ=Once*], ipv75_sgyp [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_sgyp
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_sgfk
                                                     ipv74_sgyo
                                              of _ [Occ=Dead]
                                              { (# ipv76_sgys [Occ=Once], ipv77_sgyt [Occ=Once] #) ->
                                              let {
                                                sat_sgyu [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sgyu =
                                                  Automata4Coms.indices_a_init ipv77_sgyt } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_sgfz
                                                     sat_sgyu
                                                     ipv76_sgys
                                              of s2#13_sgyv { __DEFAULT ->
                                              a13_sgrA s2#13_sgyv
                                              }
                                              };
                                            GHC.Types.True -> a16_sgy1 ipv74_sgyo
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a16_sgy1 s2#10_sgy0
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                };
                              : i2_sgyw [Occ=Once] is2_sgyx [Occ=Once] ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ [GHC.Types.Int]
                                       ipv3_sgeT
                                       is2_sgyx
                                       ipv54_sgwf
                                of s2#8_sgyy { __DEFAULT ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv7_sgeZ
                                       i2_sgyw
                                       s2#8_sgyy
                                of s2#9_sgyz { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_sgf8 s2#9_sgyz
                                of _ [Occ=Dead] { (# ipv56_sgyB [Occ=Once], ipv57_sgyC #) ->
                                let {
                                  sat_sgyD [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sgyD = (ipv57_sgyC, ipv57_sgyC) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       sat_sgyD
                                       ipv56_sgyB
                                of s2#10_sgyE { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       s2#10_sgyE
                                of _ [Occ=Dead]
                                { (# ipv58_sgyG [Occ=Once], ipv59_sgyH [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       ipv58_sgyG
                                of _ [Occ=Dead]
                                { (# ipv60_sgyJ [Occ=Once*], ipv61_sgyK [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv59_sgyH ipv61_sgyK
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_sgf2
                                           ipv60_sgyJ
                                    of _ [Occ=Dead] { (# ipv62_sgyN [Occ=Once], ipv63_sgyO #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv63_sgyO
                                           ipv62_sgyN
                                    of s2#11_sgyP { __DEFAULT ->
                                    let {
                                      sat_sgz9 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sgz9 =
                                        let {
                                          sat_sgz8 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgz8 =
                                            case ipv63_sgyO
                                            of _ [Occ=Dead]
                                            { (ww1_sgyR [Occ=Once!], ww2_sgyS [Occ=OnceL!]) ->
                                            let {
                                              sat_sgz7 [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sgz7 =
                                                case ww1_sgyR
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sgyU [Occ=Once] ->
                                                let {
                                                  sat_sgz2 [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sgz2 =
                                                    let {
                                                      sat_sgz1 [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sgz1 =
                                                        \ (w2_sgyV [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sgyS
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sgyX [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sgyX w2_sgyV
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sgyZ [Occ=Once], ww9_sgz0 [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sgyZ ww9_sgz0
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sgz1
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sgz3 [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sgz3 =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sgz2 } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sgyU sat_sgz3
                                                of _ [Occ=Dead]
                                                { (# ww6_sgz5 [Occ=Once], ww7_sgz6 [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sgz5 ww7_sgz6
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgz7
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sgz8 } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_sgz9
                                           GHC.Types.True
                                           s2#11_sgyP
                                    of _ [Occ=Dead] { (# ipv64_sgzb [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv64_sgzb
                                    of _ [Occ=Dead]
                                    { (# ipv66_sgze [Occ=Once], ipv67_sgzf [Occ=Once] #) ->
                                    let {
                                      sat_sgzg [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sgzg =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_sgzf } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_sgzg
                                           ipv66_sgze
                                    of s2#12_sgzh { __DEFAULT ->
                                    letrec {
                                      a16_sgzi [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a16_sgzi =
                                        \ (eta3_sgzj [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 eta3_sgzj
                                          of _ [Occ=Dead]
                                          { (# ipv68_sgzl [Occ=Once], ipv69_sgzm [Occ=Once] #) ->
                                          let {
                                            ix_sgzn [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_sgzn = Automata4Coms.indices_a_get_ix ipv69_sgzm } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_sgfe
                                                 ix_sgzn
                                                 ipv68_sgzl
                                          of s2#13_sgzo { __DEFAULT ->
                                          let {
                                            sat_sgzv [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sgzv =
                                              let {
                                                sat_sgzu [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sgzu =
                                                  case ix_sgzn
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_sgzq [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_sgzq (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_sgzs [Occ=Once], ww6_sgzt [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_sgzs ww6_sgzt
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_sgzu } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sgzv
                                                 GHC.Types.True
                                                 s2#13_sgzo
                                          of _ [Occ=Dead]
                                          { (# ipv70_sgzx [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 ipv70_sgzx
                                          of _ [Occ=Dead]
                                          { (# ipv72_sgzA [Occ=Once], ipv73_sgzB [Occ=Once] #) ->
                                          let {
                                            sat_sgzC [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sgzC =
                                              Automata4Coms.indices_a_inc_ix ipv73_sgzB } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 sat_sgzC
                                                 ipv72_sgzA
                                          of s2#14_sgzD { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 s2#14_sgzD
                                          of _ [Occ=Dead]
                                          { (# ipv74_sgzF [Occ=Once*], ipv75_sgzG [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_sgzG
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_sgfk
                                                     ipv74_sgzF
                                              of _ [Occ=Dead]
                                              { (# ipv76_sgzJ [Occ=Once], ipv77_sgzK [Occ=Once] #) ->
                                              let {
                                                sat_sgzL [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sgzL =
                                                  Automata4Coms.indices_a_init ipv77_sgzK } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_sgfz
                                                     sat_sgzL
                                                     ipv76_sgzJ
                                              of s2#15_sgzM { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv7_sgeZ
                                                     s2#15_sgzM
                                              of _ [Occ=Dead]
                                              { (# ipv78_sgzO [Occ=Once], ipv79_sgzP #) ->
                                              let {
                                                sat_sgzQ [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sgzQ = (ipv79_sgzP, ipv79_sgzP) } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_sgf2
                                                     sat_sgzQ
                                                     ipv78_sgzO
                                              of s2#16_sgzR { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_sgf5
                                                     s2#16_sgzR
                                              of _ [Occ=Dead]
                                              { (# ipv80_sgzT [Occ=Once], ipv81_sgzU [Occ=Once] #) ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_sgf2
                                                     ipv80_sgzT
                                              of _ [Occ=Dead]
                                              { (# ipv82_sgzW [Occ=Once*], ipv83_sgzX [Occ=Once] #) ->
                                              case Automata4Coms.merge_a_le_pair
                                                     @ GHC.Types.Int ipv81_sgzU ipv83_sgzX
                                              of _ [Occ=Dead] {
                                                GHC.Types.False ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv9_sgf2
                                                         ipv82_sgzW
                                                  of _ [Occ=Dead]
                                                  { (# ipv84_sgA0 [Occ=Once], ipv85_sgA1 #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv85_sgA1
                                                         ipv84_sgA0
                                                  of s2#17_sgA2 { __DEFAULT ->
                                                  let {
                                                    sat_sgAm [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sgAm =
                                                      let {
                                                        sat_sgAl [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sgAl =
                                                          case ipv85_sgA1
                                                          of _ [Occ=Dead]
                                                          { (ww1_sgA4 [Occ=Once!], ww2_sgA5 [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sgAk [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sgAk =
                                                              case ww1_sgA4
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sgA7 [Occ=Once] ->
                                                              let {
                                                                sat_sgAf [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sgAf =
                                                                  let {
                                                                    sat_sgAe [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sgAe =
                                                                      \ (w2_sgA8 [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_sgA5
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_sgAa [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_sgAa w2_sgA8
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sgAc [Occ=Once], ww9_sgAd [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sgAc
                                                                          ww9_sgAd
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_sgAe
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sgAg [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sgAg =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sgAf } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sgA7 sat_sgAg
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sgAi [Occ=Once], ww7_sgAj [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sgAi ww7_sgAj
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sgAk
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sgAl } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sgAm
                                                         GHC.Types.True
                                                         s2#17_sgA2
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_sgAo [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv86_sgAo
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_sgAr [Occ=Once], ipv89_sgAs [Occ=Once] #) ->
                                                  let {
                                                    sat_sgAt [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sgAt =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv89_sgAs } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_sgfk
                                                         sat_sgAt
                                                         ipv88_sgAr
                                                  of s2#18_sgAu { __DEFAULT ->
                                                  letrec {
                                                    a17_sgAv [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a17_sgAv =
                                                      \ (eta4_sgAw [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               eta4_sgAw
                                                        of _ [Occ=Dead]
                                                        { (# ipv90_sgAy [Occ=Once], ipv91_sgAz [Occ=Once] #) ->
                                                        let {
                                                          ix1_sgAA [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_sgAA =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv91_sgAz } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_sgfe
                                                               ix1_sgAA
                                                               ipv90_sgAy
                                                        of s2#19_sgAB { __DEFAULT ->
                                                        let {
                                                          sat_sgAI [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_sgAI =
                                                            let {
                                                              sat_sgAH [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_sgAH =
                                                                case ix1_sgAA
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_sgAD [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_sgAD
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_sgAF [Occ=Once], ww6_sgAG [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_sgAF ww6_sgAG
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_sgAH } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_sgAI
                                                               GHC.Types.True
                                                               s2#19_sgAB
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_sgAK [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               ipv92_sgAK
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_sgAN [Occ=Once], ipv95_sgAO [Occ=Once] #) ->
                                                        let {
                                                          sat_sgAP [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sgAP =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv95_sgAO } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               sat_sgAP
                                                               ipv94_sgAN
                                                        of s2#20_sgAQ { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               s2#20_sgAQ
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_sgAS [Occ=Once*], ipv97_sgAT [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv97_sgAT
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_sgfk
                                                                   ipv96_sgAS
                                                            of _ [Occ=Dead]
                                                            { (# ipv98_sgAW [Occ=Once], ipv99_sgAX [Occ=Once] #) ->
                                                            let {
                                                              sat_sgAY [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_sgAY =
                                                                Automata4Coms.indices_a_init
                                                                  ipv99_sgAX } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_sgfz
                                                                   sat_sgAY
                                                                   ipv98_sgAW
                                                            of s2#21_sgAZ { __DEFAULT ->
                                                            a14_sgsD s2#21_sgAZ
                                                            }
                                                            };
                                                          GHC.Types.True -> a17_sgAv ipv96_sgAS
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a17_sgAv s2#18_sgAu
                                                  }
                                                  }
                                                  }
                                                  }
                                                  };
                                                GHC.Types.True ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv11_sgf5
                                                         ipv82_sgzW
                                                  of _ [Occ=Dead]
                                                  { (# ipv84_sgB1 [Occ=Once], ipv85_sgB2 #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv85_sgB2
                                                         ipv84_sgB1
                                                  of s2#17_sgB3 { __DEFAULT ->
                                                  let {
                                                    sat_sgBn [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sgBn =
                                                      let {
                                                        sat_sgBm [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sgBm =
                                                          case ipv85_sgB2
                                                          of _ [Occ=Dead]
                                                          { (ww1_sgB5 [Occ=Once!], ww2_sgB6 [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sgBl [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sgBl =
                                                              case ww1_sgB5
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sgB8 [Occ=Once] ->
                                                              let {
                                                                sat_sgBg [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sgBg =
                                                                  let {
                                                                    sat_sgBf [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sgBf =
                                                                      \ (w2_sgB9 [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_sgB6
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_sgBb [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_sgBb w2_sgB9
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sgBd [Occ=Once], ww9_sgBe [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sgBd
                                                                          ww9_sgBe
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_sgBf
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sgBh [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sgBh =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sgBg } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sgB8 sat_sgBh
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sgBj [Occ=Once], ww7_sgBk [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sgBj ww7_sgBk
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sgBl
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sgBm } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sgBn
                                                         GHC.Types.True
                                                         s2#17_sgB3
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_sgBp [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv86_sgBp
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_sgBs [Occ=Once], ipv89_sgBt [Occ=Once] #) ->
                                                  let {
                                                    sat_sgBu [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sgBu =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv89_sgBt } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_sgfk
                                                         sat_sgBu
                                                         ipv88_sgBs
                                                  of s2#18_sgBv { __DEFAULT ->
                                                  letrec {
                                                    a17_sgBw [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a17_sgBw =
                                                      \ (eta4_sgBx [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               eta4_sgBx
                                                        of _ [Occ=Dead]
                                                        { (# ipv90_sgBz [Occ=Once], ipv91_sgBA [Occ=Once] #) ->
                                                        let {
                                                          ix1_sgBB [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_sgBB =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv91_sgBA } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_sgfe
                                                               ix1_sgBB
                                                               ipv90_sgBz
                                                        of s2#19_sgBC { __DEFAULT ->
                                                        let {
                                                          sat_sgBJ [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_sgBJ =
                                                            let {
                                                              sat_sgBI [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_sgBI =
                                                                case ix1_sgBB
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_sgBE [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_sgBE
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_sgBG [Occ=Once], ww6_sgBH [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_sgBG ww6_sgBH
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_sgBI } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_sgBJ
                                                               GHC.Types.True
                                                               s2#19_sgBC
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_sgBL [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               ipv92_sgBL
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_sgBO [Occ=Once], ipv95_sgBP [Occ=Once] #) ->
                                                        let {
                                                          sat_sgBQ [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sgBQ =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv95_sgBP } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               sat_sgBQ
                                                               ipv94_sgBO
                                                        of s2#20_sgBR { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               s2#20_sgBR
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_sgBT [Occ=Once*], ipv97_sgBU [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv97_sgBU
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_sgfk
                                                                   ipv96_sgBT
                                                            of _ [Occ=Dead]
                                                            { (# ipv98_sgBX [Occ=Once], ipv99_sgBY [Occ=Once] #) ->
                                                            let {
                                                              sat_sgBZ [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_sgBZ =
                                                                Automata4Coms.indices_a_init
                                                                  ipv99_sgBY } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_sgfz
                                                                   sat_sgBZ
                                                                   ipv98_sgBX
                                                            of s2#21_sgC0 { __DEFAULT ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ [GHC.Types.Int]
                                                                   ipv3_sgeT
                                                                   s2#21_sgC0
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_sgC2 [Occ=Once*], ipv101_sgC3 [Occ=Once!] #) ->
                                                            case ipv101_sgC3 of _ [Occ=Dead] {
                                                              [] -> a13_sgrA ipv100_sgC2;
                                                              : i3_sgC5 [Occ=Once]
                                                                is3_sgC6 [Occ=Once] ->
                                                                case GHC.Prim.writeMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ [GHC.Types.Int]
                                                                       ipv3_sgeT
                                                                       is3_sgC6
                                                                       ipv100_sgC2
                                                                of s2#22_sgC7 { __DEFAULT ->
                                                                case GHC.Prim.writeMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ GHC.Types.Int
                                                                       ipv7_sgeZ
                                                                       i3_sgC5
                                                                       s2#22_sgC7
                                                                of s2#23_sgC8 { __DEFAULT ->
                                                                a12_sgqx s2#23_sgC8
                                                                }
                                                                }
                                                            }
                                                            }
                                                            }
                                                            };
                                                          GHC.Types.True -> a17_sgBw ipv96_sgBT
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a17_sgBw s2#18_sgBv
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              };
                                            GHC.Types.True -> a16_sgzi ipv74_sgzF
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a16_sgzi s2#12_sgzh
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_sgf5
                                           ipv60_sgyJ
                                    of _ [Occ=Dead] { (# ipv62_sgCa [Occ=Once], ipv63_sgCb #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv63_sgCb
                                           ipv62_sgCa
                                    of s2#11_sgCc { __DEFAULT ->
                                    let {
                                      sat_sgCw [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sgCw =
                                        let {
                                          sat_sgCv [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgCv =
                                            case ipv63_sgCb
                                            of _ [Occ=Dead]
                                            { (ww1_sgCe [Occ=Once!], ww2_sgCf [Occ=OnceL!]) ->
                                            let {
                                              sat_sgCu [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sgCu =
                                                case ww1_sgCe
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sgCh [Occ=Once] ->
                                                let {
                                                  sat_sgCp [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sgCp =
                                                    let {
                                                      sat_sgCo [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sgCo =
                                                        \ (w2_sgCi [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sgCf
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sgCk [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sgCk w2_sgCi
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sgCm [Occ=Once], ww9_sgCn [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sgCm ww9_sgCn
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sgCo
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sgCq [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sgCq =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sgCp } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sgCh sat_sgCq
                                                of _ [Occ=Dead]
                                                { (# ww6_sgCs [Occ=Once], ww7_sgCt [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sgCs ww7_sgCt
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgCu
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sgCv } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_sgCw
                                           GHC.Types.True
                                           s2#11_sgCc
                                    of _ [Occ=Dead] { (# ipv64_sgCy [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv64_sgCy
                                    of _ [Occ=Dead]
                                    { (# ipv66_sgCB [Occ=Once], ipv67_sgCC [Occ=Once] #) ->
                                    let {
                                      sat_sgCD [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sgCD =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_sgCC } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_sgCD
                                           ipv66_sgCB
                                    of s2#12_sgCE { __DEFAULT ->
                                    letrec {
                                      a16_sgCF [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a16_sgCF =
                                        \ (eta3_sgCG [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 eta3_sgCG
                                          of _ [Occ=Dead]
                                          { (# ipv68_sgCI [Occ=Once], ipv69_sgCJ [Occ=Once] #) ->
                                          let {
                                            ix_sgCK [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_sgCK = Automata4Coms.indices_a_get_ix ipv69_sgCJ } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_sgfe
                                                 ix_sgCK
                                                 ipv68_sgCI
                                          of s2#13_sgCL { __DEFAULT ->
                                          let {
                                            sat_sgCS [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sgCS =
                                              let {
                                                sat_sgCR [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sgCR =
                                                  case ix_sgCK
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_sgCN [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_sgCN (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_sgCP [Occ=Once], ww6_sgCQ [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_sgCP ww6_sgCQ
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_sgCR } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sgCS
                                                 GHC.Types.True
                                                 s2#13_sgCL
                                          of _ [Occ=Dead]
                                          { (# ipv70_sgCU [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 ipv70_sgCU
                                          of _ [Occ=Dead]
                                          { (# ipv72_sgCX [Occ=Once], ipv73_sgCY [Occ=Once] #) ->
                                          let {
                                            sat_sgCZ [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sgCZ =
                                              Automata4Coms.indices_a_inc_ix ipv73_sgCY } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 sat_sgCZ
                                                 ipv72_sgCX
                                          of s2#14_sgD0 { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 s2#14_sgD0
                                          of _ [Occ=Dead]
                                          { (# ipv74_sgD2 [Occ=Once*], ipv75_sgD3 [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_sgD3
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_sgfk
                                                     ipv74_sgD2
                                              of _ [Occ=Dead]
                                              { (# ipv76_sgD6 [Occ=Once], ipv77_sgD7 [Occ=Once] #) ->
                                              let {
                                                sat_sgD8 [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sgD8 =
                                                  Automata4Coms.indices_a_init ipv77_sgD7 } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_sgfz
                                                     sat_sgD8
                                                     ipv76_sgD6
                                              of s2#15_sgD9 { __DEFAULT ->
                                              a12_sgqx s2#15_sgD9
                                              }
                                              };
                                            GHC.Types.True -> a16_sgCF ipv74_sgD2
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a16_sgCF s2#12_sgCE
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                            }
                            } } in
                      let {
                        a16_sgDa
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a16_sgDa =
                          \ (eta2_sgDb [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            letrec {
                              a18_sgDd
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a18_sgDd =
                                \ (eta3_sgDI [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_sgeT eta3_sgDI
                                  of _ [Occ=Dead]
                                  { (# ipv54_sgDK [Occ=Once*], ipv55_sgDL [Occ=Once!] #) ->
                                  case ipv55_sgDL of _ [Occ=Dead] {
                                    [] ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv11_sgf5
                                             ipv54_sgDK
                                      of _ [Occ=Dead] { (# ipv56_sgDO [Occ=Once], ipv57_sgDP #) ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv19_sgfh
                                             ipv57_sgDP
                                             ipv56_sgDO
                                      of s2#8_sgDQ { __DEFAULT ->
                                      let {
                                        sat_sgEa [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                        [LclId, Str=DmdType]
                                        sat_sgEa =
                                          let {
                                            sat_sgE9 [Occ=Once] :: [GHC.Types.Char]
                                            [LclId, Str=DmdType]
                                            sat_sgE9 =
                                              case ipv57_sgDP
                                              of _ [Occ=Dead]
                                              { (ww1_sgDS [Occ=Once!], ww2_sgDT [Occ=OnceL!]) ->
                                              let {
                                                sat_sgE8 [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sgE8 =
                                                  case ww1_sgDS
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww4_sgDV [Occ=Once] ->
                                                  let {
                                                    sat_sgE3 [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId, Str=DmdType]
                                                    sat_sgE3 =
                                                      let {
                                                        sat_sgE2 [Occ=Once]
                                                          :: GHC.Base.String -> GHC.Base.String
                                                        [LclId, Str=DmdType]
                                                        sat_sgE2 =
                                                          \ (w2_sgDW [Occ=Once]
                                                               :: GHC.Base.String) ->
                                                            case ww2_sgDT
                                                            of _ [Occ=Dead]
                                                            { GHC.Types.I# ww6_sgDY [Occ=Once] ->
                                                            case GHC.Show.$wshowSignedInt
                                                                   0 ww6_sgDY w2_sgDW
                                                            of _ [Occ=Dead]
                                                            { (# ww8_sgE0 [Occ=Once], ww9_sgE1 [Occ=Once] #) ->
                                                            GHC.Types.:
                                                              @ GHC.Types.Char ww8_sgE0 ww9_sgE1
                                                            }
                                                            } } in
                                                      GHC.List.foldr1_$sfoldr1
                                                        @ (GHC.Base.String -> GHC.Base.String)
                                                        GHC.Show.$fShow(,)1
                                                        sat_sgE2
                                                        (GHC.Types.[] @ GHC.Show.ShowS)
                                                        lvl4_rger } in
                                                  let {
                                                    sat_sgE4 [Occ=Once] :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sgE4 =
                                                      GHC.Types.:
                                                        @ GHC.Types.Char
                                                        GHC.Show.showList__1
                                                        sat_sgE3 } in
                                                  case GHC.Show.$wshowSignedInt 0 ww4_sgDV sat_sgE4
                                                  of _ [Occ=Dead]
                                                  { (# ww6_sgE6 [Occ=Once], ww7_sgE7 [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww6_sgE6 ww7_sgE7
                                                  }
                                                  } } in
                                              GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgE8
                                              } } in
                                          GHC.CString.unpackAppendCString# "merg: "# sat_sgE9 } in
                                      case GHC.IO.Handle.Text.hPutStr2
                                             GHC.IO.Handle.FD.stdout
                                             sat_sgEa
                                             GHC.Types.True
                                             s2#8_sgDQ
                                      of _ [Occ=Dead] { (# ipv58_sgEc [Occ=Once], _ [Occ=Dead] #) ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv19_sgfh
                                             ipv58_sgEc
                                      of _ [Occ=Dead]
                                      { (# ipv60_sgEf [Occ=Once], ipv61_sgEg [Occ=Once] #) ->
                                      let {
                                        sat_sgEh [Occ=Once] :: GHC.Types.Int
                                        [LclId, Str=DmdType]
                                        sat_sgEh =
                                          Data.Tuple.snd
                                            @ GHC.Types.Int @ GHC.Types.Int ipv61_sgEg } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_sgfk
                                             sat_sgEh
                                             ipv60_sgEf
                                      of s2#9_sgEi { __DEFAULT ->
                                      letrec {
                                        a19_sgEj [Occ=LoopBreaker]
                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                        a19_sgEj =
                                          \ (eta4_sgEk [Occ=Once]
                                               :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                            case GHC.Prim.readMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_sgfz
                                                   eta4_sgEk
                                            of _ [Occ=Dead]
                                            { (# ipv62_sgEm [Occ=Once], ipv63_sgEn [Occ=Once] #) ->
                                            let {
                                              ix_sgEo [Dmd=<L,U(U)>] :: GHC.Types.Int
                                              [LclId, Str=DmdType]
                                              ix_sgEo =
                                                Automata4Coms.indices_a_get_ix ipv63_sgEn } in
                                            case GHC.Prim.writeMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ GHC.Types.Int
                                                   ipv17_sgfe
                                                   ix_sgEo
                                                   ipv62_sgEm
                                            of s2#10_sgEp { __DEFAULT ->
                                            let {
                                              sat_sgEw [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_sgEw =
                                                let {
                                                  sat_sgEv [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sgEv =
                                                    case ix_sgEo
                                                    of _ [Occ=Dead]
                                                    { GHC.Types.I# ww3_sgEr [Occ=Once] ->
                                                    case GHC.Show.$wshowSignedInt
                                                           0
                                                           ww3_sgEr
                                                           (GHC.Types.[] @ GHC.Types.Char)
                                                    of _ [Occ=Dead]
                                                    { (# ww5_sgEt [Occ=Once], ww6_sgEu [Occ=Once] #) ->
                                                    GHC.Types.: @ GHC.Types.Char ww5_sgEt ww6_sgEu
                                                    }
                                                    } } in
                                                GHC.CString.unpackAppendCString#
                                                  "filtd:"# sat_sgEv } in
                                            case GHC.IO.Handle.Text.hPutStr2
                                                   GHC.IO.Handle.FD.stdout
                                                   sat_sgEw
                                                   GHC.Types.True
                                                   s2#10_sgEp
                                            of _ [Occ=Dead]
                                            { (# ipv64_sgEy [Occ=Once], _ [Occ=Dead] #) ->
                                            case GHC.Prim.readMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_sgfz
                                                   ipv64_sgEy
                                            of _ [Occ=Dead]
                                            { (# ipv66_sgEB [Occ=Once], ipv67_sgEC [Occ=Once] #) ->
                                            let {
                                              sat_sgED [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                              [LclId, Str=DmdType]
                                              sat_sgED =
                                                Automata4Coms.indices_a_inc_ix ipv67_sgEC } in
                                            case GHC.Prim.writeMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_sgfz
                                                   sat_sgED
                                                   ipv66_sgEB
                                            of s2#11_sgEE { __DEFAULT ->
                                            case GHC.Prim.readMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_sgfz
                                                   s2#11_sgEE
                                            of _ [Occ=Dead]
                                            { (# ipv68_sgEG [Occ=Once*], ipv69_sgEH [Occ=Once] #) ->
                                            case Automata4Coms.indices_a_check ipv69_sgEH
                                            of _ [Occ=Dead] {
                                              GHC.Types.False ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ GHC.Types.Int
                                                       ipv21_sgfk
                                                       ipv68_sgEG
                                                of _ [Occ=Dead]
                                                { (# ipv70_sgEK [Occ=Once], ipv71_sgEL [Occ=Once] #) ->
                                                let {
                                                  sat_sgEM [Occ=Once]
                                                    :: (GHC.Types.Int, GHC.Types.Int)
                                                  [LclId, Str=DmdType]
                                                  sat_sgEM =
                                                    Automata4Coms.indices_a_init ipv71_sgEL } in
                                                case GHC.Prim.writeMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_sgfz
                                                       sat_sgEM
                                                       ipv70_sgEK
                                                of s2#12_sgEN { __DEFAULT ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ GHC.Types.Int
                                                       ipv13_sgf8
                                                       s2#12_sgEN
                                                of _ [Occ=Dead]
                                                { (# ipv72_sgEP [Occ=Once], ipv73_sgEQ #) ->
                                                let {
                                                  sat_sgER [Occ=Once]
                                                    :: (GHC.Types.Int, GHC.Types.Int)
                                                  [LclId, Str=DmdType]
                                                  sat_sgER = (ipv73_sgEQ, ipv73_sgEQ) } in
                                                case GHC.Prim.writeMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv11_sgf5
                                                       sat_sgER
                                                       ipv72_sgEP
                                                of s2#13_sgES { __DEFAULT ->
                                                a11_sgpu s2#13_sgES
                                                }
                                                }
                                                }
                                                };
                                              GHC.Types.True -> a19_sgEj ipv68_sgEG
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }; } in
                                      a19_sgEj s2#9_sgEi
                                      }
                                      }
                                      }
                                      }
                                      };
                                    : i2_sgET [Occ=Once] is2_sgEU [Occ=Once] ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ [GHC.Types.Int]
                                             ipv3_sgeT
                                             is2_sgEU
                                             ipv54_sgDK
                                      of s2#8_sgEV { __DEFAULT ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv7_sgeZ
                                             i2_sgET
                                             s2#8_sgEV
                                      of s2#9_sgEW { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv7_sgeZ
                                             s2#9_sgEW
                                      of _ [Occ=Dead] { (# ipv56_sgEY [Occ=Once], ipv57_sgEZ #) ->
                                      let {
                                        sat_sgF0 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sgF0 = (ipv57_sgEZ, ipv57_sgEZ) } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv9_sgf2
                                             sat_sgF0
                                             ipv56_sgEY
                                      of s2#10_sgF1 { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv11_sgf5
                                             s2#10_sgF1
                                      of _ [Occ=Dead]
                                      { (# ipv58_sgF3 [Occ=Once], ipv59_sgF4 [Occ=Once] #) ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv9_sgf2
                                             ipv58_sgF3
                                      of _ [Occ=Dead]
                                      { (# ipv60_sgF6 [Occ=Once*], ipv61_sgF7 [Occ=Once] #) ->
                                      case Automata4Coms.merge_a_le_pair
                                             @ GHC.Types.Int ipv59_sgF4 ipv61_sgF7
                                      of _ [Occ=Dead] {
                                        GHC.Types.False ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv9_sgf2
                                                 ipv60_sgF6
                                          of _ [Occ=Dead]
                                          { (# ipv62_sgFa [Occ=Once], ipv63_sgFb #) ->
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_sgfh
                                                 ipv63_sgFb
                                                 ipv62_sgFa
                                          of s2#11_sgFc { __DEFAULT ->
                                          let {
                                            sat_sgFw [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sgFw =
                                              let {
                                                sat_sgFv [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sgFv =
                                                  case ipv63_sgFb
                                                  of _ [Occ=Dead]
                                                  { (ww1_sgFe [Occ=Once!], ww2_sgFf [Occ=OnceL!]) ->
                                                  let {
                                                    sat_sgFu [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId, Str=DmdType]
                                                    sat_sgFu =
                                                      case ww1_sgFe
                                                      of _ [Occ=Dead]
                                                      { GHC.Types.I# ww4_sgFh [Occ=Once] ->
                                                      let {
                                                        sat_sgFp [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sgFp =
                                                          let {
                                                            sat_sgFo [Occ=Once]
                                                              :: GHC.Base.String -> GHC.Base.String
                                                            [LclId, Str=DmdType]
                                                            sat_sgFo =
                                                              \ (w2_sgFi [Occ=Once]
                                                                   :: GHC.Base.String) ->
                                                                case ww2_sgFf
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww6_sgFk [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0 ww6_sgFk w2_sgFi
                                                                of _ [Occ=Dead]
                                                                { (# ww8_sgFm [Occ=Once], ww9_sgFn [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww8_sgFm ww9_sgFn
                                                                }
                                                                } } in
                                                          GHC.List.foldr1_$sfoldr1
                                                            @ (GHC.Base.String -> GHC.Base.String)
                                                            GHC.Show.$fShow(,)1
                                                            sat_sgFo
                                                            (GHC.Types.[] @ GHC.Show.ShowS)
                                                            lvl4_rger } in
                                                      let {
                                                        sat_sgFq [Occ=Once] :: GHC.Base.String
                                                        [LclId, Str=DmdType]
                                                        sat_sgFq =
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.showList__1
                                                            sat_sgFp } in
                                                      case GHC.Show.$wshowSignedInt
                                                             0 ww4_sgFh sat_sgFq
                                                      of _ [Occ=Dead]
                                                      { (# ww6_sgFs [Occ=Once], ww7_sgFt [Occ=Once] #) ->
                                                      GHC.Types.: @ GHC.Types.Char ww6_sgFs ww7_sgFt
                                                      }
                                                      } } in
                                                  GHC.Types.:
                                                    @ GHC.Types.Char GHC.Show.shows13 sat_sgFu
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "merg: "# sat_sgFv } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sgFw
                                                 GHC.Types.True
                                                 s2#11_sgFc
                                          of _ [Occ=Dead]
                                          { (# ipv64_sgFy [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_sgfh
                                                 ipv64_sgFy
                                          of _ [Occ=Dead]
                                          { (# ipv66_sgFB [Occ=Once], ipv67_sgFC [Occ=Once] #) ->
                                          let {
                                            sat_sgFD [Occ=Once] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            sat_sgFD =
                                              Data.Tuple.snd
                                                @ GHC.Types.Int @ GHC.Types.Int ipv67_sgFC } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv21_sgfk
                                                 sat_sgFD
                                                 ipv66_sgFB
                                          of s2#12_sgFE { __DEFAULT ->
                                          a17_sgDc s2#12_sgFE
                                          }
                                          }
                                          }
                                          }
                                          };
                                        GHC.Types.True ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv11_sgf5
                                                 ipv60_sgF6
                                          of _ [Occ=Dead]
                                          { (# ipv62_sgFG [Occ=Once], ipv63_sgFH #) ->
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_sgfh
                                                 ipv63_sgFH
                                                 ipv62_sgFG
                                          of s2#11_sgFI { __DEFAULT ->
                                          let {
                                            sat_sgG2 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sgG2 =
                                              let {
                                                sat_sgG1 [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sgG1 =
                                                  case ipv63_sgFH
                                                  of _ [Occ=Dead]
                                                  { (ww1_sgFK [Occ=Once!], ww2_sgFL [Occ=OnceL!]) ->
                                                  let {
                                                    sat_sgG0 [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId, Str=DmdType]
                                                    sat_sgG0 =
                                                      case ww1_sgFK
                                                      of _ [Occ=Dead]
                                                      { GHC.Types.I# ww4_sgFN [Occ=Once] ->
                                                      let {
                                                        sat_sgFV [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sgFV =
                                                          let {
                                                            sat_sgFU [Occ=Once]
                                                              :: GHC.Base.String -> GHC.Base.String
                                                            [LclId, Str=DmdType]
                                                            sat_sgFU =
                                                              \ (w2_sgFO [Occ=Once]
                                                                   :: GHC.Base.String) ->
                                                                case ww2_sgFL
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww6_sgFQ [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0 ww6_sgFQ w2_sgFO
                                                                of _ [Occ=Dead]
                                                                { (# ww8_sgFS [Occ=Once], ww9_sgFT [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww8_sgFS ww9_sgFT
                                                                }
                                                                } } in
                                                          GHC.List.foldr1_$sfoldr1
                                                            @ (GHC.Base.String -> GHC.Base.String)
                                                            GHC.Show.$fShow(,)1
                                                            sat_sgFU
                                                            (GHC.Types.[] @ GHC.Show.ShowS)
                                                            lvl4_rger } in
                                                      let {
                                                        sat_sgFW [Occ=Once] :: GHC.Base.String
                                                        [LclId, Str=DmdType]
                                                        sat_sgFW =
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.showList__1
                                                            sat_sgFV } in
                                                      case GHC.Show.$wshowSignedInt
                                                             0 ww4_sgFN sat_sgFW
                                                      of _ [Occ=Dead]
                                                      { (# ww6_sgFY [Occ=Once], ww7_sgFZ [Occ=Once] #) ->
                                                      GHC.Types.: @ GHC.Types.Char ww6_sgFY ww7_sgFZ
                                                      }
                                                      } } in
                                                  GHC.Types.:
                                                    @ GHC.Types.Char GHC.Show.shows13 sat_sgG0
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "merg: "# sat_sgG1 } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sgG2
                                                 GHC.Types.True
                                                 s2#11_sgFI
                                          of _ [Occ=Dead]
                                          { (# ipv64_sgG4 [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_sgfh
                                                 ipv64_sgG4
                                          of _ [Occ=Dead]
                                          { (# ipv66_sgG7 [Occ=Once], ipv67_sgG8 [Occ=Once] #) ->
                                          let {
                                            sat_sgG9 [Occ=Once] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            sat_sgG9 =
                                              Data.Tuple.snd
                                                @ GHC.Types.Int @ GHC.Types.Int ipv67_sgG8 } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv21_sgfk
                                                 sat_sgG9
                                                 ipv66_sgG7
                                          of s2#12_sgGa { __DEFAULT ->
                                          letrec {
                                            a19_sgGb [Occ=LoopBreaker]
                                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                            [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                            a19_sgGb =
                                              \ (eta4_sgGc [Occ=Once]
                                                   :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_sgfz
                                                       eta4_sgGc
                                                of _ [Occ=Dead]
                                                { (# ipv68_sgGe [Occ=Once], ipv69_sgGf [Occ=Once] #) ->
                                                let {
                                                  ix_sgGg [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                  [LclId, Str=DmdType]
                                                  ix_sgGg =
                                                    Automata4Coms.indices_a_get_ix ipv69_sgGf } in
                                                case GHC.Prim.writeMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ GHC.Types.Int
                                                       ipv17_sgfe
                                                       ix_sgGg
                                                       ipv68_sgGe
                                                of s2#13_sgGh { __DEFAULT ->
                                                let {
                                                  sat_sgGo [Occ=Once, Dmd=<L,1*U>]
                                                    :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sgGo =
                                                    let {
                                                      sat_sgGn [Occ=Once] :: [GHC.Types.Char]
                                                      [LclId, Str=DmdType]
                                                      sat_sgGn =
                                                        case ix_sgGg
                                                        of _ [Occ=Dead]
                                                        { GHC.Types.I# ww3_sgGj [Occ=Once] ->
                                                        case GHC.Show.$wshowSignedInt
                                                               0
                                                               ww3_sgGj
                                                               (GHC.Types.[] @ GHC.Types.Char)
                                                        of _ [Occ=Dead]
                                                        { (# ww5_sgGl [Occ=Once], ww6_sgGm [Occ=Once] #) ->
                                                        GHC.Types.:
                                                          @ GHC.Types.Char ww5_sgGl ww6_sgGm
                                                        }
                                                        } } in
                                                    GHC.CString.unpackAppendCString#
                                                      "filtd:"# sat_sgGn } in
                                                case GHC.IO.Handle.Text.hPutStr2
                                                       GHC.IO.Handle.FD.stdout
                                                       sat_sgGo
                                                       GHC.Types.True
                                                       s2#13_sgGh
                                                of _ [Occ=Dead]
                                                { (# ipv70_sgGq [Occ=Once], _ [Occ=Dead] #) ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_sgfz
                                                       ipv70_sgGq
                                                of _ [Occ=Dead]
                                                { (# ipv72_sgGt [Occ=Once], ipv73_sgGu [Occ=Once] #) ->
                                                let {
                                                  sat_sgGv [Occ=Once]
                                                    :: (GHC.Types.Int, GHC.Types.Int)
                                                  [LclId, Str=DmdType]
                                                  sat_sgGv =
                                                    Automata4Coms.indices_a_inc_ix ipv73_sgGu } in
                                                case GHC.Prim.writeMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_sgfz
                                                       sat_sgGv
                                                       ipv72_sgGt
                                                of s2#14_sgGw { __DEFAULT ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_sgfz
                                                       s2#14_sgGw
                                                of _ [Occ=Dead]
                                                { (# ipv74_sgGy [Occ=Once*], ipv75_sgGz [Occ=Once] #) ->
                                                case Automata4Coms.indices_a_check ipv75_sgGz
                                                of _ [Occ=Dead] {
                                                  GHC.Types.False ->
                                                    case GHC.Prim.readMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ GHC.Types.Int
                                                           ipv21_sgfk
                                                           ipv74_sgGy
                                                    of _ [Occ=Dead]
                                                    { (# ipv76_sgGC [Occ=Once], ipv77_sgGD [Occ=Once] #) ->
                                                    let {
                                                      sat_sgGE [Occ=Once]
                                                        :: (GHC.Types.Int, GHC.Types.Int)
                                                      [LclId, Str=DmdType]
                                                      sat_sgGE =
                                                        Automata4Coms.indices_a_init ipv77_sgGD } in
                                                    case GHC.Prim.writeMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ (GHC.Types.Int, GHC.Types.Int)
                                                           ipv31_sgfz
                                                           sat_sgGE
                                                           ipv76_sgGC
                                                    of s2#15_sgGF { __DEFAULT ->
                                                    a15_sgwc s2#15_sgGF
                                                    }
                                                    };
                                                  GHC.Types.True -> a19_sgGb ipv74_sgGy
                                                }
                                                }
                                                }
                                                }
                                                }
                                                }
                                                }; } in
                                          a19_sgGb s2#12_sgGa
                                          }
                                          }
                                          }
                                          }
                                          }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                  }
                                  };
                              a17_sgDc [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a17_sgDc =
                                \ (eta3_sgDe [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         eta3_sgDe
                                  of _ [Occ=Dead]
                                  { (# ipv54_sgDg [Occ=Once], ipv55_sgDh [Occ=Once] #) ->
                                  let {
                                    ix_sgDi [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_sgDi = Automata4Coms.indices_a_get_ix ipv55_sgDh } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_sgfe
                                         ix_sgDi
                                         ipv54_sgDg
                                  of s2#8_sgDj { __DEFAULT ->
                                  let {
                                    sat_sgDq [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_sgDq =
                                      let {
                                        sat_sgDp [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_sgDp =
                                          case ix_sgDi
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_sgDl [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_sgDl (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_sgDn [Occ=Once], ww6_sgDo [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_sgDn ww6_sgDo
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_sgDp } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_sgDq GHC.Types.True s2#8_sgDj
                                  of _ [Occ=Dead] { (# ipv56_sgDs [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         ipv56_sgDs
                                  of _ [Occ=Dead]
                                  { (# ipv58_sgDv [Occ=Once], ipv59_sgDw [Occ=Once] #) ->
                                  let {
                                    sat_sgDx [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_sgDx = Automata4Coms.indices_a_inc_ix ipv59_sgDw } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         sat_sgDx
                                         ipv58_sgDv
                                  of s2#9_sgDy { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         s2#9_sgDy
                                  of _ [Occ=Dead]
                                  { (# ipv60_sgDA [Occ=Once*], ipv61_sgDB [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv61_sgDB of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_sgfk
                                             ipv60_sgDA
                                      of _ [Occ=Dead]
                                      { (# ipv62_sgDE [Occ=Once], ipv63_sgDF [Occ=Once] #) ->
                                      let {
                                        sat_sgDG [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sgDG = Automata4Coms.indices_a_init ipv63_sgDF } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_sgfz
                                             sat_sgDG
                                             ipv62_sgDE
                                      of s2#10_sgDH { __DEFAULT ->
                                      a18_sgDd s2#10_sgDH
                                      }
                                      };
                                    GHC.Types.True -> a17_sgDc ipv60_sgDA
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a18_sgDd eta2_sgDb } in
                      let {
                        a17_sgGG
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a17_sgGG =
                          \ (eta2_sgGH [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_sgeT eta2_sgGH
                            of _ [Occ=Dead]
                            { (# ipv54_sgGJ [Occ=Once*], ipv55_sgGK [Occ=Once!] #) ->
                            case ipv55_sgGK of _ [Occ=Dead] {
                              [] ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_sgf8 ipv54_sgGJ
                                of _ [Occ=Dead] { (# ipv56_sgGN [Occ=Once], ipv57_sgGO #) ->
                                let {
                                  sat_sgGP [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sgGP = (ipv57_sgGO, ipv57_sgGO) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       sat_sgGP
                                       ipv56_sgGN
                                of s2#8_sgGQ { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       s2#8_sgGQ
                                of _ [Occ=Dead]
                                { (# ipv58_sgGS [Occ=Once], ipv59_sgGT [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       ipv58_sgGS
                                of _ [Occ=Dead]
                                { (# ipv60_sgGV [Occ=Once*], ipv61_sgGW [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv59_sgGT ipv61_sgGW
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_sgf2
                                           ipv60_sgGV
                                    of _ [Occ=Dead] { (# ipv62_sgGZ [Occ=Once], ipv63_sgH0 #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv63_sgH0
                                           ipv62_sgGZ
                                    of s2#9_sgH1 { __DEFAULT ->
                                    let {
                                      sat_sgHl [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sgHl =
                                        let {
                                          sat_sgHk [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgHk =
                                            case ipv63_sgH0
                                            of _ [Occ=Dead]
                                            { (ww1_sgH3 [Occ=Once!], ww2_sgH4 [Occ=OnceL!]) ->
                                            let {
                                              sat_sgHj [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sgHj =
                                                case ww1_sgH3
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sgH6 [Occ=Once] ->
                                                let {
                                                  sat_sgHe [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sgHe =
                                                    let {
                                                      sat_sgHd [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sgHd =
                                                        \ (w2_sgH7 [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sgH4
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sgH9 [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sgH9 w2_sgH7
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sgHb [Occ=Once], ww9_sgHc [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sgHb ww9_sgHc
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sgHd
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sgHf [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sgHf =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sgHe } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sgH6 sat_sgHf
                                                of _ [Occ=Dead]
                                                { (# ww6_sgHh [Occ=Once], ww7_sgHi [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sgHh ww7_sgHi
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgHj
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sgHk } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout sat_sgHl GHC.Types.True s2#9_sgH1
                                    of _ [Occ=Dead] { (# ipv64_sgHn [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv64_sgHn
                                    of _ [Occ=Dead]
                                    { (# ipv66_sgHq [Occ=Once], ipv67_sgHr [Occ=Once] #) ->
                                    let {
                                      sat_sgHs [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sgHs =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_sgHr } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_sgHs
                                           ipv66_sgHq
                                    of s2#10_sgHt { __DEFAULT ->
                                    letrec {
                                      a18_sgHu [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a18_sgHu =
                                        \ (eta3_sgHv [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 eta3_sgHv
                                          of _ [Occ=Dead]
                                          { (# ipv68_sgHx [Occ=Once], ipv69_sgHy [Occ=Once] #) ->
                                          let {
                                            ix_sgHz [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_sgHz = Automata4Coms.indices_a_get_ix ipv69_sgHy } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_sgfe
                                                 ix_sgHz
                                                 ipv68_sgHx
                                          of s2#11_sgHA { __DEFAULT ->
                                          let {
                                            sat_sgHH [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sgHH =
                                              let {
                                                sat_sgHG [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sgHG =
                                                  case ix_sgHz
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_sgHC [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_sgHC (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_sgHE [Occ=Once], ww6_sgHF [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_sgHE ww6_sgHF
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_sgHG } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sgHH
                                                 GHC.Types.True
                                                 s2#11_sgHA
                                          of _ [Occ=Dead]
                                          { (# ipv70_sgHJ [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 ipv70_sgHJ
                                          of _ [Occ=Dead]
                                          { (# ipv72_sgHM [Occ=Once], ipv73_sgHN [Occ=Once] #) ->
                                          let {
                                            sat_sgHO [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sgHO =
                                              Automata4Coms.indices_a_inc_ix ipv73_sgHN } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 sat_sgHO
                                                 ipv72_sgHM
                                          of s2#12_sgHP { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 s2#12_sgHP
                                          of _ [Occ=Dead]
                                          { (# ipv74_sgHR [Occ=Once*], ipv75_sgHS [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_sgHS
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_sgfk
                                                     ipv74_sgHR
                                              of _ [Occ=Dead]
                                              { (# ipv76_sgHV [Occ=Once], ipv77_sgHW [Occ=Once] #) ->
                                              let {
                                                sat_sgHX [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sgHX =
                                                  Automata4Coms.indices_a_init ipv77_sgHW } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_sgfz
                                                     sat_sgHX
                                                     ipv76_sgHV
                                              of s2#13_sgHY { __DEFAULT ->
                                              a10_sgoi s2#13_sgHY
                                              }
                                              };
                                            GHC.Types.True -> a18_sgHu ipv74_sgHR
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a18_sgHu s2#10_sgHt
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_sgf5
                                           ipv60_sgGV
                                    of _ [Occ=Dead] { (# ipv62_sgI0 [Occ=Once], ipv63_sgI1 #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv63_sgI1
                                           ipv62_sgI0
                                    of s2#9_sgI2 { __DEFAULT ->
                                    let {
                                      sat_sgIm [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sgIm =
                                        let {
                                          sat_sgIl [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgIl =
                                            case ipv63_sgI1
                                            of _ [Occ=Dead]
                                            { (ww1_sgI4 [Occ=Once!], ww2_sgI5 [Occ=OnceL!]) ->
                                            let {
                                              sat_sgIk [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sgIk =
                                                case ww1_sgI4
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sgI7 [Occ=Once] ->
                                                let {
                                                  sat_sgIf [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sgIf =
                                                    let {
                                                      sat_sgIe [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sgIe =
                                                        \ (w2_sgI8 [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sgI5
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sgIa [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sgIa w2_sgI8
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sgIc [Occ=Once], ww9_sgId [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sgIc ww9_sgId
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sgIe
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sgIg [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sgIg =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sgIf } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sgI7 sat_sgIg
                                                of _ [Occ=Dead]
                                                { (# ww6_sgIi [Occ=Once], ww7_sgIj [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sgIi ww7_sgIj
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgIk
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sgIl } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout sat_sgIm GHC.Types.True s2#9_sgI2
                                    of _ [Occ=Dead] { (# ipv64_sgIo [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv64_sgIo
                                    of _ [Occ=Dead]
                                    { (# ipv66_sgIr [Occ=Once], ipv67_sgIs [Occ=Once] #) ->
                                    let {
                                      sat_sgIt [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sgIt =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_sgIs } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_sgIt
                                           ipv66_sgIr
                                    of s2#10_sgIu { __DEFAULT ->
                                    letrec {
                                      a18_sgIv [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a18_sgIv =
                                        \ (eta3_sgIw [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 eta3_sgIw
                                          of _ [Occ=Dead]
                                          { (# ipv68_sgIy [Occ=Once], ipv69_sgIz [Occ=Once] #) ->
                                          let {
                                            ix_sgIA [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_sgIA = Automata4Coms.indices_a_get_ix ipv69_sgIz } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_sgfe
                                                 ix_sgIA
                                                 ipv68_sgIy
                                          of s2#11_sgIB { __DEFAULT ->
                                          let {
                                            sat_sgII [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sgII =
                                              let {
                                                sat_sgIH [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sgIH =
                                                  case ix_sgIA
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_sgID [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_sgID (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_sgIF [Occ=Once], ww6_sgIG [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_sgIF ww6_sgIG
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_sgIH } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sgII
                                                 GHC.Types.True
                                                 s2#11_sgIB
                                          of _ [Occ=Dead]
                                          { (# ipv70_sgIK [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 ipv70_sgIK
                                          of _ [Occ=Dead]
                                          { (# ipv72_sgIN [Occ=Once], ipv73_sgIO [Occ=Once] #) ->
                                          let {
                                            sat_sgIP [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sgIP =
                                              Automata4Coms.indices_a_inc_ix ipv73_sgIO } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 sat_sgIP
                                                 ipv72_sgIN
                                          of s2#12_sgIQ { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 s2#12_sgIQ
                                          of _ [Occ=Dead]
                                          { (# ipv74_sgIS [Occ=Once*], ipv75_sgIT [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_sgIT
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_sgfk
                                                     ipv74_sgIS
                                              of _ [Occ=Dead]
                                              { (# ipv76_sgIW [Occ=Once], ipv77_sgIX [Occ=Once] #) ->
                                              let {
                                                sat_sgIY [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sgIY =
                                                  Automata4Coms.indices_a_init ipv77_sgIX } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_sgfz
                                                     sat_sgIY
                                                     ipv76_sgIW
                                              of s2#13_sgIZ { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv15_sgfb
                                                     s2#13_sgIZ
                                              of _ [Occ=Dead]
                                              { (# ipv78_sgJ1 [Occ=Once], ipv79_sgJ2 [Occ=Once] #) ->
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv13_sgf8
                                                     ipv79_sgJ2
                                                     ipv78_sgJ1
                                              of s2#14_sgJ3 { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv13_sgf8
                                                     s2#14_sgJ3
                                              of _ [Occ=Dead]
                                              { (# ipv80_sgJ5 [Occ=Once], ipv81_sgJ6 #) ->
                                              let {
                                                sat_sgJ7 [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sgJ7 = (ipv81_sgJ6, ipv81_sgJ6) } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_sgf5
                                                     sat_sgJ7
                                                     ipv80_sgJ5
                                              of s2#15_sgJ8 { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_sgf5
                                                     s2#15_sgJ8
                                              of _ [Occ=Dead]
                                              { (# ipv82_sgJa [Occ=Once], ipv83_sgJb [Occ=Once] #) ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_sgf2
                                                     ipv82_sgJa
                                              of _ [Occ=Dead]
                                              { (# ipv84_sgJd [Occ=Once*], ipv85_sgJe [Occ=Once] #) ->
                                              case Automata4Coms.merge_a_le_pair
                                                     @ GHC.Types.Int ipv83_sgJb ipv85_sgJe
                                              of _ [Occ=Dead] {
                                                GHC.Types.False ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv9_sgf2
                                                         ipv84_sgJd
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_sgJh [Occ=Once], ipv87_sgJi #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv87_sgJi
                                                         ipv86_sgJh
                                                  of s2#16_sgJj { __DEFAULT ->
                                                  let {
                                                    sat_sgJD [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sgJD =
                                                      let {
                                                        sat_sgJC [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sgJC =
                                                          case ipv87_sgJi
                                                          of _ [Occ=Dead]
                                                          { (ww1_sgJl [Occ=Once!], ww2_sgJm [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sgJB [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sgJB =
                                                              case ww1_sgJl
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sgJo [Occ=Once] ->
                                                              let {
                                                                sat_sgJw [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sgJw =
                                                                  let {
                                                                    sat_sgJv [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sgJv =
                                                                      \ (w2_sgJp [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_sgJm
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_sgJr [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_sgJr w2_sgJp
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sgJt [Occ=Once], ww9_sgJu [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sgJt
                                                                          ww9_sgJu
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_sgJv
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sgJx [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sgJx =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sgJw } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sgJo sat_sgJx
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sgJz [Occ=Once], ww7_sgJA [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sgJz ww7_sgJA
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sgJB
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sgJC } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sgJD
                                                         GHC.Types.True
                                                         s2#16_sgJj
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_sgJF [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv88_sgJF
                                                  of _ [Occ=Dead]
                                                  { (# ipv90_sgJI [Occ=Once], ipv91_sgJJ [Occ=Once] #) ->
                                                  let {
                                                    sat_sgJK [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sgJK =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv91_sgJJ } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_sgfk
                                                         sat_sgJK
                                                         ipv90_sgJI
                                                  of s2#17_sgJL { __DEFAULT ->
                                                  letrec {
                                                    a19_sgJM [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a19_sgJM =
                                                      \ (eta4_sgJN [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               eta4_sgJN
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_sgJP [Occ=Once], ipv93_sgJQ [Occ=Once] #) ->
                                                        let {
                                                          ix1_sgJR [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_sgJR =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv93_sgJQ } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_sgfe
                                                               ix1_sgJR
                                                               ipv92_sgJP
                                                        of s2#18_sgJS { __DEFAULT ->
                                                        let {
                                                          sat_sgJZ [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_sgJZ =
                                                            let {
                                                              sat_sgJY [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_sgJY =
                                                                case ix1_sgJR
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_sgJU [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_sgJU
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_sgJW [Occ=Once], ww6_sgJX [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_sgJW ww6_sgJX
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_sgJY } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_sgJZ
                                                               GHC.Types.True
                                                               s2#18_sgJS
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_sgK1 [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               ipv94_sgK1
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_sgK4 [Occ=Once], ipv97_sgK5 [Occ=Once] #) ->
                                                        let {
                                                          sat_sgK6 [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sgK6 =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv97_sgK5 } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               sat_sgK6
                                                               ipv96_sgK4
                                                        of s2#19_sgK7 { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               s2#19_sgK7
                                                        of _ [Occ=Dead]
                                                        { (# ipv98_sgK9 [Occ=Once*], ipv99_sgKa [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv99_sgKa
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_sgfk
                                                                   ipv98_sgK9
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_sgKd [Occ=Once], ipv101_sgKe [Occ=Once] #) ->
                                                            let {
                                                              sat_sgKf [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_sgKf =
                                                                Automata4Coms.indices_a_init
                                                                  ipv101_sgKe } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_sgfz
                                                                   sat_sgKf
                                                                   ipv100_sgKd
                                                            of s2#20_sgKg { __DEFAULT ->
                                                            a9_sgnf s2#20_sgKg
                                                            }
                                                            };
                                                          GHC.Types.True -> a19_sgJM ipv98_sgK9
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a19_sgJM s2#17_sgJL
                                                  }
                                                  }
                                                  }
                                                  }
                                                  };
                                                GHC.Types.True ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv11_sgf5
                                                         ipv84_sgJd
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_sgKi [Occ=Once], ipv87_sgKj #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv87_sgKj
                                                         ipv86_sgKi
                                                  of s2#16_sgKk { __DEFAULT ->
                                                  let {
                                                    sat_sgKE [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sgKE =
                                                      let {
                                                        sat_sgKD [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sgKD =
                                                          case ipv87_sgKj
                                                          of _ [Occ=Dead]
                                                          { (ww1_sgKm [Occ=Once!], ww2_sgKn [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sgKC [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sgKC =
                                                              case ww1_sgKm
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sgKp [Occ=Once] ->
                                                              let {
                                                                sat_sgKx [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sgKx =
                                                                  let {
                                                                    sat_sgKw [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sgKw =
                                                                      \ (w2_sgKq [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_sgKn
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_sgKs [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_sgKs w2_sgKq
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sgKu [Occ=Once], ww9_sgKv [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sgKu
                                                                          ww9_sgKv
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_sgKw
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sgKy [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sgKy =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sgKx } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sgKp sat_sgKy
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sgKA [Occ=Once], ww7_sgKB [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sgKA ww7_sgKB
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sgKC
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sgKD } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sgKE
                                                         GHC.Types.True
                                                         s2#16_sgKk
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_sgKG [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv88_sgKG
                                                  of _ [Occ=Dead]
                                                  { (# ipv90_sgKJ [Occ=Once], ipv91_sgKK [Occ=Once] #) ->
                                                  let {
                                                    sat_sgKL [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sgKL =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv91_sgKK } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_sgfk
                                                         sat_sgKL
                                                         ipv90_sgKJ
                                                  of s2#17_sgKM { __DEFAULT ->
                                                  letrec {
                                                    a19_sgKN [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a19_sgKN =
                                                      \ (eta4_sgKO [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               eta4_sgKO
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_sgKQ [Occ=Once], ipv93_sgKR [Occ=Once] #) ->
                                                        let {
                                                          ix1_sgKS [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_sgKS =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv93_sgKR } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_sgfe
                                                               ix1_sgKS
                                                               ipv92_sgKQ
                                                        of s2#18_sgKT { __DEFAULT ->
                                                        let {
                                                          sat_sgL0 [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_sgL0 =
                                                            let {
                                                              sat_sgKZ [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_sgKZ =
                                                                case ix1_sgKS
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_sgKV [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_sgKV
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_sgKX [Occ=Once], ww6_sgKY [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_sgKX ww6_sgKY
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_sgKZ } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_sgL0
                                                               GHC.Types.True
                                                               s2#18_sgKT
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_sgL2 [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               ipv94_sgL2
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_sgL5 [Occ=Once], ipv97_sgL6 [Occ=Once] #) ->
                                                        let {
                                                          sat_sgL7 [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sgL7 =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv97_sgL6 } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               sat_sgL7
                                                               ipv96_sgL5
                                                        of s2#19_sgL8 { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               s2#19_sgL8
                                                        of _ [Occ=Dead]
                                                        { (# ipv98_sgLa [Occ=Once*], ipv99_sgLb [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv99_sgLb
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_sgfk
                                                                   ipv98_sgLa
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_sgLe [Occ=Once], ipv101_sgLf [Occ=Once] #) ->
                                                            let {
                                                              sat_sgLg [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_sgLg =
                                                                Automata4Coms.indices_a_init
                                                                  ipv101_sgLf } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_sgfz
                                                                   sat_sgLg
                                                                   ipv100_sgLe
                                                            of s2#20_sgLh { __DEFAULT ->
                                                            a13_sgrA s2#20_sgLh
                                                            }
                                                            };
                                                          GHC.Types.True -> a19_sgKN ipv98_sgLa
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a19_sgKN s2#17_sgKM
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              };
                                            GHC.Types.True -> a18_sgIv ipv74_sgIS
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a18_sgIv s2#10_sgIu
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                };
                              : i2_sgLi [Occ=Once] is2_sgLj [Occ=Once] ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ [GHC.Types.Int]
                                       ipv3_sgeT
                                       is2_sgLj
                                       ipv54_sgGJ
                                of s2#8_sgLk { __DEFAULT ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv7_sgeZ
                                       i2_sgLi
                                       s2#8_sgLk
                                of s2#9_sgLl { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_sgf8 s2#9_sgLl
                                of _ [Occ=Dead] { (# ipv56_sgLn [Occ=Once], ipv57_sgLo #) ->
                                let {
                                  sat_sgLp [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sgLp = (ipv57_sgLo, ipv57_sgLo) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       sat_sgLp
                                       ipv56_sgLn
                                of s2#10_sgLq { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       s2#10_sgLq
                                of _ [Occ=Dead]
                                { (# ipv58_sgLs [Occ=Once], ipv59_sgLt [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       ipv58_sgLs
                                of _ [Occ=Dead]
                                { (# ipv60_sgLv [Occ=Once*], ipv61_sgLw [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv59_sgLt ipv61_sgLw
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_sgf2
                                           ipv60_sgLv
                                    of _ [Occ=Dead] { (# ipv62_sgLz [Occ=Once], ipv63_sgLA #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv63_sgLA
                                           ipv62_sgLz
                                    of s2#11_sgLB { __DEFAULT ->
                                    let {
                                      sat_sgLV [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sgLV =
                                        let {
                                          sat_sgLU [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgLU =
                                            case ipv63_sgLA
                                            of _ [Occ=Dead]
                                            { (ww1_sgLD [Occ=Once!], ww2_sgLE [Occ=OnceL!]) ->
                                            let {
                                              sat_sgLT [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sgLT =
                                                case ww1_sgLD
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sgLG [Occ=Once] ->
                                                let {
                                                  sat_sgLO [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sgLO =
                                                    let {
                                                      sat_sgLN [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sgLN =
                                                        \ (w2_sgLH [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sgLE
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sgLJ [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sgLJ w2_sgLH
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sgLL [Occ=Once], ww9_sgLM [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sgLL ww9_sgLM
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sgLN
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sgLP [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sgLP =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sgLO } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sgLG sat_sgLP
                                                of _ [Occ=Dead]
                                                { (# ww6_sgLR [Occ=Once], ww7_sgLS [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sgLR ww7_sgLS
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgLT
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sgLU } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_sgLV
                                           GHC.Types.True
                                           s2#11_sgLB
                                    of _ [Occ=Dead] { (# ipv64_sgLX [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv64_sgLX
                                    of _ [Occ=Dead]
                                    { (# ipv66_sgM0 [Occ=Once], ipv67_sgM1 [Occ=Once] #) ->
                                    let {
                                      sat_sgM2 [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sgM2 =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_sgM1 } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_sgM2
                                           ipv66_sgM0
                                    of s2#12_sgM3 { __DEFAULT ->
                                    letrec {
                                      a18_sgM4 [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a18_sgM4 =
                                        \ (eta3_sgM5 [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 eta3_sgM5
                                          of _ [Occ=Dead]
                                          { (# ipv68_sgM7 [Occ=Once], ipv69_sgM8 [Occ=Once] #) ->
                                          let {
                                            ix_sgM9 [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_sgM9 = Automata4Coms.indices_a_get_ix ipv69_sgM8 } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_sgfe
                                                 ix_sgM9
                                                 ipv68_sgM7
                                          of s2#13_sgMa { __DEFAULT ->
                                          let {
                                            sat_sgMh [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sgMh =
                                              let {
                                                sat_sgMg [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sgMg =
                                                  case ix_sgM9
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_sgMc [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_sgMc (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_sgMe [Occ=Once], ww6_sgMf [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_sgMe ww6_sgMf
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_sgMg } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sgMh
                                                 GHC.Types.True
                                                 s2#13_sgMa
                                          of _ [Occ=Dead]
                                          { (# ipv70_sgMj [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 ipv70_sgMj
                                          of _ [Occ=Dead]
                                          { (# ipv72_sgMm [Occ=Once], ipv73_sgMn [Occ=Once] #) ->
                                          let {
                                            sat_sgMo [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sgMo =
                                              Automata4Coms.indices_a_inc_ix ipv73_sgMn } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 sat_sgMo
                                                 ipv72_sgMm
                                          of s2#14_sgMp { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 s2#14_sgMp
                                          of _ [Occ=Dead]
                                          { (# ipv74_sgMr [Occ=Once*], ipv75_sgMs [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_sgMs
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_sgfk
                                                     ipv74_sgMr
                                              of _ [Occ=Dead]
                                              { (# ipv76_sgMv [Occ=Once], ipv77_sgMw [Occ=Once] #) ->
                                              let {
                                                sat_sgMx [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sgMx =
                                                  Automata4Coms.indices_a_init ipv77_sgMw } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_sgfz
                                                     sat_sgMx
                                                     ipv76_sgMv
                                              of s2#15_sgMy { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv7_sgeZ
                                                     s2#15_sgMy
                                              of _ [Occ=Dead]
                                              { (# ipv78_sgMA [Occ=Once], ipv79_sgMB #) ->
                                              let {
                                                sat_sgMC [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sgMC = (ipv79_sgMB, ipv79_sgMB) } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_sgf2
                                                     sat_sgMC
                                                     ipv78_sgMA
                                              of s2#16_sgMD { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_sgf5
                                                     s2#16_sgMD
                                              of _ [Occ=Dead]
                                              { (# ipv80_sgMF [Occ=Once], ipv81_sgMG [Occ=Once] #) ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_sgf2
                                                     ipv80_sgMF
                                              of _ [Occ=Dead]
                                              { (# ipv82_sgMI [Occ=Once*], ipv83_sgMJ [Occ=Once] #) ->
                                              case Automata4Coms.merge_a_le_pair
                                                     @ GHC.Types.Int ipv81_sgMG ipv83_sgMJ
                                              of _ [Occ=Dead] {
                                                GHC.Types.False ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv9_sgf2
                                                         ipv82_sgMI
                                                  of _ [Occ=Dead]
                                                  { (# ipv84_sgMM [Occ=Once], ipv85_sgMN #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv85_sgMN
                                                         ipv84_sgMM
                                                  of s2#17_sgMO { __DEFAULT ->
                                                  let {
                                                    sat_sgN8 [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sgN8 =
                                                      let {
                                                        sat_sgN7 [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sgN7 =
                                                          case ipv85_sgMN
                                                          of _ [Occ=Dead]
                                                          { (ww1_sgMQ [Occ=Once!], ww2_sgMR [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sgN6 [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sgN6 =
                                                              case ww1_sgMQ
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sgMT [Occ=Once] ->
                                                              let {
                                                                sat_sgN1 [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sgN1 =
                                                                  let {
                                                                    sat_sgN0 [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sgN0 =
                                                                      \ (w2_sgMU [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_sgMR
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_sgMW [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_sgMW w2_sgMU
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sgMY [Occ=Once], ww9_sgMZ [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sgMY
                                                                          ww9_sgMZ
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_sgN0
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sgN2 [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sgN2 =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sgN1 } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sgMT sat_sgN2
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sgN4 [Occ=Once], ww7_sgN5 [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sgN4 ww7_sgN5
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sgN6
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sgN7 } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sgN8
                                                         GHC.Types.True
                                                         s2#17_sgMO
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_sgNa [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv86_sgNa
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_sgNd [Occ=Once], ipv89_sgNe [Occ=Once] #) ->
                                                  let {
                                                    sat_sgNf [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sgNf =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv89_sgNe } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_sgfk
                                                         sat_sgNf
                                                         ipv88_sgNd
                                                  of s2#18_sgNg { __DEFAULT ->
                                                  letrec {
                                                    a19_sgNh [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a19_sgNh =
                                                      \ (eta4_sgNi [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               eta4_sgNi
                                                        of _ [Occ=Dead]
                                                        { (# ipv90_sgNk [Occ=Once], ipv91_sgNl [Occ=Once] #) ->
                                                        let {
                                                          ix1_sgNm [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_sgNm =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv91_sgNl } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_sgfe
                                                               ix1_sgNm
                                                               ipv90_sgNk
                                                        of s2#19_sgNn { __DEFAULT ->
                                                        let {
                                                          sat_sgNu [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_sgNu =
                                                            let {
                                                              sat_sgNt [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_sgNt =
                                                                case ix1_sgNm
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_sgNp [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_sgNp
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_sgNr [Occ=Once], ww6_sgNs [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_sgNr ww6_sgNs
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_sgNt } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_sgNu
                                                               GHC.Types.True
                                                               s2#19_sgNn
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_sgNw [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               ipv92_sgNw
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_sgNz [Occ=Once], ipv95_sgNA [Occ=Once] #) ->
                                                        let {
                                                          sat_sgNB [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sgNB =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv95_sgNA } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               sat_sgNB
                                                               ipv94_sgNz
                                                        of s2#20_sgNC { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               s2#20_sgNC
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_sgNE [Occ=Once*], ipv97_sgNF [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv97_sgNF
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_sgfk
                                                                   ipv96_sgNE
                                                            of _ [Occ=Dead]
                                                            { (# ipv98_sgNI [Occ=Once], ipv99_sgNJ [Occ=Once] #) ->
                                                            let {
                                                              sat_sgNK [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_sgNK =
                                                                Automata4Coms.indices_a_init
                                                                  ipv99_sgNJ } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_sgfz
                                                                   sat_sgNK
                                                                   ipv98_sgNI
                                                            of s2#21_sgNL { __DEFAULT ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv15_sgfb
                                                                   s2#21_sgNL
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_sgNN [Occ=Once], ipv101_sgNO [Occ=Once] #) ->
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv13_sgf8
                                                                   ipv101_sgNO
                                                                   ipv100_sgNN
                                                            of s2#22_sgNP { __DEFAULT ->
                                                            a16_sgDa s2#22_sgNP
                                                            }
                                                            }
                                                            }
                                                            };
                                                          GHC.Types.True -> a19_sgNh ipv96_sgNE
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a19_sgNh s2#18_sgNg
                                                  }
                                                  }
                                                  }
                                                  }
                                                  };
                                                GHC.Types.True ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv11_sgf5
                                                         ipv82_sgMI
                                                  of _ [Occ=Dead]
                                                  { (# ipv84_sgNR [Occ=Once], ipv85_sgNS #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv85_sgNS
                                                         ipv84_sgNR
                                                  of s2#17_sgNT { __DEFAULT ->
                                                  let {
                                                    sat_sgOd [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sgOd =
                                                      let {
                                                        sat_sgOc [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sgOc =
                                                          case ipv85_sgNS
                                                          of _ [Occ=Dead]
                                                          { (ww1_sgNV [Occ=Once!], ww2_sgNW [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sgOb [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sgOb =
                                                              case ww1_sgNV
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sgNY [Occ=Once] ->
                                                              let {
                                                                sat_sgO6 [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sgO6 =
                                                                  let {
                                                                    sat_sgO5 [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sgO5 =
                                                                      \ (w2_sgNZ [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_sgNW
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_sgO1 [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_sgO1 w2_sgNZ
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sgO3 [Occ=Once], ww9_sgO4 [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sgO3
                                                                          ww9_sgO4
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_sgO5
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sgO7 [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sgO7 =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sgO6 } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sgNY sat_sgO7
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sgO9 [Occ=Once], ww7_sgOa [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sgO9 ww7_sgOa
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sgOb
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sgOc } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sgOd
                                                         GHC.Types.True
                                                         s2#17_sgNT
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_sgOf [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv86_sgOf
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_sgOi [Occ=Once], ipv89_sgOj [Occ=Once] #) ->
                                                  let {
                                                    sat_sgOk [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sgOk =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv89_sgOj } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_sgfk
                                                         sat_sgOk
                                                         ipv88_sgOi
                                                  of s2#18_sgOl { __DEFAULT ->
                                                  letrec {
                                                    a19_sgOm [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a19_sgOm =
                                                      \ (eta4_sgOn [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               eta4_sgOn
                                                        of _ [Occ=Dead]
                                                        { (# ipv90_sgOp [Occ=Once], ipv91_sgOq [Occ=Once] #) ->
                                                        let {
                                                          ix1_sgOr [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_sgOr =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv91_sgOq } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_sgfe
                                                               ix1_sgOr
                                                               ipv90_sgOp
                                                        of s2#19_sgOs { __DEFAULT ->
                                                        let {
                                                          sat_sgOz [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_sgOz =
                                                            let {
                                                              sat_sgOy [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_sgOy =
                                                                case ix1_sgOr
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_sgOu [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_sgOu
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_sgOw [Occ=Once], ww6_sgOx [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_sgOw ww6_sgOx
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_sgOy } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_sgOz
                                                               GHC.Types.True
                                                               s2#19_sgOs
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_sgOB [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               ipv92_sgOB
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_sgOE [Occ=Once], ipv95_sgOF [Occ=Once] #) ->
                                                        let {
                                                          sat_sgOG [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sgOG =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv95_sgOF } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               sat_sgOG
                                                               ipv94_sgOE
                                                        of s2#20_sgOH { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               s2#20_sgOH
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_sgOJ [Occ=Once*], ipv97_sgOK [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv97_sgOK
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_sgfk
                                                                   ipv96_sgOJ
                                                            of _ [Occ=Dead]
                                                            { (# ipv98_sgON [Occ=Once], ipv99_sgOO [Occ=Once] #) ->
                                                            let {
                                                              sat_sgOP [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_sgOP =
                                                                Automata4Coms.indices_a_init
                                                                  ipv99_sgOO } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_sgfz
                                                                   sat_sgOP
                                                                   ipv98_sgON
                                                            of s2#21_sgOQ { __DEFAULT ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv15_sgfb
                                                                   s2#21_sgOQ
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_sgOS [Occ=Once], ipv101_sgOT [Occ=Once] #) ->
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv13_sgf8
                                                                   ipv101_sgOT
                                                                   ipv100_sgOS
                                                            of s2#22_sgOU { __DEFAULT ->
                                                            a15_sgwc s2#22_sgOU
                                                            }
                                                            }
                                                            }
                                                            };
                                                          GHC.Types.True -> a19_sgOm ipv96_sgOJ
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a19_sgOm s2#18_sgOl
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              };
                                            GHC.Types.True -> a18_sgM4 ipv74_sgMr
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a18_sgM4 s2#12_sgM3
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_sgf5
                                           ipv60_sgLv
                                    of _ [Occ=Dead] { (# ipv62_sgOW [Occ=Once], ipv63_sgOX #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv63_sgOX
                                           ipv62_sgOW
                                    of s2#11_sgOY { __DEFAULT ->
                                    let {
                                      sat_sgPi [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sgPi =
                                        let {
                                          sat_sgPh [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgPh =
                                            case ipv63_sgOX
                                            of _ [Occ=Dead]
                                            { (ww1_sgP0 [Occ=Once!], ww2_sgP1 [Occ=OnceL!]) ->
                                            let {
                                              sat_sgPg [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sgPg =
                                                case ww1_sgP0
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sgP3 [Occ=Once] ->
                                                let {
                                                  sat_sgPb [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sgPb =
                                                    let {
                                                      sat_sgPa [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sgPa =
                                                        \ (w2_sgP4 [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sgP1
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sgP6 [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sgP6 w2_sgP4
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sgP8 [Occ=Once], ww9_sgP9 [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sgP8 ww9_sgP9
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sgPa
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sgPc [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sgPc =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sgPb } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sgP3 sat_sgPc
                                                of _ [Occ=Dead]
                                                { (# ww6_sgPe [Occ=Once], ww7_sgPf [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sgPe ww7_sgPf
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgPg
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sgPh } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_sgPi
                                           GHC.Types.True
                                           s2#11_sgOY
                                    of _ [Occ=Dead] { (# ipv64_sgPk [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv64_sgPk
                                    of _ [Occ=Dead]
                                    { (# ipv66_sgPn [Occ=Once], ipv67_sgPo [Occ=Once] #) ->
                                    let {
                                      sat_sgPp [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sgPp =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_sgPo } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_sgPp
                                           ipv66_sgPn
                                    of s2#12_sgPq { __DEFAULT ->
                                    letrec {
                                      a18_sgPr [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a18_sgPr =
                                        \ (eta3_sgPs [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 eta3_sgPs
                                          of _ [Occ=Dead]
                                          { (# ipv68_sgPu [Occ=Once], ipv69_sgPv [Occ=Once] #) ->
                                          let {
                                            ix_sgPw [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_sgPw = Automata4Coms.indices_a_get_ix ipv69_sgPv } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_sgfe
                                                 ix_sgPw
                                                 ipv68_sgPu
                                          of s2#13_sgPx { __DEFAULT ->
                                          let {
                                            sat_sgPE [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sgPE =
                                              let {
                                                sat_sgPD [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sgPD =
                                                  case ix_sgPw
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_sgPz [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_sgPz (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_sgPB [Occ=Once], ww6_sgPC [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_sgPB ww6_sgPC
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_sgPD } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sgPE
                                                 GHC.Types.True
                                                 s2#13_sgPx
                                          of _ [Occ=Dead]
                                          { (# ipv70_sgPG [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 ipv70_sgPG
                                          of _ [Occ=Dead]
                                          { (# ipv72_sgPJ [Occ=Once], ipv73_sgPK [Occ=Once] #) ->
                                          let {
                                            sat_sgPL [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sgPL =
                                              Automata4Coms.indices_a_inc_ix ipv73_sgPK } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 sat_sgPL
                                                 ipv72_sgPJ
                                          of s2#14_sgPM { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 s2#14_sgPM
                                          of _ [Occ=Dead]
                                          { (# ipv74_sgPO [Occ=Once*], ipv75_sgPP [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_sgPP
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_sgfk
                                                     ipv74_sgPO
                                              of _ [Occ=Dead]
                                              { (# ipv76_sgPS [Occ=Once], ipv77_sgPT [Occ=Once] #) ->
                                              let {
                                                sat_sgPU [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sgPU =
                                                  Automata4Coms.indices_a_init ipv77_sgPT } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_sgfz
                                                     sat_sgPU
                                                     ipv76_sgPS
                                              of s2#15_sgPV { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv15_sgfb
                                                     s2#15_sgPV
                                              of _ [Occ=Dead]
                                              { (# ipv78_sgPX [Occ=Once], ipv79_sgPY [Occ=Once] #) ->
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv13_sgf8
                                                     ipv79_sgPY
                                                     ipv78_sgPX
                                              of s2#16_sgPZ { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv13_sgf8
                                                     s2#16_sgPZ
                                              of _ [Occ=Dead]
                                              { (# ipv80_sgQ1 [Occ=Once], ipv81_sgQ2 #) ->
                                              let {
                                                sat_sgQ3 [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sgQ3 = (ipv81_sgQ2, ipv81_sgQ2) } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_sgf5
                                                     sat_sgQ3
                                                     ipv80_sgQ1
                                              of s2#17_sgQ4 { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_sgf5
                                                     s2#17_sgQ4
                                              of _ [Occ=Dead]
                                              { (# ipv82_sgQ6 [Occ=Once], ipv83_sgQ7 [Occ=Once] #) ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_sgf2
                                                     ipv82_sgQ6
                                              of _ [Occ=Dead]
                                              { (# ipv84_sgQ9 [Occ=Once*], ipv85_sgQa [Occ=Once] #) ->
                                              case Automata4Coms.merge_a_le_pair
                                                     @ GHC.Types.Int ipv83_sgQ7 ipv85_sgQa
                                              of _ [Occ=Dead] {
                                                GHC.Types.False ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv9_sgf2
                                                         ipv84_sgQ9
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_sgQd [Occ=Once], ipv87_sgQe #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv87_sgQe
                                                         ipv86_sgQd
                                                  of s2#18_sgQf { __DEFAULT ->
                                                  let {
                                                    sat_sgQz [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sgQz =
                                                      let {
                                                        sat_sgQy [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sgQy =
                                                          case ipv87_sgQe
                                                          of _ [Occ=Dead]
                                                          { (ww1_sgQh [Occ=Once!], ww2_sgQi [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sgQx [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sgQx =
                                                              case ww1_sgQh
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sgQk [Occ=Once] ->
                                                              let {
                                                                sat_sgQs [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sgQs =
                                                                  let {
                                                                    sat_sgQr [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sgQr =
                                                                      \ (w2_sgQl [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_sgQi
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_sgQn [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_sgQn w2_sgQl
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sgQp [Occ=Once], ww9_sgQq [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sgQp
                                                                          ww9_sgQq
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_sgQr
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sgQt [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sgQt =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sgQs } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sgQk sat_sgQt
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sgQv [Occ=Once], ww7_sgQw [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sgQv ww7_sgQw
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sgQx
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sgQy } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sgQz
                                                         GHC.Types.True
                                                         s2#18_sgQf
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_sgQB [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv88_sgQB
                                                  of _ [Occ=Dead]
                                                  { (# ipv90_sgQE [Occ=Once], ipv91_sgQF [Occ=Once] #) ->
                                                  let {
                                                    sat_sgQG [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sgQG =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv91_sgQF } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_sgfk
                                                         sat_sgQG
                                                         ipv90_sgQE
                                                  of s2#19_sgQH { __DEFAULT ->
                                                  letrec {
                                                    a19_sgQI [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a19_sgQI =
                                                      \ (eta4_sgQJ [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               eta4_sgQJ
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_sgQL [Occ=Once], ipv93_sgQM [Occ=Once] #) ->
                                                        let {
                                                          ix1_sgQN [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_sgQN =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv93_sgQM } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_sgfe
                                                               ix1_sgQN
                                                               ipv92_sgQL
                                                        of s2#20_sgQO { __DEFAULT ->
                                                        let {
                                                          sat_sgQV [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_sgQV =
                                                            let {
                                                              sat_sgQU [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_sgQU =
                                                                case ix1_sgQN
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_sgQQ [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_sgQQ
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_sgQS [Occ=Once], ww6_sgQT [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_sgQS ww6_sgQT
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_sgQU } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_sgQV
                                                               GHC.Types.True
                                                               s2#20_sgQO
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_sgQX [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               ipv94_sgQX
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_sgR0 [Occ=Once], ipv97_sgR1 [Occ=Once] #) ->
                                                        let {
                                                          sat_sgR2 [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sgR2 =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv97_sgR1 } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               sat_sgR2
                                                               ipv96_sgR0
                                                        of s2#21_sgR3 { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               s2#21_sgR3
                                                        of _ [Occ=Dead]
                                                        { (# ipv98_sgR5 [Occ=Once*], ipv99_sgR6 [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv99_sgR6
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_sgfk
                                                                   ipv98_sgR5
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_sgR9 [Occ=Once], ipv101_sgRa [Occ=Once] #) ->
                                                            let {
                                                              sat_sgRb [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_sgRb =
                                                                Automata4Coms.indices_a_init
                                                                  ipv101_sgRa } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_sgfz
                                                                   sat_sgRb
                                                                   ipv100_sgR9
                                                            of s2#22_sgRc { __DEFAULT ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv7_sgeZ
                                                                   s2#22_sgRc
                                                            of _ [Occ=Dead]
                                                            { (# ipv102_sgRe [Occ=Once], ipv103_sgRf #) ->
                                                            let {
                                                              sat_sgRg [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_sgRg =
                                                                (ipv103_sgRf, ipv103_sgRf) } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv9_sgf2
                                                                   sat_sgRg
                                                                   ipv102_sgRe
                                                            of s2#23_sgRh { __DEFAULT ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv11_sgf5
                                                                   s2#23_sgRh
                                                            of _ [Occ=Dead]
                                                            { (# ipv104_sgRj [Occ=Once], ipv105_sgRk [Occ=Once] #) ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv9_sgf2
                                                                   ipv104_sgRj
                                                            of _ [Occ=Dead]
                                                            { (# ipv106_sgRm [Occ=Once*], ipv107_sgRn [Occ=Once] #) ->
                                                            case Automata4Coms.merge_a_le_pair
                                                                   @ GHC.Types.Int
                                                                   ipv105_sgRk
                                                                   ipv107_sgRn
                                                            of _ [Occ=Dead] {
                                                              GHC.Types.False ->
                                                                case GHC.Prim.readMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ (GHC.Types.Int,
                                                                          GHC.Types.Int)
                                                                       ipv9_sgf2
                                                                       ipv106_sgRm
                                                                of _ [Occ=Dead]
                                                                { (# ipv108_sgRq [Occ=Once], ipv109_sgRr #) ->
                                                                case GHC.Prim.writeMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ (GHC.Types.Int,
                                                                          GHC.Types.Int)
                                                                       ipv19_sgfh
                                                                       ipv109_sgRr
                                                                       ipv108_sgRq
                                                                of s2#24_sgRs { __DEFAULT ->
                                                                let {
                                                                  sat_sgRM [Occ=Once, Dmd=<L,1*U>]
                                                                    :: GHC.Base.String
                                                                  [LclId, Str=DmdType]
                                                                  sat_sgRM =
                                                                    let {
                                                                      sat_sgRL [Occ=Once]
                                                                        :: [GHC.Types.Char]
                                                                      [LclId, Str=DmdType]
                                                                      sat_sgRL =
                                                                        case ipv109_sgRr
                                                                        of _ [Occ=Dead]
                                                                        { (ww1_sgRu [Occ=Once!], ww2_sgRv [Occ=OnceL!]) ->
                                                                        let {
                                                                          sat_sgRK [Occ=Once]
                                                                            :: [GHC.Types.Char]
                                                                          [LclId, Str=DmdType]
                                                                          sat_sgRK =
                                                                            case ww1_sgRu
                                                                            of _ [Occ=Dead]
                                                                            { GHC.Types.I# ww4_sgRx [Occ=Once] ->
                                                                            let {
                                                                              sat_sgRF [Occ=Once]
                                                                                :: [GHC.Types.Char]
                                                                              [LclId, Str=DmdType]
                                                                              sat_sgRF =
                                                                                let {
                                                                                  sat_sgRE [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                       -> GHC.Base.String
                                                                                  [LclId,
                                                                                   Str=DmdType]
                                                                                  sat_sgRE =
                                                                                    \ (w2_sgRy [Occ=Once]
                                                                                         :: GHC.Base.String) ->
                                                                                      case ww2_sgRv
                                                                                      of _ [Occ=Dead]
                                                                                      { GHC.Types.I# ww6_sgRA [Occ=Once] ->
                                                                                      case GHC.Show.$wshowSignedInt
                                                                                             0
                                                                                             ww6_sgRA
                                                                                             w2_sgRy
                                                                                      of _ [Occ=Dead]
                                                                                      { (# ww8_sgRC [Occ=Once], ww9_sgRD [Occ=Once] #) ->
                                                                                      GHC.Types.:
                                                                                        @ GHC.Types.Char
                                                                                        ww8_sgRC
                                                                                        ww9_sgRD
                                                                                      }
                                                                                      } } in
                                                                                GHC.List.foldr1_$sfoldr1
                                                                                  @ (GHC.Base.String
                                                                                     -> GHC.Base.String)
                                                                                  GHC.Show.$fShow(,)1
                                                                                  sat_sgRE
                                                                                  (GHC.Types.[]
                                                                                     @ GHC.Show.ShowS)
                                                                                  lvl4_rger } in
                                                                            let {
                                                                              sat_sgRG [Occ=Once]
                                                                                :: GHC.Base.String
                                                                              [LclId, Str=DmdType]
                                                                              sat_sgRG =
                                                                                GHC.Types.:
                                                                                  @ GHC.Types.Char
                                                                                  GHC.Show.showList__1
                                                                                  sat_sgRF } in
                                                                            case GHC.Show.$wshowSignedInt
                                                                                   0
                                                                                   ww4_sgRx
                                                                                   sat_sgRG
                                                                            of _ [Occ=Dead]
                                                                            { (# ww6_sgRI [Occ=Once], ww7_sgRJ [Occ=Once] #) ->
                                                                            GHC.Types.:
                                                                              @ GHC.Types.Char
                                                                              ww6_sgRI
                                                                              ww7_sgRJ
                                                                            }
                                                                            } } in
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          GHC.Show.shows13
                                                                          sat_sgRK
                                                                        } } in
                                                                    GHC.CString.unpackAppendCString#
                                                                      "merg: "# sat_sgRL } in
                                                                case GHC.IO.Handle.Text.hPutStr2
                                                                       GHC.IO.Handle.FD.stdout
                                                                       sat_sgRM
                                                                       GHC.Types.True
                                                                       s2#24_sgRs
                                                                of _ [Occ=Dead]
                                                                { (# ipv110_sgRO [Occ=Once], _ [Occ=Dead] #) ->
                                                                case GHC.Prim.readMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ (GHC.Types.Int,
                                                                          GHC.Types.Int)
                                                                       ipv19_sgfh
                                                                       ipv110_sgRO
                                                                of _ [Occ=Dead]
                                                                { (# ipv112_sgRR [Occ=Once], ipv113_sgRS [Occ=Once] #) ->
                                                                let {
                                                                  sat_sgRT [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId, Str=DmdType]
                                                                  sat_sgRT =
                                                                    Data.Tuple.snd
                                                                      @ GHC.Types.Int
                                                                      @ GHC.Types.Int
                                                                      ipv113_sgRS } in
                                                                case GHC.Prim.writeMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ GHC.Types.Int
                                                                       ipv21_sgfk
                                                                       sat_sgRT
                                                                       ipv112_sgRR
                                                                of s2#25_sgRU { __DEFAULT ->
                                                                letrec {
                                                                  a20_sgRV [Occ=LoopBreaker]
                                                                    :: GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             () #)
                                                                  [LclId,
                                                                   Arity=1,
                                                                   Str=DmdType <L,U>,
                                                                   Unf=OtherCon []]
                                                                  a20_sgRV =
                                                                    \ (eta5_sgRW [Occ=Once]
                                                                         :: GHC.Prim.State#
                                                                              GHC.Prim.RealWorld) ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_sgfz
                                                                             eta5_sgRW
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv114_sgRY [Occ=Once], ipv115_sgRZ [Occ=Once] #) ->
                                                                      let {
                                                                        ix2_sgS0 [Dmd=<L,U(U)>]
                                                                          :: GHC.Types.Int
                                                                        [LclId, Str=DmdType]
                                                                        ix2_sgS0 =
                                                                          Automata4Coms.indices_a_get_ix
                                                                            ipv115_sgRZ } in
                                                                      case GHC.Prim.writeMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ GHC.Types.Int
                                                                             ipv17_sgfe
                                                                             ix2_sgS0
                                                                             ipv114_sgRY
                                                                      of s2#26_sgS1 { __DEFAULT ->
                                                                      let {
                                                                        sat_sgS8 [Occ=Once,
                                                                                  Dmd=<L,1*U>]
                                                                          :: GHC.Base.String
                                                                        [LclId, Str=DmdType]
                                                                        sat_sgS8 =
                                                                          let {
                                                                            sat_sgS7 [Occ=Once]
                                                                              :: [GHC.Types.Char]
                                                                            [LclId, Str=DmdType]
                                                                            sat_sgS7 =
                                                                              case ix2_sgS0
                                                                              of _ [Occ=Dead]
                                                                              { GHC.Types.I# ww3_sgS3 [Occ=Once] ->
                                                                              case GHC.Show.$wshowSignedInt
                                                                                     0
                                                                                     ww3_sgS3
                                                                                     (GHC.Types.[]
                                                                                        @ GHC.Types.Char)
                                                                              of _ [Occ=Dead]
                                                                              { (# ww5_sgS5 [Occ=Once], ww6_sgS6 [Occ=Once] #) ->
                                                                              GHC.Types.:
                                                                                @ GHC.Types.Char
                                                                                ww5_sgS5
                                                                                ww6_sgS6
                                                                              }
                                                                              } } in
                                                                          GHC.CString.unpackAppendCString#
                                                                            "filtd:"# sat_sgS7 } in
                                                                      case GHC.IO.Handle.Text.hPutStr2
                                                                             GHC.IO.Handle.FD.stdout
                                                                             sat_sgS8
                                                                             GHC.Types.True
                                                                             s2#26_sgS1
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv116_sgSa [Occ=Once], _ [Occ=Dead] #) ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_sgfz
                                                                             ipv116_sgSa
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv118_sgSd [Occ=Once], ipv119_sgSe [Occ=Once] #) ->
                                                                      let {
                                                                        sat_sgSf [Occ=Once]
                                                                          :: (GHC.Types.Int,
                                                                              GHC.Types.Int)
                                                                        [LclId, Str=DmdType]
                                                                        sat_sgSf =
                                                                          Automata4Coms.indices_a_inc_ix
                                                                            ipv119_sgSe } in
                                                                      case GHC.Prim.writeMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_sgfz
                                                                             sat_sgSf
                                                                             ipv118_sgSd
                                                                      of s2#27_sgSg { __DEFAULT ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_sgfz
                                                                             s2#27_sgSg
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv120_sgSi [Occ=Once*], ipv121_sgSj [Occ=Once] #) ->
                                                                      case Automata4Coms.indices_a_check
                                                                             ipv121_sgSj
                                                                      of _ [Occ=Dead] {
                                                                        GHC.Types.False ->
                                                                          case GHC.Prim.readMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ GHC.Types.Int
                                                                                 ipv21_sgfk
                                                                                 ipv120_sgSi
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv122_sgSm [Occ=Once], ipv123_sgSn [Occ=Once] #) ->
                                                                          let {
                                                                            sat_sgSo [Occ=Once]
                                                                              :: (GHC.Types.Int,
                                                                                  GHC.Types.Int)
                                                                            [LclId, Str=DmdType]
                                                                            sat_sgSo =
                                                                              Automata4Coms.indices_a_init
                                                                                ipv123_sgSn } in
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv31_sgfz
                                                                                 sat_sgSo
                                                                                 ipv122_sgSm
                                                                          of s2#28_sgSp
                                                                          { __DEFAULT ->
                                                                          a14_sgsD s2#28_sgSp
                                                                          }
                                                                          };
                                                                        GHC.Types.True ->
                                                                          a20_sgRV ipv120_sgSi
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }; } in
                                                                a20_sgRV s2#25_sgRU
                                                                }
                                                                }
                                                                }
                                                                }
                                                                };
                                                              GHC.Types.True ->
                                                                case GHC.Prim.readMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ (GHC.Types.Int,
                                                                          GHC.Types.Int)
                                                                       ipv11_sgf5
                                                                       ipv106_sgRm
                                                                of _ [Occ=Dead]
                                                                { (# ipv108_sgSr [Occ=Once], ipv109_sgSs #) ->
                                                                case GHC.Prim.writeMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ (GHC.Types.Int,
                                                                          GHC.Types.Int)
                                                                       ipv19_sgfh
                                                                       ipv109_sgSs
                                                                       ipv108_sgSr
                                                                of s2#24_sgSt { __DEFAULT ->
                                                                let {
                                                                  sat_sgSN [Occ=Once, Dmd=<L,1*U>]
                                                                    :: GHC.Base.String
                                                                  [LclId, Str=DmdType]
                                                                  sat_sgSN =
                                                                    let {
                                                                      sat_sgSM [Occ=Once]
                                                                        :: [GHC.Types.Char]
                                                                      [LclId, Str=DmdType]
                                                                      sat_sgSM =
                                                                        case ipv109_sgSs
                                                                        of _ [Occ=Dead]
                                                                        { (ww1_sgSv [Occ=Once!], ww2_sgSw [Occ=OnceL!]) ->
                                                                        let {
                                                                          sat_sgSL [Occ=Once]
                                                                            :: [GHC.Types.Char]
                                                                          [LclId, Str=DmdType]
                                                                          sat_sgSL =
                                                                            case ww1_sgSv
                                                                            of _ [Occ=Dead]
                                                                            { GHC.Types.I# ww4_sgSy [Occ=Once] ->
                                                                            let {
                                                                              sat_sgSG [Occ=Once]
                                                                                :: [GHC.Types.Char]
                                                                              [LclId, Str=DmdType]
                                                                              sat_sgSG =
                                                                                let {
                                                                                  sat_sgSF [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                       -> GHC.Base.String
                                                                                  [LclId,
                                                                                   Str=DmdType]
                                                                                  sat_sgSF =
                                                                                    \ (w2_sgSz [Occ=Once]
                                                                                         :: GHC.Base.String) ->
                                                                                      case ww2_sgSw
                                                                                      of _ [Occ=Dead]
                                                                                      { GHC.Types.I# ww6_sgSB [Occ=Once] ->
                                                                                      case GHC.Show.$wshowSignedInt
                                                                                             0
                                                                                             ww6_sgSB
                                                                                             w2_sgSz
                                                                                      of _ [Occ=Dead]
                                                                                      { (# ww8_sgSD [Occ=Once], ww9_sgSE [Occ=Once] #) ->
                                                                                      GHC.Types.:
                                                                                        @ GHC.Types.Char
                                                                                        ww8_sgSD
                                                                                        ww9_sgSE
                                                                                      }
                                                                                      } } in
                                                                                GHC.List.foldr1_$sfoldr1
                                                                                  @ (GHC.Base.String
                                                                                     -> GHC.Base.String)
                                                                                  GHC.Show.$fShow(,)1
                                                                                  sat_sgSF
                                                                                  (GHC.Types.[]
                                                                                     @ GHC.Show.ShowS)
                                                                                  lvl4_rger } in
                                                                            let {
                                                                              sat_sgSH [Occ=Once]
                                                                                :: GHC.Base.String
                                                                              [LclId, Str=DmdType]
                                                                              sat_sgSH =
                                                                                GHC.Types.:
                                                                                  @ GHC.Types.Char
                                                                                  GHC.Show.showList__1
                                                                                  sat_sgSG } in
                                                                            case GHC.Show.$wshowSignedInt
                                                                                   0
                                                                                   ww4_sgSy
                                                                                   sat_sgSH
                                                                            of _ [Occ=Dead]
                                                                            { (# ww6_sgSJ [Occ=Once], ww7_sgSK [Occ=Once] #) ->
                                                                            GHC.Types.:
                                                                              @ GHC.Types.Char
                                                                              ww6_sgSJ
                                                                              ww7_sgSK
                                                                            }
                                                                            } } in
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          GHC.Show.shows13
                                                                          sat_sgSL
                                                                        } } in
                                                                    GHC.CString.unpackAppendCString#
                                                                      "merg: "# sat_sgSM } in
                                                                case GHC.IO.Handle.Text.hPutStr2
                                                                       GHC.IO.Handle.FD.stdout
                                                                       sat_sgSN
                                                                       GHC.Types.True
                                                                       s2#24_sgSt
                                                                of _ [Occ=Dead]
                                                                { (# ipv110_sgSP [Occ=Once], _ [Occ=Dead] #) ->
                                                                case GHC.Prim.readMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ (GHC.Types.Int,
                                                                          GHC.Types.Int)
                                                                       ipv19_sgfh
                                                                       ipv110_sgSP
                                                                of _ [Occ=Dead]
                                                                { (# ipv112_sgSS [Occ=Once], ipv113_sgST [Occ=Once] #) ->
                                                                let {
                                                                  sat_sgSU [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId, Str=DmdType]
                                                                  sat_sgSU =
                                                                    Data.Tuple.snd
                                                                      @ GHC.Types.Int
                                                                      @ GHC.Types.Int
                                                                      ipv113_sgST } in
                                                                case GHC.Prim.writeMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ GHC.Types.Int
                                                                       ipv21_sgfk
                                                                       sat_sgSU
                                                                       ipv112_sgSS
                                                                of s2#25_sgSV { __DEFAULT ->
                                                                letrec {
                                                                  a20_sgSW [Occ=LoopBreaker]
                                                                    :: GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             () #)
                                                                  [LclId,
                                                                   Arity=1,
                                                                   Str=DmdType <L,U>,
                                                                   Unf=OtherCon []]
                                                                  a20_sgSW =
                                                                    \ (eta5_sgSX [Occ=Once]
                                                                         :: GHC.Prim.State#
                                                                              GHC.Prim.RealWorld) ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_sgfz
                                                                             eta5_sgSX
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv114_sgSZ [Occ=Once], ipv115_sgT0 [Occ=Once] #) ->
                                                                      let {
                                                                        ix2_sgT1 [Dmd=<L,U(U)>]
                                                                          :: GHC.Types.Int
                                                                        [LclId, Str=DmdType]
                                                                        ix2_sgT1 =
                                                                          Automata4Coms.indices_a_get_ix
                                                                            ipv115_sgT0 } in
                                                                      case GHC.Prim.writeMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ GHC.Types.Int
                                                                             ipv17_sgfe
                                                                             ix2_sgT1
                                                                             ipv114_sgSZ
                                                                      of s2#26_sgT2 { __DEFAULT ->
                                                                      let {
                                                                        sat_sgT9 [Occ=Once,
                                                                                  Dmd=<L,1*U>]
                                                                          :: GHC.Base.String
                                                                        [LclId, Str=DmdType]
                                                                        sat_sgT9 =
                                                                          let {
                                                                            sat_sgT8 [Occ=Once]
                                                                              :: [GHC.Types.Char]
                                                                            [LclId, Str=DmdType]
                                                                            sat_sgT8 =
                                                                              case ix2_sgT1
                                                                              of _ [Occ=Dead]
                                                                              { GHC.Types.I# ww3_sgT4 [Occ=Once] ->
                                                                              case GHC.Show.$wshowSignedInt
                                                                                     0
                                                                                     ww3_sgT4
                                                                                     (GHC.Types.[]
                                                                                        @ GHC.Types.Char)
                                                                              of _ [Occ=Dead]
                                                                              { (# ww5_sgT6 [Occ=Once], ww6_sgT7 [Occ=Once] #) ->
                                                                              GHC.Types.:
                                                                                @ GHC.Types.Char
                                                                                ww5_sgT6
                                                                                ww6_sgT7
                                                                              }
                                                                              } } in
                                                                          GHC.CString.unpackAppendCString#
                                                                            "filtd:"# sat_sgT8 } in
                                                                      case GHC.IO.Handle.Text.hPutStr2
                                                                             GHC.IO.Handle.FD.stdout
                                                                             sat_sgT9
                                                                             GHC.Types.True
                                                                             s2#26_sgT2
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv116_sgTb [Occ=Once], _ [Occ=Dead] #) ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_sgfz
                                                                             ipv116_sgTb
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv118_sgTe [Occ=Once], ipv119_sgTf [Occ=Once] #) ->
                                                                      let {
                                                                        sat_sgTg [Occ=Once]
                                                                          :: (GHC.Types.Int,
                                                                              GHC.Types.Int)
                                                                        [LclId, Str=DmdType]
                                                                        sat_sgTg =
                                                                          Automata4Coms.indices_a_inc_ix
                                                                            ipv119_sgTf } in
                                                                      case GHC.Prim.writeMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_sgfz
                                                                             sat_sgTg
                                                                             ipv118_sgTe
                                                                      of s2#27_sgTh { __DEFAULT ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_sgfz
                                                                             s2#27_sgTh
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv120_sgTj [Occ=Once*], ipv121_sgTk [Occ=Once] #) ->
                                                                      case Automata4Coms.indices_a_check
                                                                             ipv121_sgTk
                                                                      of _ [Occ=Dead] {
                                                                        GHC.Types.False ->
                                                                          case GHC.Prim.readMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ GHC.Types.Int
                                                                                 ipv21_sgfk
                                                                                 ipv120_sgTj
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv122_sgTn [Occ=Once], ipv123_sgTo [Occ=Once] #) ->
                                                                          let {
                                                                            sat_sgTp [Occ=Once]
                                                                              :: (GHC.Types.Int,
                                                                                  GHC.Types.Int)
                                                                            [LclId, Str=DmdType]
                                                                            sat_sgTp =
                                                                              Automata4Coms.indices_a_init
                                                                                ipv123_sgTo } in
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv31_sgfz
                                                                                 sat_sgTp
                                                                                 ipv122_sgTn
                                                                          of s2#28_sgTq
                                                                          { __DEFAULT ->
                                                                          case GHC.Prim.readMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ [GHC.Types.Int]
                                                                                 ipv3_sgeT
                                                                                 s2#28_sgTq
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv124_sgTs [Occ=Once*], ipv125_sgTt [Occ=Once!] #) ->
                                                                          case ipv125_sgTt
                                                                          of _ [Occ=Dead] {
                                                                            [] ->
                                                                              a13_sgrA ipv124_sgTs;
                                                                            : i3_sgTv [Occ=Once]
                                                                              is3_sgTw [Occ=Once] ->
                                                                              case GHC.Prim.writeMutVar#
                                                                                     @ GHC.Prim.RealWorld
                                                                                     @ [GHC.Types.Int]
                                                                                     ipv3_sgeT
                                                                                     is3_sgTw
                                                                                     ipv124_sgTs
                                                                              of s2#29_sgTx
                                                                              { __DEFAULT ->
                                                                              case GHC.Prim.writeMutVar#
                                                                                     @ GHC.Prim.RealWorld
                                                                                     @ GHC.Types.Int
                                                                                     ipv7_sgeZ
                                                                                     i3_sgTv
                                                                                     s2#29_sgTx
                                                                              of s2#30_sgTy
                                                                              { __DEFAULT ->
                                                                              a12_sgqx s2#30_sgTy
                                                                              }
                                                                              }
                                                                          }
                                                                          }
                                                                          }
                                                                          };
                                                                        GHC.Types.True ->
                                                                          a20_sgSW ipv120_sgTj
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }; } in
                                                                a20_sgSW s2#25_sgSV
                                                                }
                                                                }
                                                                }
                                                                }
                                                                }
                                                            }
                                                            }
                                                            }
                                                            }
                                                            }
                                                            }
                                                            };
                                                          GHC.Types.True -> a19_sgQI ipv98_sgR5
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a19_sgQI s2#19_sgQH
                                                  }
                                                  }
                                                  }
                                                  }
                                                  };
                                                GHC.Types.True ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv11_sgf5
                                                         ipv84_sgQ9
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_sgTA [Occ=Once], ipv87_sgTB #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv87_sgTB
                                                         ipv86_sgTA
                                                  of s2#18_sgTC { __DEFAULT ->
                                                  let {
                                                    sat_sgTW [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sgTW =
                                                      let {
                                                        sat_sgTV [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sgTV =
                                                          case ipv87_sgTB
                                                          of _ [Occ=Dead]
                                                          { (ww1_sgTE [Occ=Once!], ww2_sgTF [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sgTU [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sgTU =
                                                              case ww1_sgTE
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sgTH [Occ=Once] ->
                                                              let {
                                                                sat_sgTP [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sgTP =
                                                                  let {
                                                                    sat_sgTO [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sgTO =
                                                                      \ (w2_sgTI [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_sgTF
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_sgTK [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_sgTK w2_sgTI
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sgTM [Occ=Once], ww9_sgTN [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sgTM
                                                                          ww9_sgTN
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_sgTO
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sgTQ [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sgTQ =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sgTP } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sgTH sat_sgTQ
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sgTS [Occ=Once], ww7_sgTT [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sgTS ww7_sgTT
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sgTU
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sgTV } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sgTW
                                                         GHC.Types.True
                                                         s2#18_sgTC
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_sgTY [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv88_sgTY
                                                  of _ [Occ=Dead]
                                                  { (# ipv90_sgU1 [Occ=Once], ipv91_sgU2 [Occ=Once] #) ->
                                                  let {
                                                    sat_sgU3 [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sgU3 =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv91_sgU2 } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_sgfk
                                                         sat_sgU3
                                                         ipv90_sgU1
                                                  of s2#19_sgU4 { __DEFAULT ->
                                                  letrec {
                                                    a19_sgU5 [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a19_sgU5 =
                                                      \ (eta4_sgU6 [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               eta4_sgU6
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_sgU8 [Occ=Once], ipv93_sgU9 [Occ=Once] #) ->
                                                        let {
                                                          ix1_sgUa [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_sgUa =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv93_sgU9 } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_sgfe
                                                               ix1_sgUa
                                                               ipv92_sgU8
                                                        of s2#20_sgUb { __DEFAULT ->
                                                        let {
                                                          sat_sgUi [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_sgUi =
                                                            let {
                                                              sat_sgUh [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_sgUh =
                                                                case ix1_sgUa
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_sgUd [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_sgUd
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_sgUf [Occ=Once], ww6_sgUg [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_sgUf ww6_sgUg
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_sgUh } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_sgUi
                                                               GHC.Types.True
                                                               s2#20_sgUb
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_sgUk [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               ipv94_sgUk
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_sgUn [Occ=Once], ipv97_sgUo [Occ=Once] #) ->
                                                        let {
                                                          sat_sgUp [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sgUp =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv97_sgUo } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               sat_sgUp
                                                               ipv96_sgUn
                                                        of s2#21_sgUq { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               s2#21_sgUq
                                                        of _ [Occ=Dead]
                                                        { (# ipv98_sgUs [Occ=Once*], ipv99_sgUt [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv99_sgUt
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_sgfk
                                                                   ipv98_sgUs
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_sgUw [Occ=Once], ipv101_sgUx [Occ=Once] #) ->
                                                            let {
                                                              sat_sgUy [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_sgUy =
                                                                Automata4Coms.indices_a_init
                                                                  ipv101_sgUx } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_sgfz
                                                                   sat_sgUy
                                                                   ipv100_sgUw
                                                            of s2#22_sgUz { __DEFAULT ->
                                                            a12_sgqx s2#22_sgUz
                                                            }
                                                            };
                                                          GHC.Types.True -> a19_sgU5 ipv98_sgUs
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a19_sgU5 s2#19_sgU4
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              };
                                            GHC.Types.True -> a18_sgPr ipv74_sgPO
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a18_sgPr s2#12_sgPq
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                            }
                            } } in
                      let {
                        a18_sgUA
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a18_sgUA =
                          \ (eta2_sgUB [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv11_sgf5
                                   eta2_sgUB
                            of _ [Occ=Dead] { (# ipv54_sgUD [Occ=Once], ipv55_sgUE #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv55_sgUE
                                   ipv54_sgUD
                            of s2#8_sgUF { __DEFAULT ->
                            let {
                              sat_sgUZ [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sgUZ =
                                let {
                                  sat_sgUY [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sgUY =
                                    case ipv55_sgUE
                                    of _ [Occ=Dead]
                                    { (ww1_sgUH [Occ=Once!], ww2_sgUI [Occ=OnceL!]) ->
                                    let {
                                      sat_sgUX [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_sgUX =
                                        case ww1_sgUH
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_sgUK [Occ=Once] ->
                                        let {
                                          sat_sgUS [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgUS =
                                            let {
                                              sat_sgUR [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_sgUR =
                                                \ (w2_sgUL [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_sgUI
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_sgUN [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_sgUN w2_sgUL
                                                  of _ [Occ=Dead]
                                                  { (# ww8_sgUP [Occ=Once], ww9_sgUQ [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_sgUP ww9_sgUQ
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_sgUR
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_sgUT [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_sgUT =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_sgUS } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_sgUK sat_sgUT
                                        of _ [Occ=Dead]
                                        { (# ww6_sgUV [Occ=Once], ww7_sgUW [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_sgUV ww7_sgUW
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgUX
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_sgUY } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sgUZ GHC.Types.True s2#8_sgUF
                            of _ [Occ=Dead] { (# ipv56_sgV1 [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv56_sgV1
                            of _ [Occ=Dead]
                            { (# ipv58_sgV4 [Occ=Once], ipv59_sgV5 [Occ=Once] #) ->
                            let {
                              sat_sgV6 [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sgV6 =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_sgV5 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_sgfk
                                   sat_sgV6
                                   ipv58_sgV4
                            of s2#9_sgV7 { __DEFAULT ->
                            letrec {
                              a19_sgV8 [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a19_sgV8 =
                                \ (eta3_sgV9 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         eta3_sgV9
                                  of _ [Occ=Dead]
                                  { (# ipv60_sgVb [Occ=Once], ipv61_sgVc [Occ=Once] #) ->
                                  let {
                                    ix_sgVd [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_sgVd = Automata4Coms.indices_a_get_ix ipv61_sgVc } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_sgfe
                                         ix_sgVd
                                         ipv60_sgVb
                                  of s2#10_sgVe { __DEFAULT ->
                                  let {
                                    sat_sgVl [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_sgVl =
                                      let {
                                        sat_sgVk [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_sgVk =
                                          case ix_sgVd
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_sgVg [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_sgVg (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_sgVi [Occ=Once], ww6_sgVj [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_sgVi ww6_sgVj
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_sgVk } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_sgVl GHC.Types.True s2#10_sgVe
                                  of _ [Occ=Dead] { (# ipv62_sgVn [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         ipv62_sgVn
                                  of _ [Occ=Dead]
                                  { (# ipv64_sgVq [Occ=Once], ipv65_sgVr [Occ=Once] #) ->
                                  let {
                                    sat_sgVs [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_sgVs = Automata4Coms.indices_a_inc_ix ipv65_sgVr } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         sat_sgVs
                                         ipv64_sgVq
                                  of s2#11_sgVt { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         s2#11_sgVt
                                  of _ [Occ=Dead]
                                  { (# ipv66_sgVv [Occ=Once*], ipv67_sgVw [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv67_sgVw of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_sgfk
                                             ipv66_sgVv
                                      of _ [Occ=Dead]
                                      { (# ipv68_sgVz [Occ=Once], ipv69_sgVA [Occ=Once] #) ->
                                      let {
                                        sat_sgVB [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sgVB = Automata4Coms.indices_a_init ipv69_sgVA } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_sgfz
                                             sat_sgVB
                                             ipv68_sgVz
                                      of s2#12_sgVC { __DEFAULT ->
                                      a7_sglo s2#12_sgVC
                                      }
                                      };
                                    GHC.Types.True -> a19_sgV8 ipv66_sgVv
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a19_sgV8 s2#9_sgV7
                            }
                            }
                            }
                            }
                            } } in
                      let {
                        a19_sgVD
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a19_sgVD =
                          \ (eta2_sgVE [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv11_sgf5
                                   eta2_sgVE
                            of _ [Occ=Dead] { (# ipv54_sgVG [Occ=Once], ipv55_sgVH #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv55_sgVH
                                   ipv54_sgVG
                            of s2#8_sgVI { __DEFAULT ->
                            let {
                              sat_sgW2 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sgW2 =
                                let {
                                  sat_sgW1 [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sgW1 =
                                    case ipv55_sgVH
                                    of _ [Occ=Dead]
                                    { (ww1_sgVK [Occ=Once!], ww2_sgVL [Occ=OnceL!]) ->
                                    let {
                                      sat_sgW0 [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_sgW0 =
                                        case ww1_sgVK
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_sgVN [Occ=Once] ->
                                        let {
                                          sat_sgVV [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sgVV =
                                            let {
                                              sat_sgVU [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_sgVU =
                                                \ (w2_sgVO [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_sgVL
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_sgVQ [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_sgVQ w2_sgVO
                                                  of _ [Occ=Dead]
                                                  { (# ww8_sgVS [Occ=Once], ww9_sgVT [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_sgVS ww9_sgVT
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_sgVU
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_sgVW [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_sgVW =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_sgVV } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_sgVN sat_sgVW
                                        of _ [Occ=Dead]
                                        { (# ww6_sgVY [Occ=Once], ww7_sgVZ [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_sgVY ww7_sgVZ
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sgW0
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_sgW1 } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sgW2 GHC.Types.True s2#8_sgVI
                            of _ [Occ=Dead] { (# ipv56_sgW4 [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_sgfh
                                   ipv56_sgW4
                            of _ [Occ=Dead]
                            { (# ipv58_sgW7 [Occ=Once], ipv59_sgW8 [Occ=Once] #) ->
                            let {
                              sat_sgW9 [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sgW9 =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_sgW8 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_sgfk
                                   sat_sgW9
                                   ipv58_sgW7
                            of s2#9_sgWa { __DEFAULT ->
                            letrec {
                              a20_sgWb [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a20_sgWb =
                                \ (eta3_sgWc [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         eta3_sgWc
                                  of _ [Occ=Dead]
                                  { (# ipv60_sgWe [Occ=Once], ipv61_sgWf [Occ=Once] #) ->
                                  let {
                                    ix_sgWg [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_sgWg = Automata4Coms.indices_a_get_ix ipv61_sgWf } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_sgfe
                                         ix_sgWg
                                         ipv60_sgWe
                                  of s2#10_sgWh { __DEFAULT ->
                                  let {
                                    sat_sgWo [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_sgWo =
                                      let {
                                        sat_sgWn [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_sgWn =
                                          case ix_sgWg
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_sgWj [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_sgWj (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_sgWl [Occ=Once], ww6_sgWm [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_sgWl ww6_sgWm
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_sgWn } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_sgWo GHC.Types.True s2#10_sgWh
                                  of _ [Occ=Dead] { (# ipv62_sgWq [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         ipv62_sgWq
                                  of _ [Occ=Dead]
                                  { (# ipv64_sgWt [Occ=Once], ipv65_sgWu [Occ=Once] #) ->
                                  let {
                                    sat_sgWv [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_sgWv = Automata4Coms.indices_a_inc_ix ipv65_sgWu } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         sat_sgWv
                                         ipv64_sgWt
                                  of s2#11_sgWw { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_sgfz
                                         s2#11_sgWw
                                  of _ [Occ=Dead]
                                  { (# ipv66_sgWy [Occ=Once*], ipv67_sgWz [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv67_sgWz of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_sgfk
                                             ipv66_sgWy
                                      of _ [Occ=Dead]
                                      { (# ipv68_sgWC [Occ=Once], ipv69_sgWD [Occ=Once] #) ->
                                      let {
                                        sat_sgWE [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sgWE = Automata4Coms.indices_a_init ipv69_sgWD } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_sgfz
                                             sat_sgWE
                                             ipv68_sgWC
                                      of s2#12_sgWF { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv15_sgfb
                                             s2#12_sgWF
                                      of _ [Occ=Dead]
                                      { (# ipv70_sgWH [Occ=Once], ipv71_sgWI [Occ=Once] #) ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv13_sgf8
                                             ipv71_sgWI
                                             ipv70_sgWH
                                      of s2#13_sgWJ { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv13_sgf8
                                             s2#13_sgWJ
                                      of _ [Occ=Dead] { (# ipv72_sgWL [Occ=Once], ipv73_sgWM #) ->
                                      let {
                                        sat_sgWN [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sgWN = (ipv73_sgWM, ipv73_sgWM) } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv11_sgf5
                                             sat_sgWN
                                             ipv72_sgWL
                                      of s2#14_sgWO { __DEFAULT ->
                                      a18_sgUA s2#14_sgWO
                                      }
                                      }
                                      }
                                      }
                                      }
                                      };
                                    GHC.Types.True -> a20_sgWb ipv66_sgWy
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a20_sgWb s2#9_sgWa
                            }
                            }
                            }
                            }
                            } } in
                      letrec {
                        a25_sgWU [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a25_sgWU =
                          \ (eta2_sgZi [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_sgZi
                            of _ [Occ=Dead]
                            { (# ipv54_sgZk [Occ=Once], ipv55_sgZl [Occ=Once] #) ->
                            let {
                              ix_sgZm [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_sgZm = Automata4Coms.indices_a_get_ix ipv55_sgZl } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_sgZm
                                   ipv54_sgZk
                            of s2#8_sgZn { __DEFAULT ->
                            let {
                              sat_sgZu [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sgZu =
                                let {
                                  sat_sgZt [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sgZt =
                                    case ix_sgZm
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_sgZp [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_sgZp (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_sgZr [Occ=Once], ww6_sgZs [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_sgZr ww6_sgZs
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_sgZt } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sgZu GHC.Types.True s2#8_sgZn
                            of _ [Occ=Dead] { (# ipv56_sgZw [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv56_sgZw
                            of _ [Occ=Dead]
                            { (# ipv58_sgZz [Occ=Once], ipv59_sgZA [Occ=Once] #) ->
                            let {
                              sat_sgZB [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_sgZB = Automata4Coms.indices_a_inc_ix ipv59_sgZA } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_sgZB
                                   ipv58_sgZz
                            of s2#9_sgZC { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#9_sgZC
                            of _ [Occ=Dead]
                            { (# ipv60_sgZE [Occ=Once*], ipv61_sgZF [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_sgZF of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv60_sgZE
                                of _ [Occ=Dead]
                                { (# ipv62_sgZI [Occ=Once], ipv63_sgZJ [Occ=Once] #) ->
                                let {
                                  sat_sgZK [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sgZK = Automata4Coms.indices_a_init ipv63_sgZJ } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_sgZK
                                       ipv62_sgZI
                                of s2#10_sgZL { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb s2#10_sgZL
                                of _ [Occ=Dead]
                                { (# ipv64_sgZN [Occ=Once], ipv65_sgZO [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_sgf8
                                       ipv65_sgZO
                                       ipv64_sgZN
                                of s2#11_sgZP { __DEFAULT ->
                                a20_sgWP s2#11_sgZP
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a25_sgWU ipv60_sgZE
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a22_sgWR
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a22_sgWR =
                          \ (eta2_sgXV [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_sgeW eta2_sgXV
                            of _ [Occ=Dead]
                            { (# ipv54_sgXX [Occ=Once], ipv55_sgXY [Occ=Once] #) ->
                            let {
                              sat_sgXZ [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sgXZ = inc_rgem ipv55_sgXY } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv15_sgfb
                                   sat_sgXZ
                                   ipv54_sgXX
                            of s2#8_sgY0 { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb s2#8_sgY0
                            of _ [Occ=Dead]
                            { (# ipv56_sgY2 [Occ=Once*], ipv57_sgY3 [Occ=Once!] #) ->
                            case ipv57_sgY3
                            of _ [Occ=Dead] { GHC.Types.I# x1_sgY5 [Occ=Once] ->
                            case GHC.Prim.># x1_sgY5 10 of sat_sgY6 { __DEFAULT ->
                            case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_sgY6
                            of _ [Occ=Dead] {
                              GHC.Types.False -> a21_sgWQ ipv56_sgY2;
                              GHC.Types.True ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb ipv56_sgY2
                                of _ [Occ=Dead]
                                { (# ipv58_sgY9 [Occ=Once], ipv59_sgYa [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_sgf8
                                       ipv59_sgYa
                                       ipv58_sgY9
                                of s2#9_sgYb { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ s2#9_sgYb
                                of _ [Occ=Dead]
                                { (# ipv60_sgYd [Occ=Once*], ipv61_sgYe [Occ=Once!] #) ->
                                case ipv61_sgYe of _ [Occ=Dead] {
                                  [] -> a15_sgwc ipv60_sgYd;
                                  : i2_sgYg [Occ=Once] is2_sgYh [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_sgeQ
                                           is2_sgYh
                                           ipv60_sgYd
                                    of s2#10_sgYi { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_sgeW
                                           i2_sgYg
                                           s2#10_sgYi
                                    of s2#11_sgYj { __DEFAULT ->
                                    a20_sgWP s2#11_sgYj
                                    }
                                    }
                                }
                                }
                                }
                                }
                            }
                            }
                            }
                            }
                            }
                            };
                        a21_sgWQ [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a21_sgWQ =
                          \ (eta2_sgXE [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ eta2_sgXE
                            of _ [Occ=Dead]
                            { (# ipv54_sgXG [Occ=Once*], ipv55_sgXH [Occ=Once!] #) ->
                            case ipv55_sgXH of _ [Occ=Dead] {
                              [] ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_sgeT ipv54_sgXG
                                of _ [Occ=Dead]
                                { (# ipv56_sgXK [Occ=Once*], ipv57_sgXL [Occ=Once!] #) ->
                                case ipv57_sgXL of _ [Occ=Dead] {
                                  [] -> a13_sgrA ipv56_sgXK;
                                  : i2_sgXN [Occ=Once] is2_sgXO [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv3_sgeT
                                           is2_sgXO
                                           ipv56_sgXK
                                    of s2#8_sgXP { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv7_sgeZ
                                           i2_sgXN
                                           s2#8_sgXP
                                    of s2#9_sgXQ { __DEFAULT ->
                                    a12_sgqx s2#9_sgXQ
                                    }
                                    }
                                }
                                };
                              : i2_sgXR [Occ=Once] is2_sgXS [Occ=Once] ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ [GHC.Types.Int]
                                       ipv1_sgeQ
                                       is2_sgXS
                                       ipv54_sgXG
                                of s2#8_sgXT { __DEFAULT ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv5_sgeW
                                       i2_sgXR
                                       s2#8_sgXT
                                of s2#9_sgXU { __DEFAULT ->
                                a22_sgWR s2#9_sgXU
                                }
                                }
                            }
                            };
                        a24_sgWT [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a24_sgWT =
                          \ (eta2_sgYO [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_sgYO
                            of _ [Occ=Dead]
                            { (# ipv54_sgYQ [Occ=Once], ipv55_sgYR [Occ=Once] #) ->
                            let {
                              ix_sgYS [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_sgYS = Automata4Coms.indices_a_get_ix ipv55_sgYR } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_sgYS
                                   ipv54_sgYQ
                            of s2#8_sgYT { __DEFAULT ->
                            let {
                              sat_sgZ0 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sgZ0 =
                                let {
                                  sat_sgYZ [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sgYZ =
                                    case ix_sgYS
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_sgYV [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_sgYV (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_sgYX [Occ=Once], ww6_sgYY [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_sgYX ww6_sgYY
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_sgYZ } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sgZ0 GHC.Types.True s2#8_sgYT
                            of _ [Occ=Dead] { (# ipv56_sgZ2 [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv56_sgZ2
                            of _ [Occ=Dead]
                            { (# ipv58_sgZ5 [Occ=Once], ipv59_sgZ6 [Occ=Once] #) ->
                            let {
                              sat_sgZ7 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_sgZ7 = Automata4Coms.indices_a_inc_ix ipv59_sgZ6 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_sgZ7
                                   ipv58_sgZ5
                            of s2#9_sgZ8 { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#9_sgZ8
                            of _ [Occ=Dead]
                            { (# ipv60_sgZa [Occ=Once*], ipv61_sgZb [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_sgZb of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv60_sgZa
                                of _ [Occ=Dead]
                                { (# ipv62_sgZe [Occ=Once], ipv63_sgZf [Occ=Once] #) ->
                                let {
                                  sat_sgZg [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sgZg = Automata4Coms.indices_a_init ipv63_sgZf } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_sgZg
                                       ipv62_sgZe
                                of s2#10_sgZh { __DEFAULT ->
                                a22_sgWR s2#10_sgZh
                                }
                                };
                              GHC.Types.True -> a24_sgWT ipv60_sgZa
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a23_sgWS [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a23_sgWS =
                          \ (eta2_sgYk [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_sgYk
                            of _ [Occ=Dead]
                            { (# ipv54_sgYm [Occ=Once], ipv55_sgYn [Occ=Once] #) ->
                            let {
                              ix_sgYo [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_sgYo = Automata4Coms.indices_a_get_ix ipv55_sgYn } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_sgYo
                                   ipv54_sgYm
                            of s2#8_sgYp { __DEFAULT ->
                            let {
                              sat_sgYw [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sgYw =
                                let {
                                  sat_sgYv [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sgYv =
                                    case ix_sgYo
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_sgYr [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_sgYr (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_sgYt [Occ=Once], ww6_sgYu [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_sgYt ww6_sgYu
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_sgYv } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sgYw GHC.Types.True s2#8_sgYp
                            of _ [Occ=Dead] { (# ipv56_sgYy [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv56_sgYy
                            of _ [Occ=Dead]
                            { (# ipv58_sgYB [Occ=Once], ipv59_sgYC [Occ=Once] #) ->
                            let {
                              sat_sgYD [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_sgYD = Automata4Coms.indices_a_inc_ix ipv59_sgYC } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_sgYD
                                   ipv58_sgYB
                            of s2#9_sgYE { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#9_sgYE
                            of _ [Occ=Dead]
                            { (# ipv60_sgYG [Occ=Once*], ipv61_sgYH [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_sgYH of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv60_sgYG
                                of _ [Occ=Dead]
                                { (# ipv62_sgYK [Occ=Once], ipv63_sgYL [Occ=Once] #) ->
                                let {
                                  sat_sgYM [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sgYM = Automata4Coms.indices_a_init ipv63_sgYL } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_sgYM
                                       ipv62_sgYK
                                of s2#10_sgYN { __DEFAULT ->
                                a21_sgWQ s2#10_sgYN
                                }
                                };
                              GHC.Types.True -> a23_sgWS ipv60_sgYG
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a34_sgX3 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a34_sgX3 =
                          \ (eta2_shaM [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_sgeW eta2_shaM
                            of _ [Occ=Dead]
                            { (# ipv54_shaO [Occ=Once], ipv55_shaP [Occ=Once] #) ->
                            let {
                              sat_shaQ [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_shaQ = inc_rgem ipv55_shaP } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv15_sgfb
                                   sat_shaQ
                                   ipv54_shaO
                            of s2#8_shaR { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb s2#8_shaR
                            of _ [Occ=Dead]
                            { (# ipv56_shaT [Occ=Once*], ipv57_shaU [Occ=Once!] #) ->
                            case ipv57_shaU
                            of _ [Occ=Dead] { GHC.Types.I# x1_shaW [Occ=Once] ->
                            case GHC.Prim.># x1_shaW 10 of sat_shaX { __DEFAULT ->
                            case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_shaX
                            of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ ipv56_shaT
                                of _ [Occ=Dead]
                                { (# ipv58_shb0 [Occ=Once*], ipv59_shb1 [Occ=Once!] #) ->
                                case ipv59_shb1 of _ [Occ=Dead] {
                                  [] -> a12_sgqx ipv58_shb0;
                                  : i2_shb3 [Occ=Once] is2_shb4 [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_sgeQ
                                           is2_shb4
                                           ipv58_shb0
                                    of s2#9_shb5 { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_sgeW
                                           i2_shb3
                                           s2#9_shb5
                                    of s2#10_shb6 { __DEFAULT ->
                                    a34_sgX3 s2#10_shb6
                                    }
                                    }
                                }
                                };
                              GHC.Types.True ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb ipv56_shaT
                                of _ [Occ=Dead]
                                { (# ipv58_shb8 [Occ=Once], ipv59_shb9 [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_sgf8
                                       ipv59_shb9
                                       ipv58_shb8
                                of s2#9_shba { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_sgf8 s2#9_shba
                                of _ [Occ=Dead] { (# ipv60_shbc [Occ=Once], ipv61_shbd #) ->
                                let {
                                  sat_shbe [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_shbe = (ipv61_shbd, ipv61_shbd) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       sat_shbe
                                       ipv60_shbc
                                of s2#10_shbf { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       s2#10_shbf
                                of _ [Occ=Dead]
                                { (# ipv62_shbh [Occ=Once], ipv63_shbi [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       ipv62_shbh
                                of _ [Occ=Dead]
                                { (# ipv64_shbk [Occ=Once*], ipv65_shbl [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv63_shbi ipv65_shbl
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_sgf2
                                           ipv64_shbk
                                    of _ [Occ=Dead] { (# ipv66_shbo [Occ=Once], ipv67_shbp #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv67_shbp
                                           ipv66_shbo
                                    of s2#11_shbq { __DEFAULT ->
                                    let {
                                      sat_shbK [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_shbK =
                                        let {
                                          sat_shbJ [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_shbJ =
                                            case ipv67_shbp
                                            of _ [Occ=Dead]
                                            { (ww1_shbs [Occ=Once!], ww2_shbt [Occ=OnceL!]) ->
                                            let {
                                              sat_shbI [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_shbI =
                                                case ww1_shbs
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_shbv [Occ=Once] ->
                                                let {
                                                  sat_shbD [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_shbD =
                                                    let {
                                                      sat_shbC [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_shbC =
                                                        \ (w2_shbw [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_shbt
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_shby [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_shby w2_shbw
                                                          of _ [Occ=Dead]
                                                          { (# ww8_shbA [Occ=Once], ww9_shbB [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_shbA ww9_shbB
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_shbC
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_shbE [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_shbE =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_shbD } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_shbv sat_shbE
                                                of _ [Occ=Dead]
                                                { (# ww6_shbG [Occ=Once], ww7_shbH [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_shbG ww7_shbH
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_shbI
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_shbJ } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_shbK
                                           GHC.Types.True
                                           s2#11_shbq
                                    of _ [Occ=Dead] { (# ipv68_shbM [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv68_shbM
                                    of _ [Occ=Dead]
                                    { (# ipv70_shbP [Occ=Once], ipv71_shbQ [Occ=Once] #) ->
                                    let {
                                      sat_shbR [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_shbR =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv71_shbQ } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_shbR
                                           ipv70_shbP
                                    of s2#12_shbS { __DEFAULT ->
                                    a32_sgX1 s2#12_shbS
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_sgf5
                                           ipv64_shbk
                                    of _ [Occ=Dead] { (# ipv66_shbU [Occ=Once], ipv67_shbV #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv67_shbV
                                           ipv66_shbU
                                    of s2#11_shbW { __DEFAULT ->
                                    let {
                                      sat_shcg [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_shcg =
                                        let {
                                          sat_shcf [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_shcf =
                                            case ipv67_shbV
                                            of _ [Occ=Dead]
                                            { (ww1_shbY [Occ=Once!], ww2_shbZ [Occ=OnceL!]) ->
                                            let {
                                              sat_shce [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_shce =
                                                case ww1_shbY
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_shc1 [Occ=Once] ->
                                                let {
                                                  sat_shc9 [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_shc9 =
                                                    let {
                                                      sat_shc8 [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_shc8 =
                                                        \ (w2_shc2 [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_shbZ
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_shc4 [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_shc4 w2_shc2
                                                          of _ [Occ=Dead]
                                                          { (# ww8_shc6 [Occ=Once], ww9_shc7 [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_shc6 ww9_shc7
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_shc8
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_shca [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_shca =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_shc9 } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_shc1 sat_shca
                                                of _ [Occ=Dead]
                                                { (# ww6_shcc [Occ=Once], ww7_shcd [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_shcc ww7_shcd
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_shce
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_shcf } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_shcg
                                           GHC.Types.True
                                           s2#11_shbW
                                    of _ [Occ=Dead] { (# ipv68_shci [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv68_shci
                                    of _ [Occ=Dead]
                                    { (# ipv70_shcl [Occ=Once], ipv71_shcm [Occ=Once] #) ->
                                    let {
                                      sat_shcn [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_shcn =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv71_shcm } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_shcn
                                           ipv70_shcl
                                    of s2#12_shco { __DEFAULT ->
                                    a33_sgX2 s2#12_shco
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                            }
                            }
                            }
                            }
                            }
                            };
                        a33_sgX2 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a33_sgX2 =
                          \ (eta2_shaa [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_shaa
                            of _ [Occ=Dead]
                            { (# ipv54_shac [Occ=Once], ipv55_shad [Occ=Once] #) ->
                            let {
                              ix_shae [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_shae = Automata4Coms.indices_a_get_ix ipv55_shad } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_shae
                                   ipv54_shac
                            of s2#8_shaf { __DEFAULT ->
                            let {
                              sat_sham [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sham =
                                let {
                                  sat_shal [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_shal =
                                    case ix_shae
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_shah [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_shah (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_shaj [Occ=Once], ww6_shak [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_shaj ww6_shak
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_shal } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sham GHC.Types.True s2#8_shaf
                            of _ [Occ=Dead] { (# ipv56_shao [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv56_shao
                            of _ [Occ=Dead]
                            { (# ipv58_shar [Occ=Once], ipv59_shas [Occ=Once] #) ->
                            let {
                              sat_shat [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_shat = Automata4Coms.indices_a_inc_ix ipv59_shas } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_shat
                                   ipv58_shar
                            of s2#9_shau { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#9_shau
                            of _ [Occ=Dead]
                            { (# ipv60_shaw [Occ=Once*], ipv61_shax [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_shax of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv60_shaw
                                of _ [Occ=Dead]
                                { (# ipv62_shaA [Occ=Once], ipv63_shaB [Occ=Once] #) ->
                                let {
                                  sat_shaC [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_shaC = Automata4Coms.indices_a_init ipv63_shaB } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_shaC
                                       ipv62_shaA
                                of s2#10_shaD { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ s2#10_shaD
                                of _ [Occ=Dead]
                                { (# ipv64_shaF [Occ=Once*], ipv65_shaG [Occ=Once!] #) ->
                                case ipv65_shaG of _ [Occ=Dead] {
                                  [] -> a12_sgqx ipv64_shaF;
                                  : i2_shaI [Occ=Once] is2_shaJ [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_sgeQ
                                           is2_shaJ
                                           ipv64_shaF
                                    of s2#11_shaK { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_sgeW
                                           i2_shaI
                                           s2#11_shaK
                                    of s2#12_shaL { __DEFAULT ->
                                    a34_sgX3 s2#12_shaL
                                    }
                                    }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a33_sgX2 ipv60_shaw
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a35_sgX4 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a35_sgX4 =
                          \ (eta2_shcp [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_shcp
                            of _ [Occ=Dead]
                            { (# ipv54_shcr [Occ=Once], ipv55_shcs [Occ=Once] #) ->
                            let {
                              ix_shct [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_shct = Automata4Coms.indices_a_get_ix ipv55_shcs } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_shct
                                   ipv54_shcr
                            of s2#8_shcu { __DEFAULT ->
                            let {
                              sat_shcB [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_shcB =
                                let {
                                  sat_shcA [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_shcA =
                                    case ix_shct
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_shcw [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_shcw (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_shcy [Occ=Once], ww6_shcz [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_shcy ww6_shcz
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_shcA } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_shcB GHC.Types.True s2#8_shcu
                            of _ [Occ=Dead] { (# ipv56_shcD [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv56_shcD
                            of _ [Occ=Dead]
                            { (# ipv58_shcG [Occ=Once], ipv59_shcH [Occ=Once] #) ->
                            let {
                              sat_shcI [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_shcI = Automata4Coms.indices_a_inc_ix ipv59_shcH } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_shcI
                                   ipv58_shcG
                            of s2#9_shcJ { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#9_shcJ
                            of _ [Occ=Dead]
                            { (# ipv60_shcL [Occ=Once*], ipv61_shcM [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_shcM of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv60_shcL
                                of _ [Occ=Dead]
                                { (# ipv62_shcP [Occ=Once], ipv63_shcQ [Occ=Once] #) ->
                                let {
                                  sat_shcR [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_shcR = Automata4Coms.indices_a_init ipv63_shcQ } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_shcR
                                       ipv62_shcP
                                of s2#10_shcS { __DEFAULT ->
                                a34_sgX3 s2#10_shcS
                                }
                                };
                              GHC.Types.True -> a35_sgX4 ipv60_shcL
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a39_sgX8 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a39_sgX8 =
                          \ (eta2_shgR [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_shgR
                            of _ [Occ=Dead]
                            { (# ipv54_shgT [Occ=Once], ipv55_shgU [Occ=Once] #) ->
                            let {
                              ix_shgV [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_shgV = Automata4Coms.indices_a_get_ix ipv55_shgU } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_shgV
                                   ipv54_shgT
                            of s2#8_shgW { __DEFAULT ->
                            let {
                              sat_shh3 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_shh3 =
                                let {
                                  sat_shh2 [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_shh2 =
                                    case ix_shgV
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_shgY [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_shgY (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_shh0 [Occ=Once], ww6_shh1 [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_shh0 ww6_shh1
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_shh2 } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_shh3 GHC.Types.True s2#8_shgW
                            of _ [Occ=Dead] { (# ipv56_shh5 [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv56_shh5
                            of _ [Occ=Dead]
                            { (# ipv58_shh8 [Occ=Once], ipv59_shh9 [Occ=Once] #) ->
                            let {
                              sat_shha [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_shha = Automata4Coms.indices_a_inc_ix ipv59_shh9 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_shha
                                   ipv58_shh8
                            of s2#9_shhb { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#9_shhb
                            of _ [Occ=Dead]
                            { (# ipv60_shhd [Occ=Once*], ipv61_shhe [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_shhe of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv60_shhd
                                of _ [Occ=Dead]
                                { (# ipv62_shhh [Occ=Once], ipv63_shhi [Occ=Once] #) ->
                                let {
                                  sat_shhj [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_shhj = Automata4Coms.indices_a_init ipv63_shhi } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_shhj
                                       ipv62_shhh
                                of s2#10_shhk { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb s2#10_shhk
                                of _ [Occ=Dead]
                                { (# ipv64_shhm [Occ=Once], ipv65_shhn [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_sgf8
                                       ipv65_shhn
                                       ipv64_shhm
                                of s2#11_shho { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_sgeW s2#11_shho
                                of _ [Occ=Dead]
                                { (# ipv66_shhq [Occ=Once], ipv67_shhr [Occ=Once] #) ->
                                let {
                                  sat_shhs [Occ=Once] :: GHC.Types.Int
                                  [LclId, Str=DmdType]
                                  sat_shhs = inc_rgem ipv67_shhr } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv15_sgfb
                                       sat_shhs
                                       ipv66_shhq
                                of s2#12_shht { __DEFAULT ->
                                a29_sgWY s2#12_shht
                                }
                                }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a39_sgX8 ipv60_shhd
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a40_sgX9 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a40_sgX9 =
                          \ (eta2_shhu [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_shhu
                            of _ [Occ=Dead]
                            { (# ipv54_shhw [Occ=Once], ipv55_shhx [Occ=Once] #) ->
                            let {
                              ix_shhy [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_shhy = Automata4Coms.indices_a_get_ix ipv55_shhx } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_shhy
                                   ipv54_shhw
                            of s2#8_shhz { __DEFAULT ->
                            let {
                              sat_shhG [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_shhG =
                                let {
                                  sat_shhF [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_shhF =
                                    case ix_shhy
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_shhB [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_shhB (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_shhD [Occ=Once], ww6_shhE [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_shhD ww6_shhE
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_shhF } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_shhG GHC.Types.True s2#8_shhz
                            of _ [Occ=Dead] { (# ipv56_shhI [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv56_shhI
                            of _ [Occ=Dead]
                            { (# ipv58_shhL [Occ=Once], ipv59_shhM [Occ=Once] #) ->
                            let {
                              sat_shhN [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_shhN = Automata4Coms.indices_a_inc_ix ipv59_shhM } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_shhN
                                   ipv58_shhL
                            of s2#9_shhO { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#9_shhO
                            of _ [Occ=Dead]
                            { (# ipv60_shhQ [Occ=Once*], ipv61_shhR [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_shhR of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv60_shhQ
                                of _ [Occ=Dead]
                                { (# ipv62_shhU [Occ=Once], ipv63_shhV [Occ=Once] #) ->
                                let {
                                  sat_shhW [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_shhW = Automata4Coms.indices_a_init ipv63_shhV } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_shhW
                                       ipv62_shhU
                                of s2#10_shhX { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_sgeZ s2#10_shhX
                                of _ [Occ=Dead] { (# ipv64_shhZ [Occ=Once], ipv65_shi0 #) ->
                                let {
                                  sat_shi1 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_shi1 = (ipv65_shi0, ipv65_shi0) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       sat_shi1
                                       ipv64_shhZ
                                of s2#11_shi2 { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       s2#11_shi2
                                of _ [Occ=Dead]
                                { (# ipv66_shi4 [Occ=Once], ipv67_shi5 [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       ipv66_shi4
                                of _ [Occ=Dead]
                                { (# ipv68_shi7 [Occ=Once*], ipv69_shi8 [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv67_shi5 ipv69_shi8
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_sgf2
                                           ipv68_shi7
                                    of _ [Occ=Dead] { (# ipv70_shib [Occ=Once], ipv71_shic #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv71_shic
                                           ipv70_shib
                                    of s2#12_shid { __DEFAULT ->
                                    let {
                                      sat_shix [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_shix =
                                        let {
                                          sat_shiw [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_shiw =
                                            case ipv71_shic
                                            of _ [Occ=Dead]
                                            { (ww1_shif [Occ=Once!], ww2_shig [Occ=OnceL!]) ->
                                            let {
                                              sat_shiv [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_shiv =
                                                case ww1_shif
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_shii [Occ=Once] ->
                                                let {
                                                  sat_shiq [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_shiq =
                                                    let {
                                                      sat_ship [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_ship =
                                                        \ (w2_shij [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_shig
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_shil [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_shil w2_shij
                                                          of _ [Occ=Dead]
                                                          { (# ww8_shin [Occ=Once], ww9_shio [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_shin ww9_shio
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_ship
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_shir [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_shir =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_shiq } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_shii sat_shir
                                                of _ [Occ=Dead]
                                                { (# ww6_shit [Occ=Once], ww7_shiu [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_shit ww7_shiu
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_shiv
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_shiw } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_shix
                                           GHC.Types.True
                                           s2#12_shid
                                    of _ [Occ=Dead] { (# ipv72_shiz [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv72_shiz
                                    of _ [Occ=Dead]
                                    { (# ipv74_shiC [Occ=Once], ipv75_shiD [Occ=Once] #) ->
                                    let {
                                      sat_shiE [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_shiE =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv75_shiD } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_shiE
                                           ipv74_shiC
                                    of s2#13_shiF { __DEFAULT ->
                                    a39_sgX8 s2#13_shiF
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_sgf5
                                           ipv68_shi7
                                    of _ [Occ=Dead] { (# ipv70_shiH [Occ=Once], ipv71_shiI #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv71_shiI
                                           ipv70_shiH
                                    of s2#12_shiJ { __DEFAULT ->
                                    let {
                                      sat_shj3 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_shj3 =
                                        let {
                                          sat_shj2 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_shj2 =
                                            case ipv71_shiI
                                            of _ [Occ=Dead]
                                            { (ww1_shiL [Occ=Once!], ww2_shiM [Occ=OnceL!]) ->
                                            let {
                                              sat_shj1 [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_shj1 =
                                                case ww1_shiL
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_shiO [Occ=Once] ->
                                                let {
                                                  sat_shiW [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_shiW =
                                                    let {
                                                      sat_shiV [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_shiV =
                                                        \ (w2_shiP [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_shiM
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_shiR [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_shiR w2_shiP
                                                          of _ [Occ=Dead]
                                                          { (# ww8_shiT [Occ=Once], ww9_shiU [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_shiT ww9_shiU
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_shiV
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_shiX [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_shiX =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_shiW } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_shiO sat_shiX
                                                of _ [Occ=Dead]
                                                { (# ww6_shiZ [Occ=Once], ww7_shj0 [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_shiZ ww7_shj0
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_shj1
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_shj2 } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_shj3
                                           GHC.Types.True
                                           s2#12_shiJ
                                    of _ [Occ=Dead] { (# ipv72_shj5 [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv72_shj5
                                    of _ [Occ=Dead]
                                    { (# ipv74_shj8 [Occ=Once], ipv75_shj9 [Occ=Once] #) ->
                                    let {
                                      sat_shja [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_shja =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv75_shj9 } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_shja
                                           ipv74_shj8
                                    of s2#13_shjb { __DEFAULT ->
                                    a25_sgWU s2#13_shjb
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a40_sgX9 ipv60_shhQ
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a27_sgWW [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a27_sgWW =
                          \ (eta2_sh0k [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_sh0k
                            of _ [Occ=Dead]
                            { (# ipv54_sh0m [Occ=Once], ipv55_sh0n [Occ=Once] #) ->
                            let {
                              ix_sh0o [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_sh0o = Automata4Coms.indices_a_get_ix ipv55_sh0n } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_sh0o
                                   ipv54_sh0m
                            of s2#8_sh0p { __DEFAULT ->
                            let {
                              sat_sh0w [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sh0w =
                                let {
                                  sat_sh0v [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sh0v =
                                    case ix_sh0o
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_sh0r [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_sh0r (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_sh0t [Occ=Once], ww6_sh0u [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_sh0t ww6_sh0u
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_sh0v } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sh0w GHC.Types.True s2#8_sh0p
                            of _ [Occ=Dead] { (# ipv56_sh0y [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv56_sh0y
                            of _ [Occ=Dead]
                            { (# ipv58_sh0B [Occ=Once], ipv59_sh0C [Occ=Once] #) ->
                            let {
                              sat_sh0D [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_sh0D = Automata4Coms.indices_a_inc_ix ipv59_sh0C } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_sh0D
                                   ipv58_sh0B
                            of s2#9_sh0E { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#9_sh0E
                            of _ [Occ=Dead]
                            { (# ipv60_sh0G [Occ=Once*], ipv61_sh0H [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_sh0H of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv60_sh0G
                                of _ [Occ=Dead]
                                { (# ipv62_sh0K [Occ=Once], ipv63_sh0L [Occ=Once] #) ->
                                let {
                                  sat_sh0M [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sh0M = Automata4Coms.indices_a_init ipv63_sh0L } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_sh0M
                                       ipv62_sh0K
                                of s2#10_sh0N { __DEFAULT ->
                                a28_sgWX s2#10_sh0N
                                }
                                };
                              GHC.Types.True -> a27_sgWW ipv60_sh0G
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a28_sgWX [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a28_sgWX =
                          \ (eta2_sh0O [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_sgeT eta2_sh0O
                            of _ [Occ=Dead]
                            { (# ipv54_sh0Q [Occ=Once*], ipv55_sh0R [Occ=Once!] #) ->
                            case ipv55_sh0R of _ [Occ=Dead] {
                              [] ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       ipv54_sh0Q
                                of _ [Occ=Dead] { (# ipv56_sh0U [Occ=Once], ipv57_sh0V #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv19_sgfh
                                       ipv57_sh0V
                                       ipv56_sh0U
                                of s2#8_sh0W { __DEFAULT ->
                                let {
                                  sat_sh1g [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                  [LclId, Str=DmdType]
                                  sat_sh1g =
                                    let {
                                      sat_sh1f [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_sh1f =
                                        case ipv57_sh0V
                                        of _ [Occ=Dead]
                                        { (ww1_sh0Y [Occ=Once!], ww2_sh0Z [Occ=OnceL!]) ->
                                        let {
                                          sat_sh1e [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sh1e =
                                            case ww1_sh0Y
                                            of _ [Occ=Dead] { GHC.Types.I# ww4_sh11 [Occ=Once] ->
                                            let {
                                              sat_sh19 [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sh19 =
                                                let {
                                                  sat_sh18 [Occ=Once]
                                                    :: GHC.Base.String -> GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sh18 =
                                                    \ (w2_sh12 [Occ=Once] :: GHC.Base.String) ->
                                                      case ww2_sh0Z
                                                      of _ [Occ=Dead]
                                                      { GHC.Types.I# ww6_sh14 [Occ=Once] ->
                                                      case GHC.Show.$wshowSignedInt
                                                             0 ww6_sh14 w2_sh12
                                                      of _ [Occ=Dead]
                                                      { (# ww8_sh16 [Occ=Once], ww9_sh17 [Occ=Once] #) ->
                                                      GHC.Types.: @ GHC.Types.Char ww8_sh16 ww9_sh17
                                                      }
                                                      } } in
                                                GHC.List.foldr1_$sfoldr1
                                                  @ (GHC.Base.String -> GHC.Base.String)
                                                  GHC.Show.$fShow(,)1
                                                  sat_sh18
                                                  (GHC.Types.[] @ GHC.Show.ShowS)
                                                  lvl4_rger } in
                                            let {
                                              sat_sh1a [Occ=Once] :: GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_sh1a =
                                                GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.showList__1
                                                  sat_sh19 } in
                                            case GHC.Show.$wshowSignedInt 0 ww4_sh11 sat_sh1a
                                            of _ [Occ=Dead]
                                            { (# ww6_sh1c [Occ=Once], ww7_sh1d [Occ=Once] #) ->
                                            GHC.Types.: @ GHC.Types.Char ww6_sh1c ww7_sh1d
                                            }
                                            } } in
                                        GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sh1e
                                        } } in
                                    GHC.CString.unpackAppendCString# "merg: "# sat_sh1f } in
                                case GHC.IO.Handle.Text.hPutStr2
                                       GHC.IO.Handle.FD.stdout sat_sh1g GHC.Types.True s2#8_sh0W
                                of _ [Occ=Dead] { (# ipv58_sh1i [Occ=Once], _ [Occ=Dead] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv19_sgfh
                                       ipv58_sh1i
                                of _ [Occ=Dead]
                                { (# ipv60_sh1l [Occ=Once], ipv61_sh1m [Occ=Once] #) ->
                                let {
                                  sat_sh1n [Occ=Once] :: GHC.Types.Int
                                  [LclId, Str=DmdType]
                                  sat_sh1n =
                                    Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv61_sh1m } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv21_sgfk
                                       sat_sh1n
                                       ipv60_sh1l
                                of s2#9_sh1o { __DEFAULT ->
                                letrec {
                                  a42_sh1p [Occ=LoopBreaker]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                  [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                  a42_sh1p =
                                    \ (eta3_sh1q [Occ=Once]
                                         :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_sgfz
                                             eta3_sh1q
                                      of _ [Occ=Dead]
                                      { (# ipv62_sh1s [Occ=Once], ipv63_sh1t [Occ=Once] #) ->
                                      let {
                                        ix_sh1u [Dmd=<L,U(U)>] :: GHC.Types.Int
                                        [LclId, Str=DmdType]
                                        ix_sh1u = Automata4Coms.indices_a_get_ix ipv63_sh1t } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv17_sgfe
                                             ix_sh1u
                                             ipv62_sh1s
                                      of s2#10_sh1v { __DEFAULT ->
                                      let {
                                        sat_sh1C [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                        [LclId, Str=DmdType]
                                        sat_sh1C =
                                          let {
                                            sat_sh1B [Occ=Once] :: [GHC.Types.Char]
                                            [LclId, Str=DmdType]
                                            sat_sh1B =
                                              case ix_sh1u
                                              of _ [Occ=Dead] { GHC.Types.I# ww3_sh1x [Occ=Once] ->
                                              case GHC.Show.$wshowSignedInt
                                                     0 ww3_sh1x (GHC.Types.[] @ GHC.Types.Char)
                                              of _ [Occ=Dead]
                                              { (# ww5_sh1z [Occ=Once], ww6_sh1A [Occ=Once] #) ->
                                              GHC.Types.: @ GHC.Types.Char ww5_sh1z ww6_sh1A
                                              }
                                              } } in
                                          GHC.CString.unpackAppendCString# "filtd:"# sat_sh1B } in
                                      case GHC.IO.Handle.Text.hPutStr2
                                             GHC.IO.Handle.FD.stdout
                                             sat_sh1C
                                             GHC.Types.True
                                             s2#10_sh1v
                                      of _ [Occ=Dead] { (# ipv64_sh1E [Occ=Once], _ [Occ=Dead] #) ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_sgfz
                                             ipv64_sh1E
                                      of _ [Occ=Dead]
                                      { (# ipv66_sh1H [Occ=Once], ipv67_sh1I [Occ=Once] #) ->
                                      let {
                                        sat_sh1J [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sh1J = Automata4Coms.indices_a_inc_ix ipv67_sh1I } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_sgfz
                                             sat_sh1J
                                             ipv66_sh1H
                                      of s2#11_sh1K { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_sgfz
                                             s2#11_sh1K
                                      of _ [Occ=Dead]
                                      { (# ipv68_sh1M [Occ=Once*], ipv69_sh1N [Occ=Once] #) ->
                                      case Automata4Coms.indices_a_check ipv69_sh1N
                                      of _ [Occ=Dead] {
                                        GHC.Types.False ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv21_sgfk
                                                 ipv68_sh1M
                                          of _ [Occ=Dead]
                                          { (# ipv70_sh1Q [Occ=Once], ipv71_sh1R [Occ=Once] #) ->
                                          let {
                                            sat_sh1S [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sh1S = Automata4Coms.indices_a_init ipv71_sh1R } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 sat_sh1S
                                                 ipv70_sh1Q
                                          of s2#12_sh1T { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv13_sgf8
                                                 s2#12_sh1T
                                          of _ [Occ=Dead]
                                          { (# ipv72_sh1V [Occ=Once], ipv73_sh1W #) ->
                                          let {
                                            sat_sh1X [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sh1X = (ipv73_sh1W, ipv73_sh1W) } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv11_sgf5
                                                 sat_sh1X
                                                 ipv72_sh1V
                                          of s2#13_sh1Y { __DEFAULT ->
                                          a19_sgVD s2#13_sh1Y
                                          }
                                          }
                                          }
                                          };
                                        GHC.Types.True -> a42_sh1p ipv68_sh1M
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }; } in
                                a42_sh1p s2#9_sh1o
                                }
                                }
                                }
                                }
                                };
                              : i2_sh1Z [Occ=Once] is2_sh20 [Occ=Once] ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ [GHC.Types.Int]
                                       ipv3_sgeT
                                       is2_sh20
                                       ipv54_sh0Q
                                of s2#8_sh21 { __DEFAULT ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv7_sgeZ
                                       i2_sh1Z
                                       s2#8_sh21
                                of s2#9_sh22 { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_sgeZ s2#9_sh22
                                of _ [Occ=Dead] { (# ipv56_sh24 [Occ=Once], ipv57_sh25 #) ->
                                let {
                                  sat_sh26 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sh26 = (ipv57_sh25, ipv57_sh25) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       sat_sh26
                                       ipv56_sh24
                                of s2#10_sh27 { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       s2#10_sh27
                                of _ [Occ=Dead]
                                { (# ipv58_sh29 [Occ=Once], ipv59_sh2a [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       ipv58_sh29
                                of _ [Occ=Dead]
                                { (# ipv60_sh2c [Occ=Once*], ipv61_sh2d [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv59_sh2a ipv61_sh2d
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_sgf2
                                           ipv60_sh2c
                                    of _ [Occ=Dead] { (# ipv62_sh2g [Occ=Once], ipv63_sh2h #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv63_sh2h
                                           ipv62_sh2g
                                    of s2#11_sh2i { __DEFAULT ->
                                    let {
                                      sat_sh2C [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sh2C =
                                        let {
                                          sat_sh2B [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sh2B =
                                            case ipv63_sh2h
                                            of _ [Occ=Dead]
                                            { (ww1_sh2k [Occ=Once!], ww2_sh2l [Occ=OnceL!]) ->
                                            let {
                                              sat_sh2A [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sh2A =
                                                case ww1_sh2k
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sh2n [Occ=Once] ->
                                                let {
                                                  sat_sh2v [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sh2v =
                                                    let {
                                                      sat_sh2u [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sh2u =
                                                        \ (w2_sh2o [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sh2l
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sh2q [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sh2q w2_sh2o
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sh2s [Occ=Once], ww9_sh2t [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sh2s ww9_sh2t
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sh2u
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sh2w [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sh2w =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sh2v } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sh2n sat_sh2w
                                                of _ [Occ=Dead]
                                                { (# ww6_sh2y [Occ=Once], ww7_sh2z [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sh2y ww7_sh2z
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sh2A
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sh2B } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_sh2C
                                           GHC.Types.True
                                           s2#11_sh2i
                                    of _ [Occ=Dead] { (# ipv64_sh2E [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv64_sh2E
                                    of _ [Occ=Dead]
                                    { (# ipv66_sh2H [Occ=Once], ipv67_sh2I [Occ=Once] #) ->
                                    let {
                                      sat_sh2J [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sh2J =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_sh2I } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_sh2J
                                           ipv66_sh2H
                                    of s2#12_sh2K { __DEFAULT ->
                                    a27_sgWW s2#12_sh2K
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_sgf5
                                           ipv60_sh2c
                                    of _ [Occ=Dead] { (# ipv62_sh2M [Occ=Once], ipv63_sh2N #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv63_sh2N
                                           ipv62_sh2M
                                    of s2#11_sh2O { __DEFAULT ->
                                    let {
                                      sat_sh38 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sh38 =
                                        let {
                                          sat_sh37 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sh37 =
                                            case ipv63_sh2N
                                            of _ [Occ=Dead]
                                            { (ww1_sh2Q [Occ=Once!], ww2_sh2R [Occ=OnceL!]) ->
                                            let {
                                              sat_sh36 [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sh36 =
                                                case ww1_sh2Q
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sh2T [Occ=Once] ->
                                                let {
                                                  sat_sh31 [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sh31 =
                                                    let {
                                                      sat_sh30 [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sh30 =
                                                        \ (w2_sh2U [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sh2R
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sh2W [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sh2W w2_sh2U
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sh2Y [Occ=Once], ww9_sh2Z [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sh2Y ww9_sh2Z
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sh30
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sh32 [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sh32 =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sh31 } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sh2T sat_sh32
                                                of _ [Occ=Dead]
                                                { (# ww6_sh34 [Occ=Once], ww7_sh35 [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sh34 ww7_sh35
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sh36
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sh37 } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_sh38
                                           GHC.Types.True
                                           s2#11_sh2O
                                    of _ [Occ=Dead] { (# ipv64_sh3a [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv64_sh3a
                                    of _ [Occ=Dead]
                                    { (# ipv66_sh3d [Occ=Once], ipv67_sh3e [Occ=Once] #) ->
                                    let {
                                      sat_sh3f [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sh3f =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_sh3e } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_sh3f
                                           ipv66_sh3d
                                    of s2#12_sh3g { __DEFAULT ->
                                    a26_sgWV s2#12_sh3g
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                            }
                            };
                        a29_sgWY [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a29_sgWY =
                          \ (eta2_sh3h [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb eta2_sh3h
                            of _ [Occ=Dead]
                            { (# ipv54_sh3j [Occ=Once*], ipv55_sh3k [Occ=Once!] #) ->
                            case ipv55_sh3k
                            of _ [Occ=Dead] { GHC.Types.I# x1_sh3m [Occ=Once] ->
                            case GHC.Prim.># x1_sh3m 10 of sat_sh3n { __DEFAULT ->
                            case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_sh3n
                            of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ ipv54_sh3j
                                of _ [Occ=Dead]
                                { (# ipv56_sh3q [Occ=Once*], ipv57_sh3r [Occ=Once!] #) ->
                                case ipv57_sh3r of _ [Occ=Dead] {
                                  [] -> a16_sgDa ipv56_sh3q;
                                  : i2_sh3t [Occ=Once] is2_sh3u [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_sgeQ
                                           is2_sh3u
                                           ipv56_sh3q
                                    of s2#8_sh3v { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_sgeW
                                           i2_sh3t
                                           s2#8_sh3v
                                    of s2#9_sh3w { __DEFAULT ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_sgeW s2#9_sh3w
                                    of _ [Occ=Dead]
                                    { (# ipv58_sh3y [Occ=Once], ipv59_sh3z [Occ=Once] #) ->
                                    let {
                                      sat_sh3A [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sh3A = inc_rgem ipv59_sh3z } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv15_sgfb
                                           sat_sh3A
                                           ipv58_sh3y
                                    of s2#10_sh3B { __DEFAULT ->
                                    a29_sgWY s2#10_sh3B
                                    }
                                    }
                                    }
                                    }
                                }
                                };
                              GHC.Types.True ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ ipv54_sh3j
                                of _ [Occ=Dead]
                                { (# ipv56_sh3D [Occ=Once*], ipv57_sh3E [Occ=Once!] #) ->
                                case ipv57_sh3E of _ [Occ=Dead] {
                                  [] ->
                                    letrec {
                                      a43_sh3H
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a43_sh3H =
                                        \ (eta3_sh4c [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ [GHC.Types.Int]
                                                 ipv3_sgeT
                                                 eta3_sh4c
                                          of _ [Occ=Dead]
                                          { (# ipv58_sh4e [Occ=Once*], ipv59_sh4f [Occ=Once!] #) ->
                                          case ipv59_sh4f of _ [Occ=Dead] {
                                            [] ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_sgf5
                                                     ipv58_sh4e
                                              of _ [Occ=Dead]
                                              { (# ipv60_sh4i [Occ=Once], ipv61_sh4j #) ->
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv19_sgfh
                                                     ipv61_sh4j
                                                     ipv60_sh4i
                                              of s2#8_sh4k { __DEFAULT ->
                                              let {
                                                sat_sh4E [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                                [LclId, Str=DmdType]
                                                sat_sh4E =
                                                  let {
                                                    sat_sh4D [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId, Str=DmdType]
                                                    sat_sh4D =
                                                      case ipv61_sh4j
                                                      of _ [Occ=Dead]
                                                      { (ww1_sh4m [Occ=Once!], ww2_sh4n [Occ=OnceL!]) ->
                                                      let {
                                                        sat_sh4C [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sh4C =
                                                          case ww1_sh4m
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww4_sh4p [Occ=Once] ->
                                                          let {
                                                            sat_sh4x [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sh4x =
                                                              let {
                                                                sat_sh4w [Occ=Once]
                                                                  :: GHC.Base.String
                                                                     -> GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sh4w =
                                                                  \ (w2_sh4q [Occ=Once]
                                                                       :: GHC.Base.String) ->
                                                                    case ww2_sh4n
                                                                    of _ [Occ=Dead]
                                                                    { GHC.Types.I# ww6_sh4s [Occ=Once] ->
                                                                    case GHC.Show.$wshowSignedInt
                                                                           0 ww6_sh4s w2_sh4q
                                                                    of _ [Occ=Dead]
                                                                    { (# ww8_sh4u [Occ=Once], ww9_sh4v [Occ=Once] #) ->
                                                                    GHC.Types.:
                                                                      @ GHC.Types.Char
                                                                      ww8_sh4u
                                                                      ww9_sh4v
                                                                    }
                                                                    } } in
                                                              GHC.List.foldr1_$sfoldr1
                                                                @ (GHC.Base.String
                                                                   -> GHC.Base.String)
                                                                GHC.Show.$fShow(,)1
                                                                sat_sh4w
                                                                (GHC.Types.[] @ GHC.Show.ShowS)
                                                                lvl4_rger } in
                                                          let {
                                                            sat_sh4y [Occ=Once] :: GHC.Base.String
                                                            [LclId, Str=DmdType]
                                                            sat_sh4y =
                                                              GHC.Types.:
                                                                @ GHC.Types.Char
                                                                GHC.Show.showList__1
                                                                sat_sh4x } in
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww4_sh4p sat_sh4y
                                                          of _ [Occ=Dead]
                                                          { (# ww6_sh4A [Occ=Once], ww7_sh4B [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww6_sh4A ww7_sh4B
                                                          }
                                                          } } in
                                                      GHC.Types.:
                                                        @ GHC.Types.Char GHC.Show.shows13 sat_sh4C
                                                      } } in
                                                  GHC.CString.unpackAppendCString#
                                                    "merg: "# sat_sh4D } in
                                              case GHC.IO.Handle.Text.hPutStr2
                                                     GHC.IO.Handle.FD.stdout
                                                     sat_sh4E
                                                     GHC.Types.True
                                                     s2#8_sh4k
                                              of _ [Occ=Dead]
                                              { (# ipv62_sh4G [Occ=Once], _ [Occ=Dead] #) ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv19_sgfh
                                                     ipv62_sh4G
                                              of _ [Occ=Dead]
                                              { (# ipv64_sh4J [Occ=Once], ipv65_sh4K [Occ=Once] #) ->
                                              let {
                                                sat_sh4L [Occ=Once] :: GHC.Types.Int
                                                [LclId, Str=DmdType]
                                                sat_sh4L =
                                                  Data.Tuple.snd
                                                    @ GHC.Types.Int @ GHC.Types.Int ipv65_sh4K } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_sgfk
                                                     sat_sh4L
                                                     ipv64_sh4J
                                              of s2#9_sh4M { __DEFAULT ->
                                              letrec {
                                                a44_sh4N [Occ=LoopBreaker]
                                                  :: GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                                [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                                a44_sh4N =
                                                  \ (eta4_sh4O [Occ=Once]
                                                       :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                    case GHC.Prim.readMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ (GHC.Types.Int, GHC.Types.Int)
                                                           ipv31_sgfz
                                                           eta4_sh4O
                                                    of _ [Occ=Dead]
                                                    { (# ipv66_sh4Q [Occ=Once], ipv67_sh4R [Occ=Once] #) ->
                                                    let {
                                                      ix_sh4S [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                      [LclId, Str=DmdType]
                                                      ix_sh4S =
                                                        Automata4Coms.indices_a_get_ix
                                                          ipv67_sh4R } in
                                                    case GHC.Prim.writeMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ GHC.Types.Int
                                                           ipv17_sgfe
                                                           ix_sh4S
                                                           ipv66_sh4Q
                                                    of s2#10_sh4T { __DEFAULT ->
                                                    let {
                                                      sat_sh50 [Occ=Once, Dmd=<L,1*U>]
                                                        :: GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sh50 =
                                                        let {
                                                          sat_sh4Z [Occ=Once] :: [GHC.Types.Char]
                                                          [LclId, Str=DmdType]
                                                          sat_sh4Z =
                                                            case ix_sh4S
                                                            of _ [Occ=Dead]
                                                            { GHC.Types.I# ww3_sh4V [Occ=Once] ->
                                                            case GHC.Show.$wshowSignedInt
                                                                   0
                                                                   ww3_sh4V
                                                                   (GHC.Types.[] @ GHC.Types.Char)
                                                            of _ [Occ=Dead]
                                                            { (# ww5_sh4X [Occ=Once], ww6_sh4Y [Occ=Once] #) ->
                                                            GHC.Types.:
                                                              @ GHC.Types.Char ww5_sh4X ww6_sh4Y
                                                            }
                                                            } } in
                                                        GHC.CString.unpackAppendCString#
                                                          "filtd:"# sat_sh4Z } in
                                                    case GHC.IO.Handle.Text.hPutStr2
                                                           GHC.IO.Handle.FD.stdout
                                                           sat_sh50
                                                           GHC.Types.True
                                                           s2#10_sh4T
                                                    of _ [Occ=Dead]
                                                    { (# ipv68_sh52 [Occ=Once], _ [Occ=Dead] #) ->
                                                    case GHC.Prim.readMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ (GHC.Types.Int, GHC.Types.Int)
                                                           ipv31_sgfz
                                                           ipv68_sh52
                                                    of _ [Occ=Dead]
                                                    { (# ipv70_sh55 [Occ=Once], ipv71_sh56 [Occ=Once] #) ->
                                                    let {
                                                      sat_sh57 [Occ=Once]
                                                        :: (GHC.Types.Int, GHC.Types.Int)
                                                      [LclId, Str=DmdType]
                                                      sat_sh57 =
                                                        Automata4Coms.indices_a_inc_ix
                                                          ipv71_sh56 } in
                                                    case GHC.Prim.writeMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ (GHC.Types.Int, GHC.Types.Int)
                                                           ipv31_sgfz
                                                           sat_sh57
                                                           ipv70_sh55
                                                    of s2#11_sh58 { __DEFAULT ->
                                                    case GHC.Prim.readMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ (GHC.Types.Int, GHC.Types.Int)
                                                           ipv31_sgfz
                                                           s2#11_sh58
                                                    of _ [Occ=Dead]
                                                    { (# ipv72_sh5a [Occ=Once*], ipv73_sh5b [Occ=Once] #) ->
                                                    case Automata4Coms.indices_a_check ipv73_sh5b
                                                    of _ [Occ=Dead] {
                                                      GHC.Types.False ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv21_sgfk
                                                               ipv72_sh5a
                                                        of _ [Occ=Dead]
                                                        { (# ipv74_sh5e [Occ=Once], ipv75_sh5f [Occ=Once] #) ->
                                                        let {
                                                          sat_sh5g [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sh5g =
                                                            Automata4Coms.indices_a_init
                                                              ipv75_sh5f } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               sat_sh5g
                                                               ipv74_sh5e
                                                        of s2#12_sh5h { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv13_sgf8
                                                               s2#12_sh5h
                                                        of _ [Occ=Dead]
                                                        { (# ipv76_sh5j [Occ=Once], ipv77_sh5k #) ->
                                                        let {
                                                          sat_sh5l [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sh5l = (ipv77_sh5k, ipv77_sh5k) } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv11_sgf5
                                                               sat_sh5l
                                                               ipv76_sh5j
                                                        of s2#13_sh5m { __DEFAULT ->
                                                        a10_sgoi s2#13_sh5m
                                                        }
                                                        }
                                                        }
                                                        };
                                                      GHC.Types.True -> a44_sh4N ipv72_sh5a
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }; } in
                                              a44_sh4N s2#9_sh4M
                                              }
                                              }
                                              }
                                              }
                                              };
                                            : i2_sh5n [Occ=Once] is2_sh5o [Occ=Once] ->
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ [GHC.Types.Int]
                                                     ipv3_sgeT
                                                     is2_sh5o
                                                     ipv58_sh4e
                                              of s2#8_sh5p { __DEFAULT ->
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv7_sgeZ
                                                     i2_sh5n
                                                     s2#8_sh5p
                                              of s2#9_sh5q { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv7_sgeZ
                                                     s2#9_sh5q
                                              of _ [Occ=Dead]
                                              { (# ipv60_sh5s [Occ=Once], ipv61_sh5t #) ->
                                              let {
                                                sat_sh5u [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sh5u = (ipv61_sh5t, ipv61_sh5t) } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_sgf2
                                                     sat_sh5u
                                                     ipv60_sh5s
                                              of s2#10_sh5v { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_sgf5
                                                     s2#10_sh5v
                                              of _ [Occ=Dead]
                                              { (# ipv62_sh5x [Occ=Once], ipv63_sh5y [Occ=Once] #) ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_sgf2
                                                     ipv62_sh5x
                                              of _ [Occ=Dead]
                                              { (# ipv64_sh5A [Occ=Once*], ipv65_sh5B [Occ=Once] #) ->
                                              case Automata4Coms.merge_a_le_pair
                                                     @ GHC.Types.Int ipv63_sh5y ipv65_sh5B
                                              of _ [Occ=Dead] {
                                                GHC.Types.False ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv9_sgf2
                                                         ipv64_sh5A
                                                  of _ [Occ=Dead]
                                                  { (# ipv66_sh5E [Occ=Once], ipv67_sh5F #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv67_sh5F
                                                         ipv66_sh5E
                                                  of s2#11_sh5G { __DEFAULT ->
                                                  let {
                                                    sat_sh60 [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sh60 =
                                                      let {
                                                        sat_sh5Z [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sh5Z =
                                                          case ipv67_sh5F
                                                          of _ [Occ=Dead]
                                                          { (ww1_sh5I [Occ=Once!], ww2_sh5J [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sh5Y [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sh5Y =
                                                              case ww1_sh5I
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sh5L [Occ=Once] ->
                                                              let {
                                                                sat_sh5T [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sh5T =
                                                                  let {
                                                                    sat_sh5S [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sh5S =
                                                                      \ (w2_sh5M [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_sh5J
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_sh5O [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_sh5O w2_sh5M
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sh5Q [Occ=Once], ww9_sh5R [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sh5Q
                                                                          ww9_sh5R
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_sh5S
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sh5U [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sh5U =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sh5T } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sh5L sat_sh5U
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sh5W [Occ=Once], ww7_sh5X [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sh5W ww7_sh5X
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sh5Y
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sh5Z } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sh60
                                                         GHC.Types.True
                                                         s2#11_sh5G
                                                  of _ [Occ=Dead]
                                                  { (# ipv68_sh62 [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv68_sh62
                                                  of _ [Occ=Dead]
                                                  { (# ipv70_sh65 [Occ=Once], ipv71_sh66 [Occ=Once] #) ->
                                                  let {
                                                    sat_sh67 [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sh67 =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv71_sh66 } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_sgfk
                                                         sat_sh67
                                                         ipv70_sh65
                                                  of s2#12_sh68 { __DEFAULT ->
                                                  a42_sh3G s2#12_sh68
                                                  }
                                                  }
                                                  }
                                                  }
                                                  };
                                                GHC.Types.True ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv11_sgf5
                                                         ipv64_sh5A
                                                  of _ [Occ=Dead]
                                                  { (# ipv66_sh6a [Occ=Once], ipv67_sh6b #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv67_sh6b
                                                         ipv66_sh6a
                                                  of s2#11_sh6c { __DEFAULT ->
                                                  let {
                                                    sat_sh6w [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sh6w =
                                                      let {
                                                        sat_sh6v [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sh6v =
                                                          case ipv67_sh6b
                                                          of _ [Occ=Dead]
                                                          { (ww1_sh6e [Occ=Once!], ww2_sh6f [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sh6u [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sh6u =
                                                              case ww1_sh6e
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sh6h [Occ=Once] ->
                                                              let {
                                                                sat_sh6p [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sh6p =
                                                                  let {
                                                                    sat_sh6o [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sh6o =
                                                                      \ (w2_sh6i [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_sh6f
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_sh6k [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_sh6k w2_sh6i
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sh6m [Occ=Once], ww9_sh6n [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sh6m
                                                                          ww9_sh6n
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_sh6o
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sh6q [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sh6q =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sh6p } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sh6h sat_sh6q
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sh6s [Occ=Once], ww7_sh6t [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sh6s ww7_sh6t
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sh6u
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sh6v } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sh6w
                                                         GHC.Types.True
                                                         s2#11_sh6c
                                                  of _ [Occ=Dead]
                                                  { (# ipv68_sh6y [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv68_sh6y
                                                  of _ [Occ=Dead]
                                                  { (# ipv70_sh6B [Occ=Once], ipv71_sh6C [Occ=Once] #) ->
                                                  let {
                                                    sat_sh6D [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sh6D =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv71_sh6C } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_sgfk
                                                         sat_sh6D
                                                         ipv70_sh6B
                                                  of s2#12_sh6E { __DEFAULT ->
                                                  letrec {
                                                    a44_sh6F [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a44_sh6F =
                                                      \ (eta4_sh6G [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               eta4_sh6G
                                                        of _ [Occ=Dead]
                                                        { (# ipv72_sh6I [Occ=Once], ipv73_sh6J [Occ=Once] #) ->
                                                        let {
                                                          ix_sh6K [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix_sh6K =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv73_sh6J } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_sgfe
                                                               ix_sh6K
                                                               ipv72_sh6I
                                                        of s2#13_sh6L { __DEFAULT ->
                                                        let {
                                                          sat_sh6S [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_sh6S =
                                                            let {
                                                              sat_sh6R [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_sh6R =
                                                                case ix_sh6K
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_sh6N [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_sh6N
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_sh6P [Occ=Once], ww6_sh6Q [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_sh6P ww6_sh6Q
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_sh6R } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_sh6S
                                                               GHC.Types.True
                                                               s2#13_sh6L
                                                        of _ [Occ=Dead]
                                                        { (# ipv74_sh6U [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               ipv74_sh6U
                                                        of _ [Occ=Dead]
                                                        { (# ipv76_sh6X [Occ=Once], ipv77_sh6Y [Occ=Once] #) ->
                                                        let {
                                                          sat_sh6Z [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sh6Z =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv77_sh6Y } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               sat_sh6Z
                                                               ipv76_sh6X
                                                        of s2#14_sh70 { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               s2#14_sh70
                                                        of _ [Occ=Dead]
                                                        { (# ipv78_sh72 [Occ=Once*], ipv79_sh73 [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv79_sh73
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_sgfk
                                                                   ipv78_sh72
                                                            of _ [Occ=Dead]
                                                            { (# ipv80_sh76 [Occ=Once], ipv81_sh77 [Occ=Once] #) ->
                                                            let {
                                                              sat_sh78 [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_sh78 =
                                                                Automata4Coms.indices_a_init
                                                                  ipv81_sh77 } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_sgfz
                                                                   sat_sh78
                                                                   ipv80_sh76
                                                            of s2#15_sh79 { __DEFAULT ->
                                                            a17_sgGG s2#15_sh79
                                                            }
                                                            };
                                                          GHC.Types.True -> a44_sh6F ipv78_sh72
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a44_sh6F s2#12_sh6E
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                          }
                                          };
                                      a42_sh3G [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a42_sh3G =
                                        \ (eta3_sh3I [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 eta3_sh3I
                                          of _ [Occ=Dead]
                                          { (# ipv58_sh3K [Occ=Once], ipv59_sh3L [Occ=Once] #) ->
                                          let {
                                            ix_sh3M [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_sh3M = Automata4Coms.indices_a_get_ix ipv59_sh3L } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_sgfe
                                                 ix_sh3M
                                                 ipv58_sh3K
                                          of s2#8_sh3N { __DEFAULT ->
                                          let {
                                            sat_sh3U [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sh3U =
                                              let {
                                                sat_sh3T [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sh3T =
                                                  case ix_sh3M
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_sh3P [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_sh3P (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_sh3R [Occ=Once], ww6_sh3S [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_sh3R ww6_sh3S
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_sh3T } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sh3U
                                                 GHC.Types.True
                                                 s2#8_sh3N
                                          of _ [Occ=Dead]
                                          { (# ipv60_sh3W [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 ipv60_sh3W
                                          of _ [Occ=Dead]
                                          { (# ipv62_sh3Z [Occ=Once], ipv63_sh40 [Occ=Once] #) ->
                                          let {
                                            sat_sh41 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sh41 =
                                              Automata4Coms.indices_a_inc_ix ipv63_sh40 } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 sat_sh41
                                                 ipv62_sh3Z
                                          of s2#9_sh42 { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 s2#9_sh42
                                          of _ [Occ=Dead]
                                          { (# ipv64_sh44 [Occ=Once*], ipv65_sh45 [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv65_sh45
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_sgfk
                                                     ipv64_sh44
                                              of _ [Occ=Dead]
                                              { (# ipv66_sh48 [Occ=Once], ipv67_sh49 [Occ=Once] #) ->
                                              let {
                                                sat_sh4a [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sh4a =
                                                  Automata4Coms.indices_a_init ipv67_sh49 } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_sgfz
                                                     sat_sh4a
                                                     ipv66_sh48
                                              of s2#10_sh4b { __DEFAULT ->
                                              a43_sh3H s2#10_sh4b
                                              }
                                              };
                                            GHC.Types.True -> a42_sh3G ipv64_sh44
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a43_sh3H ipv56_sh3D;
                                  : i2_sh7a [Occ=Once] is2_sh7b [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_sgeQ
                                           is2_sh7b
                                           ipv56_sh3D
                                    of s2#8_sh7c { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_sgeW
                                           i2_sh7a
                                           s2#8_sh7c
                                    of s2#9_sh7d { __DEFAULT ->
                                    a28_sgWX s2#9_sh7d
                                    }
                                    }
                                }
                                }
                            }
                            }
                            }
                            };
                        a30_sgWZ [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a30_sgWZ =
                          \ (eta2_sh7e [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_sgeW eta2_sh7e
                            of _ [Occ=Dead]
                            { (# ipv54_sh7g [Occ=Once], ipv55_sh7h [Occ=Once] #) ->
                            let {
                              sat_sh7i [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sh7i = inc_rgem ipv55_sh7h } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv15_sgfb
                                   sat_sh7i
                                   ipv54_sh7g
                            of s2#8_sh7j { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb s2#8_sh7j
                            of _ [Occ=Dead]
                            { (# ipv56_sh7l [Occ=Once*], ipv57_sh7m [Occ=Once!] #) ->
                            case ipv57_sh7m
                            of _ [Occ=Dead] { GHC.Types.I# x1_sh7o [Occ=Once] ->
                            case GHC.Prim.># x1_sh7o 10 of sat_sh7p { __DEFAULT ->
                            case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_sh7p
                            of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ ipv56_sh7l
                                of _ [Occ=Dead]
                                { (# ipv58_sh7s [Occ=Once*], ipv59_sh7t [Occ=Once!] #) ->
                                case ipv59_sh7t of _ [Occ=Dead] {
                                  [] -> a14_sgsD ipv58_sh7s;
                                  : i2_sh7v [Occ=Once] is2_sh7w [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_sgeQ
                                           is2_sh7w
                                           ipv58_sh7s
                                    of s2#9_sh7x { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_sgeW
                                           i2_sh7v
                                           s2#9_sh7x
                                    of s2#10_sh7y { __DEFAULT ->
                                    a30_sgWZ s2#10_sh7y
                                    }
                                    }
                                }
                                };
                              GHC.Types.True ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb ipv56_sh7l
                                of _ [Occ=Dead]
                                { (# ipv58_sh7A [Occ=Once], ipv59_sh7B [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_sgf8
                                       ipv59_sh7B
                                       ipv58_sh7A
                                of s2#9_sh7C { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ s2#9_sh7C
                                of _ [Occ=Dead]
                                { (# ipv60_sh7E [Occ=Once*], ipv61_sh7F [Occ=Once!] #) ->
                                case ipv61_sh7F of _ [Occ=Dead] {
                                  [] -> a16_sgDa ipv60_sh7E;
                                  : i2_sh7H [Occ=Once] is2_sh7I [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_sgeQ
                                           is2_sh7I
                                           ipv60_sh7E
                                    of s2#10_sh7J { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_sgeW
                                           i2_sh7H
                                           s2#10_sh7J
                                    of s2#11_sh7K { __DEFAULT ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_sgeW s2#11_sh7K
                                    of _ [Occ=Dead]
                                    { (# ipv62_sh7M [Occ=Once], ipv63_sh7N [Occ=Once] #) ->
                                    let {
                                      sat_sh7O [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sh7O = inc_rgem ipv63_sh7N } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv15_sgfb
                                           sat_sh7O
                                           ipv62_sh7M
                                    of s2#12_sh7P { __DEFAULT ->
                                    a29_sgWY s2#12_sh7P
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                            }
                            }
                            }
                            }
                            }
                            };
                        a36_sgX5 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a36_sgX5 =
                          \ (eta2_shcT [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_shcT
                            of _ [Occ=Dead]
                            { (# ipv54_shcV [Occ=Once], ipv55_shcW [Occ=Once] #) ->
                            let {
                              ix_shcX [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_shcX = Automata4Coms.indices_a_get_ix ipv55_shcW } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_shcX
                                   ipv54_shcV
                            of s2#8_shcY { __DEFAULT ->
                            let {
                              sat_shd5 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_shd5 =
                                let {
                                  sat_shd4 [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_shd4 =
                                    case ix_shcX
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_shd0 [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_shd0 (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_shd2 [Occ=Once], ww6_shd3 [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_shd2 ww6_shd3
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_shd4 } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_shd5 GHC.Types.True s2#8_shcY
                            of _ [Occ=Dead] { (# ipv56_shd7 [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv56_shd7
                            of _ [Occ=Dead]
                            { (# ipv58_shda [Occ=Once], ipv59_shdb [Occ=Once] #) ->
                            let {
                              sat_shdc [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_shdc = Automata4Coms.indices_a_inc_ix ipv59_shdb } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_shdc
                                   ipv58_shda
                            of s2#9_shdd { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#9_shdd
                            of _ [Occ=Dead]
                            { (# ipv60_shdf [Occ=Once*], ipv61_shdg [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_shdg of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv60_shdf
                                of _ [Occ=Dead]
                                { (# ipv62_shdj [Occ=Once], ipv63_shdk [Occ=Once] #) ->
                                let {
                                  sat_shdl [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_shdl = Automata4Coms.indices_a_init ipv63_shdk } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_shdl
                                       ipv62_shdj
                                of s2#10_shdm { __DEFAULT ->
                                a30_sgWZ s2#10_shdm
                                }
                                };
                              GHC.Types.True -> a36_sgX5 ipv60_shdf
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a37_sgX6 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a37_sgX6 =
                          \ (eta2_shdn [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_shdn
                            of _ [Occ=Dead]
                            { (# ipv54_shdp [Occ=Once], ipv55_shdq [Occ=Once] #) ->
                            let {
                              ix_shdr [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_shdr = Automata4Coms.indices_a_get_ix ipv55_shdq } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_shdr
                                   ipv54_shdp
                            of s2#8_shds { __DEFAULT ->
                            let {
                              sat_shdz [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_shdz =
                                let {
                                  sat_shdy [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_shdy =
                                    case ix_shdr
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_shdu [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_shdu (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_shdw [Occ=Once], ww6_shdx [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_shdw ww6_shdx
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_shdy } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_shdz GHC.Types.True s2#8_shds
                            of _ [Occ=Dead] { (# ipv56_shdB [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv56_shdB
                            of _ [Occ=Dead]
                            { (# ipv58_shdE [Occ=Once], ipv59_shdF [Occ=Once] #) ->
                            let {
                              sat_shdG [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_shdG = Automata4Coms.indices_a_inc_ix ipv59_shdF } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_shdG
                                   ipv58_shdE
                            of s2#9_shdH { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#9_shdH
                            of _ [Occ=Dead]
                            { (# ipv60_shdJ [Occ=Once*], ipv61_shdK [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_shdK of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv60_shdJ
                                of _ [Occ=Dead]
                                { (# ipv62_shdN [Occ=Once], ipv63_shdO [Occ=Once] #) ->
                                let {
                                  sat_shdP [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_shdP = Automata4Coms.indices_a_init ipv63_shdO } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_shdP
                                       ipv62_shdN
                                of s2#10_shdQ { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_sgeZ s2#10_shdQ
                                of _ [Occ=Dead] { (# ipv64_shdS [Occ=Once], ipv65_shdT #) ->
                                let {
                                  sat_shdU [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_shdU = (ipv65_shdT, ipv65_shdT) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       sat_shdU
                                       ipv64_shdS
                                of s2#11_shdV { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       s2#11_shdV
                                of _ [Occ=Dead]
                                { (# ipv66_shdX [Occ=Once], ipv67_shdY [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       ipv66_shdX
                                of _ [Occ=Dead]
                                { (# ipv68_she0 [Occ=Once*], ipv69_she1 [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv67_shdY ipv69_she1
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_sgf2
                                           ipv68_she0
                                    of _ [Occ=Dead] { (# ipv70_she4 [Occ=Once], ipv71_she5 #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv71_she5
                                           ipv70_she4
                                    of s2#12_she6 { __DEFAULT ->
                                    let {
                                      sat_sheq [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sheq =
                                        let {
                                          sat_shep [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_shep =
                                            case ipv71_she5
                                            of _ [Occ=Dead]
                                            { (ww1_she8 [Occ=Once!], ww2_she9 [Occ=OnceL!]) ->
                                            let {
                                              sat_sheo [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sheo =
                                                case ww1_she8
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sheb [Occ=Once] ->
                                                let {
                                                  sat_shej [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_shej =
                                                    let {
                                                      sat_shei [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_shei =
                                                        \ (w2_shec [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_she9
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_shee [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_shee w2_shec
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sheg [Occ=Once], ww9_sheh [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sheg ww9_sheh
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_shei
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_shek [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_shek =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_shej } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sheb sat_shek
                                                of _ [Occ=Dead]
                                                { (# ww6_shem [Occ=Once], ww7_shen [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_shem ww7_shen
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sheo
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_shep } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_sheq
                                           GHC.Types.True
                                           s2#12_she6
                                    of _ [Occ=Dead] { (# ipv72_shes [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv72_shes
                                    of _ [Occ=Dead]
                                    { (# ipv74_shev [Occ=Once], ipv75_shew [Occ=Once] #) ->
                                    let {
                                      sat_shex [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_shex =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv75_shew } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_shex
                                           ipv74_shev
                                    of s2#13_shey { __DEFAULT ->
                                    a36_sgX5 s2#13_shey
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_sgf5
                                           ipv68_she0
                                    of _ [Occ=Dead] { (# ipv70_sheA [Occ=Once], ipv71_sheB #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv71_sheB
                                           ipv70_sheA
                                    of s2#12_sheC { __DEFAULT ->
                                    let {
                                      sat_sheW [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sheW =
                                        let {
                                          sat_sheV [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sheV =
                                            case ipv71_sheB
                                            of _ [Occ=Dead]
                                            { (ww1_sheE [Occ=Once!], ww2_sheF [Occ=OnceL!]) ->
                                            let {
                                              sat_sheU [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sheU =
                                                case ww1_sheE
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sheH [Occ=Once] ->
                                                let {
                                                  sat_sheP [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sheP =
                                                    let {
                                                      sat_sheO [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sheO =
                                                        \ (w2_sheI [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sheF
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sheK [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sheK w2_sheI
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sheM [Occ=Once], ww9_sheN [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sheM ww9_sheN
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sheO
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sheQ [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sheQ =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sheP } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sheH sat_sheQ
                                                of _ [Occ=Dead]
                                                { (# ww6_sheS [Occ=Once], ww7_sheT [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sheS ww7_sheT
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sheU
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sheV } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_sheW
                                           GHC.Types.True
                                           s2#12_sheC
                                    of _ [Occ=Dead] { (# ipv72_sheY [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv72_sheY
                                    of _ [Occ=Dead]
                                    { (# ipv74_shf1 [Occ=Once], ipv75_shf2 [Occ=Once] #) ->
                                    let {
                                      sat_shf3 [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_shf3 =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv75_shf2 } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_shf3
                                           ipv74_shf1
                                    of s2#13_shf4 { __DEFAULT ->
                                    a24_sgWT s2#13_shf4
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a37_sgX6 ipv60_shdJ
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a38_sgX7 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a38_sgX7 =
                          \ (eta2_shf5 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_shf5
                            of _ [Occ=Dead]
                            { (# ipv54_shf7 [Occ=Once], ipv55_shf8 [Occ=Once] #) ->
                            let {
                              ix_shf9 [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_shf9 = Automata4Coms.indices_a_get_ix ipv55_shf8 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_shf9
                                   ipv54_shf7
                            of s2#8_shfa { __DEFAULT ->
                            let {
                              sat_shfh [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_shfh =
                                let {
                                  sat_shfg [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_shfg =
                                    case ix_shf9
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_shfc [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_shfc (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_shfe [Occ=Once], ww6_shff [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_shfe ww6_shff
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_shfg } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_shfh GHC.Types.True s2#8_shfa
                            of _ [Occ=Dead] { (# ipv56_shfj [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv56_shfj
                            of _ [Occ=Dead]
                            { (# ipv58_shfm [Occ=Once], ipv59_shfn [Occ=Once] #) ->
                            let {
                              sat_shfo [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_shfo = Automata4Coms.indices_a_inc_ix ipv59_shfn } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_shfo
                                   ipv58_shfm
                            of s2#9_shfp { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#9_shfp
                            of _ [Occ=Dead]
                            { (# ipv60_shfr [Occ=Once*], ipv61_shfs [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_shfs of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv60_shfr
                                of _ [Occ=Dead]
                                { (# ipv62_shfv [Occ=Once], ipv63_shfw [Occ=Once] #) ->
                                let {
                                  sat_shfx [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_shfx = Automata4Coms.indices_a_init ipv63_shfw } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_shfx
                                       ipv62_shfv
                                of s2#10_shfy { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb s2#10_shfy
                                of _ [Occ=Dead]
                                { (# ipv64_shfA [Occ=Once], ipv65_shfB [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_sgf8
                                       ipv65_shfB
                                       ipv64_shfA
                                of s2#11_shfC { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_sgf8 s2#11_shfC
                                of _ [Occ=Dead] { (# ipv66_shfE [Occ=Once], ipv67_shfF #) ->
                                let {
                                  sat_shfG [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_shfG = (ipv67_shfF, ipv67_shfF) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       sat_shfG
                                       ipv66_shfE
                                of s2#12_shfH { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       s2#12_shfH
                                of _ [Occ=Dead]
                                { (# ipv68_shfJ [Occ=Once], ipv69_shfK [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       ipv68_shfJ
                                of _ [Occ=Dead]
                                { (# ipv70_shfM [Occ=Once*], ipv71_shfN [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv69_shfK ipv71_shfN
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_sgf2
                                           ipv70_shfM
                                    of _ [Occ=Dead] { (# ipv72_shfQ [Occ=Once], ipv73_shfR #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv73_shfR
                                           ipv72_shfQ
                                    of s2#13_shfS { __DEFAULT ->
                                    let {
                                      sat_shgc [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_shgc =
                                        let {
                                          sat_shgb [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_shgb =
                                            case ipv73_shfR
                                            of _ [Occ=Dead]
                                            { (ww1_shfU [Occ=Once!], ww2_shfV [Occ=OnceL!]) ->
                                            let {
                                              sat_shga [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_shga =
                                                case ww1_shfU
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_shfX [Occ=Once] ->
                                                let {
                                                  sat_shg5 [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_shg5 =
                                                    let {
                                                      sat_shg4 [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_shg4 =
                                                        \ (w2_shfY [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_shfV
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_shg0 [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_shg0 w2_shfY
                                                          of _ [Occ=Dead]
                                                          { (# ww8_shg2 [Occ=Once], ww9_shg3 [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_shg2 ww9_shg3
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_shg4
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_shg6 [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_shg6 =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_shg5 } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_shfX sat_shg6
                                                of _ [Occ=Dead]
                                                { (# ww6_shg8 [Occ=Once], ww7_shg9 [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_shg8 ww7_shg9
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_shga
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_shgb } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_shgc
                                           GHC.Types.True
                                           s2#13_shfS
                                    of _ [Occ=Dead] { (# ipv74_shge [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv74_shge
                                    of _ [Occ=Dead]
                                    { (# ipv76_shgh [Occ=Once], ipv77_shgi [Occ=Once] #) ->
                                    let {
                                      sat_shgj [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_shgj =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv77_shgi } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_shgj
                                           ipv76_shgh
                                    of s2#14_shgk { __DEFAULT ->
                                    a37_sgX6 s2#14_shgk
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_sgf5
                                           ipv70_shfM
                                    of _ [Occ=Dead] { (# ipv72_shgm [Occ=Once], ipv73_shgn #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv73_shgn
                                           ipv72_shgm
                                    of s2#13_shgo { __DEFAULT ->
                                    let {
                                      sat_shgI [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_shgI =
                                        let {
                                          sat_shgH [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_shgH =
                                            case ipv73_shgn
                                            of _ [Occ=Dead]
                                            { (ww1_shgq [Occ=Once!], ww2_shgr [Occ=OnceL!]) ->
                                            let {
                                              sat_shgG [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_shgG =
                                                case ww1_shgq
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_shgt [Occ=Once] ->
                                                let {
                                                  sat_shgB [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_shgB =
                                                    let {
                                                      sat_shgA [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_shgA =
                                                        \ (w2_shgu [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_shgr
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_shgw [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_shgw w2_shgu
                                                          of _ [Occ=Dead]
                                                          { (# ww8_shgy [Occ=Once], ww9_shgz [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_shgy ww9_shgz
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_shgA
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_shgC [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_shgC =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_shgB } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_shgt sat_shgC
                                                of _ [Occ=Dead]
                                                { (# ww6_shgE [Occ=Once], ww7_shgF [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_shgE ww7_shgF
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_shgG
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_shgH } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_shgI
                                           GHC.Types.True
                                           s2#13_shgo
                                    of _ [Occ=Dead] { (# ipv74_shgK [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv74_shgK
                                    of _ [Occ=Dead]
                                    { (# ipv76_shgN [Occ=Once], ipv77_shgO [Occ=Once] #) ->
                                    let {
                                      sat_shgP [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_shgP =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv77_shgO } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_shgP
                                           ipv76_shgN
                                    of s2#14_shgQ { __DEFAULT ->
                                    a35_sgX4 s2#14_shgQ
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a38_sgX7 ipv60_shfr
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a41_sgXa [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a41_sgXa =
                          \ (eta2_shjc [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_sgeT eta2_shjc
                            of _ [Occ=Dead]
                            { (# ipv54_shje [Occ=Once*], ipv55_shjf [Occ=Once!] #) ->
                            case ipv55_shjf of _ [Occ=Dead] {
                              [] ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_sgf8 ipv54_shje
                                of _ [Occ=Dead] { (# ipv56_shji [Occ=Once], ipv57_shjj #) ->
                                let {
                                  sat_shjk [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_shjk = (ipv57_shjj, ipv57_shjj) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       sat_shjk
                                       ipv56_shji
                                of s2#8_shjl { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       s2#8_shjl
                                of _ [Occ=Dead]
                                { (# ipv58_shjn [Occ=Once], ipv59_shjo [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       ipv58_shjn
                                of _ [Occ=Dead]
                                { (# ipv60_shjq [Occ=Once*], ipv61_shjr [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv59_shjo ipv61_shjr
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_sgf2
                                           ipv60_shjq
                                    of _ [Occ=Dead] { (# ipv62_shju [Occ=Once], ipv63_shjv #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv63_shjv
                                           ipv62_shju
                                    of s2#9_shjw { __DEFAULT ->
                                    let {
                                      sat_shjQ [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_shjQ =
                                        let {
                                          sat_shjP [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_shjP =
                                            case ipv63_shjv
                                            of _ [Occ=Dead]
                                            { (ww1_shjy [Occ=Once!], ww2_shjz [Occ=OnceL!]) ->
                                            let {
                                              sat_shjO [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_shjO =
                                                case ww1_shjy
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_shjB [Occ=Once] ->
                                                let {
                                                  sat_shjJ [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_shjJ =
                                                    let {
                                                      sat_shjI [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_shjI =
                                                        \ (w2_shjC [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_shjz
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_shjE [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_shjE w2_shjC
                                                          of _ [Occ=Dead]
                                                          { (# ww8_shjG [Occ=Once], ww9_shjH [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_shjG ww9_shjH
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_shjI
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_shjK [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_shjK =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_shjJ } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_shjB sat_shjK
                                                of _ [Occ=Dead]
                                                { (# ww6_shjM [Occ=Once], ww7_shjN [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_shjM ww7_shjN
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_shjO
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_shjP } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout sat_shjQ GHC.Types.True s2#9_shjw
                                    of _ [Occ=Dead] { (# ipv64_shjS [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv64_shjS
                                    of _ [Occ=Dead]
                                    { (# ipv66_shjV [Occ=Once], ipv67_shjW [Occ=Once] #) ->
                                    let {
                                      sat_shjX [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_shjX =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_shjW } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_shjX
                                           ipv66_shjV
                                    of s2#10_shjY { __DEFAULT ->
                                    letrec {
                                      a42_shjZ [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a42_shjZ =
                                        \ (eta3_shk0 [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 eta3_shk0
                                          of _ [Occ=Dead]
                                          { (# ipv68_shk2 [Occ=Once], ipv69_shk3 [Occ=Once] #) ->
                                          let {
                                            ix_shk4 [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_shk4 = Automata4Coms.indices_a_get_ix ipv69_shk3 } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_sgfe
                                                 ix_shk4
                                                 ipv68_shk2
                                          of s2#11_shk5 { __DEFAULT ->
                                          let {
                                            sat_shkc [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_shkc =
                                              let {
                                                sat_shkb [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_shkb =
                                                  case ix_shk4
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_shk7 [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_shk7 (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_shk9 [Occ=Once], ww6_shka [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_shk9 ww6_shka
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_shkb } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_shkc
                                                 GHC.Types.True
                                                 s2#11_shk5
                                          of _ [Occ=Dead]
                                          { (# ipv70_shke [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 ipv70_shke
                                          of _ [Occ=Dead]
                                          { (# ipv72_shkh [Occ=Once], ipv73_shki [Occ=Once] #) ->
                                          let {
                                            sat_shkj [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_shkj =
                                              Automata4Coms.indices_a_inc_ix ipv73_shki } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 sat_shkj
                                                 ipv72_shkh
                                          of s2#12_shkk { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 s2#12_shkk
                                          of _ [Occ=Dead]
                                          { (# ipv74_shkm [Occ=Once*], ipv75_shkn [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_shkn
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_sgfk
                                                     ipv74_shkm
                                              of _ [Occ=Dead]
                                              { (# ipv76_shkq [Occ=Once], ipv77_shkr [Occ=Once] #) ->
                                              let {
                                                sat_shks [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_shks =
                                                  Automata4Coms.indices_a_init ipv77_shkr } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_sgfz
                                                     sat_shks
                                                     ipv76_shkq
                                              of s2#13_shkt { __DEFAULT ->
                                              a19_sgVD s2#13_shkt
                                              }
                                              };
                                            GHC.Types.True -> a42_shjZ ipv74_shkm
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a42_shjZ s2#10_shjY
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_sgf5
                                           ipv60_shjq
                                    of _ [Occ=Dead] { (# ipv62_shkv [Occ=Once], ipv63_shkw #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv63_shkw
                                           ipv62_shkv
                                    of s2#9_shkx { __DEFAULT ->
                                    let {
                                      sat_shkR [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_shkR =
                                        let {
                                          sat_shkQ [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_shkQ =
                                            case ipv63_shkw
                                            of _ [Occ=Dead]
                                            { (ww1_shkz [Occ=Once!], ww2_shkA [Occ=OnceL!]) ->
                                            let {
                                              sat_shkP [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_shkP =
                                                case ww1_shkz
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_shkC [Occ=Once] ->
                                                let {
                                                  sat_shkK [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_shkK =
                                                    let {
                                                      sat_shkJ [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_shkJ =
                                                        \ (w2_shkD [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_shkA
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_shkF [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_shkF w2_shkD
                                                          of _ [Occ=Dead]
                                                          { (# ww8_shkH [Occ=Once], ww9_shkI [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_shkH ww9_shkI
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_shkJ
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_shkL [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_shkL =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_shkK } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_shkC sat_shkL
                                                of _ [Occ=Dead]
                                                { (# ww6_shkN [Occ=Once], ww7_shkO [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_shkN ww7_shkO
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_shkP
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_shkQ } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout sat_shkR GHC.Types.True s2#9_shkx
                                    of _ [Occ=Dead] { (# ipv64_shkT [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv64_shkT
                                    of _ [Occ=Dead]
                                    { (# ipv66_shkW [Occ=Once], ipv67_shkX [Occ=Once] #) ->
                                    let {
                                      sat_shkY [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_shkY =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_shkX } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_shkY
                                           ipv66_shkW
                                    of s2#10_shkZ { __DEFAULT ->
                                    letrec {
                                      a42_shl0 [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a42_shl0 =
                                        \ (eta3_shl1 [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 eta3_shl1
                                          of _ [Occ=Dead]
                                          { (# ipv68_shl3 [Occ=Once], ipv69_shl4 [Occ=Once] #) ->
                                          let {
                                            ix_shl5 [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_shl5 = Automata4Coms.indices_a_get_ix ipv69_shl4 } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_sgfe
                                                 ix_shl5
                                                 ipv68_shl3
                                          of s2#11_shl6 { __DEFAULT ->
                                          let {
                                            sat_shld [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_shld =
                                              let {
                                                sat_shlc [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_shlc =
                                                  case ix_shl5
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_shl8 [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_shl8 (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_shla [Occ=Once], ww6_shlb [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_shla ww6_shlb
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_shlc } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_shld
                                                 GHC.Types.True
                                                 s2#11_shl6
                                          of _ [Occ=Dead]
                                          { (# ipv70_shlf [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 ipv70_shlf
                                          of _ [Occ=Dead]
                                          { (# ipv72_shli [Occ=Once], ipv73_shlj [Occ=Once] #) ->
                                          let {
                                            sat_shlk [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_shlk =
                                              Automata4Coms.indices_a_inc_ix ipv73_shlj } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 sat_shlk
                                                 ipv72_shli
                                          of s2#12_shll { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_sgfz
                                                 s2#12_shll
                                          of _ [Occ=Dead]
                                          { (# ipv74_shln [Occ=Once*], ipv75_shlo [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_shlo
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_sgfk
                                                     ipv74_shln
                                              of _ [Occ=Dead]
                                              { (# ipv76_shlr [Occ=Once], ipv77_shls [Occ=Once] #) ->
                                              let {
                                                sat_shlt [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_shlt =
                                                  Automata4Coms.indices_a_init ipv77_shls } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_sgfz
                                                     sat_shlt
                                                     ipv76_shlr
                                              of s2#13_shlu { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv15_sgfb
                                                     s2#13_shlu
                                              of _ [Occ=Dead]
                                              { (# ipv78_shlw [Occ=Once], ipv79_shlx [Occ=Once] #) ->
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv13_sgf8
                                                     ipv79_shlx
                                                     ipv78_shlw
                                              of s2#14_shly { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv13_sgf8
                                                     s2#14_shly
                                              of _ [Occ=Dead]
                                              { (# ipv80_shlA [Occ=Once], ipv81_shlB #) ->
                                              let {
                                                sat_shlC [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_shlC = (ipv81_shlB, ipv81_shlB) } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_sgf5
                                                     sat_shlC
                                                     ipv80_shlA
                                              of s2#15_shlD { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_sgf5
                                                     s2#15_shlD
                                              of _ [Occ=Dead]
                                              { (# ipv82_shlF [Occ=Once], ipv83_shlG [Occ=Once] #) ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_sgf2
                                                     ipv82_shlF
                                              of _ [Occ=Dead]
                                              { (# ipv84_shlI [Occ=Once*], ipv85_shlJ [Occ=Once] #) ->
                                              case Automata4Coms.merge_a_le_pair
                                                     @ GHC.Types.Int ipv83_shlG ipv85_shlJ
                                              of _ [Occ=Dead] {
                                                GHC.Types.False ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv9_sgf2
                                                         ipv84_shlI
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_shlM [Occ=Once], ipv87_shlN #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv87_shlN
                                                         ipv86_shlM
                                                  of s2#16_shlO { __DEFAULT ->
                                                  let {
                                                    sat_shm8 [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_shm8 =
                                                      let {
                                                        sat_shm7 [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_shm7 =
                                                          case ipv87_shlN
                                                          of _ [Occ=Dead]
                                                          { (ww1_shlQ [Occ=Once!], ww2_shlR [Occ=OnceL!]) ->
                                                          let {
                                                            sat_shm6 [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_shm6 =
                                                              case ww1_shlQ
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_shlT [Occ=Once] ->
                                                              let {
                                                                sat_shm1 [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_shm1 =
                                                                  let {
                                                                    sat_shm0 [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_shm0 =
                                                                      \ (w2_shlU [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_shlR
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_shlW [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_shlW w2_shlU
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_shlY [Occ=Once], ww9_shlZ [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_shlY
                                                                          ww9_shlZ
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_shm0
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_shm2 [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_shm2 =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_shm1 } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_shlT sat_shm2
                                                              of _ [Occ=Dead]
                                                              { (# ww6_shm4 [Occ=Once], ww7_shm5 [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_shm4 ww7_shm5
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_shm6
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_shm7 } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_shm8
                                                         GHC.Types.True
                                                         s2#16_shlO
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_shma [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv88_shma
                                                  of _ [Occ=Dead]
                                                  { (# ipv90_shmd [Occ=Once], ipv91_shme [Occ=Once] #) ->
                                                  let {
                                                    sat_shmf [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_shmf =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv91_shme } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_sgfk
                                                         sat_shmf
                                                         ipv90_shmd
                                                  of s2#17_shmg { __DEFAULT ->
                                                  letrec {
                                                    a43_shmh [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a43_shmh =
                                                      \ (eta4_shmi [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               eta4_shmi
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_shmk [Occ=Once], ipv93_shml [Occ=Once] #) ->
                                                        let {
                                                          ix1_shmm [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_shmm =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv93_shml } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_sgfe
                                                               ix1_shmm
                                                               ipv92_shmk
                                                        of s2#18_shmn { __DEFAULT ->
                                                        let {
                                                          sat_shmu [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_shmu =
                                                            let {
                                                              sat_shmt [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_shmt =
                                                                case ix1_shmm
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_shmp [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_shmp
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_shmr [Occ=Once], ww6_shms [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_shmr ww6_shms
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_shmt } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_shmu
                                                               GHC.Types.True
                                                               s2#18_shmn
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_shmw [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               ipv94_shmw
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_shmz [Occ=Once], ipv97_shmA [Occ=Once] #) ->
                                                        let {
                                                          sat_shmB [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_shmB =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv97_shmA } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               sat_shmB
                                                               ipv96_shmz
                                                        of s2#19_shmC { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               s2#19_shmC
                                                        of _ [Occ=Dead]
                                                        { (# ipv98_shmE [Occ=Once*], ipv99_shmF [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv99_shmF
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_sgfk
                                                                   ipv98_shmE
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_shmI [Occ=Once], ipv101_shmJ [Occ=Once] #) ->
                                                            let {
                                                              sat_shmK [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_shmK =
                                                                Automata4Coms.indices_a_init
                                                                  ipv101_shmJ } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_sgfz
                                                                   sat_shmK
                                                                   ipv100_shmI
                                                            of s2#20_shmL { __DEFAULT ->
                                                            a18_sgUA s2#20_shmL
                                                            }
                                                            };
                                                          GHC.Types.True -> a43_shmh ipv98_shmE
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a43_shmh s2#17_shmg
                                                  }
                                                  }
                                                  }
                                                  }
                                                  };
                                                GHC.Types.True ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv11_sgf5
                                                         ipv84_shlI
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_shmN [Occ=Once], ipv87_shmO #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv87_shmO
                                                         ipv86_shmN
                                                  of s2#16_shmP { __DEFAULT ->
                                                  let {
                                                    sat_shn9 [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_shn9 =
                                                      let {
                                                        sat_shn8 [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_shn8 =
                                                          case ipv87_shmO
                                                          of _ [Occ=Dead]
                                                          { (ww1_shmR [Occ=Once!], ww2_shmS [Occ=OnceL!]) ->
                                                          let {
                                                            sat_shn7 [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_shn7 =
                                                              case ww1_shmR
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_shmU [Occ=Once] ->
                                                              let {
                                                                sat_shn2 [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_shn2 =
                                                                  let {
                                                                    sat_shn1 [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_shn1 =
                                                                      \ (w2_shmV [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_shmS
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_shmX [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_shmX w2_shmV
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_shmZ [Occ=Once], ww9_shn0 [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_shmZ
                                                                          ww9_shn0
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_shn1
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_shn3 [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_shn3 =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_shn2 } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_shmU sat_shn3
                                                              of _ [Occ=Dead]
                                                              { (# ww6_shn5 [Occ=Once], ww7_shn6 [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_shn5 ww7_shn6
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_shn7
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_shn8 } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_shn9
                                                         GHC.Types.True
                                                         s2#16_shmP
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_shnb [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_sgfh
                                                         ipv88_shnb
                                                  of _ [Occ=Dead]
                                                  { (# ipv90_shne [Occ=Once], ipv91_shnf [Occ=Once] #) ->
                                                  let {
                                                    sat_shng [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_shng =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv91_shnf } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_sgfk
                                                         sat_shng
                                                         ipv90_shne
                                                  of s2#17_shnh { __DEFAULT ->
                                                  letrec {
                                                    a43_shni [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a43_shni =
                                                      \ (eta4_shnj [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               eta4_shnj
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_shnl [Occ=Once], ipv93_shnm [Occ=Once] #) ->
                                                        let {
                                                          ix1_shnn [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_shnn =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv93_shnm } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_sgfe
                                                               ix1_shnn
                                                               ipv92_shnl
                                                        of s2#18_shno { __DEFAULT ->
                                                        let {
                                                          sat_shnv [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_shnv =
                                                            let {
                                                              sat_shnu [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_shnu =
                                                                case ix1_shnn
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_shnq [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_shnq
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_shns [Occ=Once], ww6_shnt [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_shns ww6_shnt
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_shnu } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_shnv
                                                               GHC.Types.True
                                                               s2#18_shno
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_shnx [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               ipv94_shnx
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_shnA [Occ=Once], ipv97_shnB [Occ=Once] #) ->
                                                        let {
                                                          sat_shnC [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_shnC =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv97_shnB } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               sat_shnC
                                                               ipv96_shnA
                                                        of s2#19_shnD { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_sgfz
                                                               s2#19_shnD
                                                        of _ [Occ=Dead]
                                                        { (# ipv98_shnF [Occ=Once*], ipv99_shnG [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv99_shnG
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_sgfk
                                                                   ipv98_shnF
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_shnJ [Occ=Once], ipv101_shnK [Occ=Once] #) ->
                                                            let {
                                                              sat_shnL [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_shnL =
                                                                Automata4Coms.indices_a_init
                                                                  ipv101_shnK } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_sgfz
                                                                   sat_shnL
                                                                   ipv100_shnJ
                                                            of s2#20_shnM { __DEFAULT ->
                                                            letrec {
                                                              a45_shnO [Occ=LoopBreaker]
                                                                :: GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                   -> (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         () #)
                                                              [LclId,
                                                               Arity=1,
                                                               Str=DmdType <L,U>,
                                                               Unf=OtherCon []]
                                                              a45_shnO =
                                                                \ (eta5_shor [Occ=Once]
                                                                     :: GHC.Prim.State#
                                                                          GHC.Prim.RealWorld) ->
                                                                  case GHC.Prim.readMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ GHC.Types.Int
                                                                         ipv5_sgeW
                                                                         eta5_shor
                                                                  of _ [Occ=Dead]
                                                                  { (# ipv102_shot [Occ=Once], ipv103_shou [Occ=Once] #) ->
                                                                  let {
                                                                    sat_shov [Occ=Once]
                                                                      :: GHC.Types.Int
                                                                    [LclId, Str=DmdType]
                                                                    sat_shov =
                                                                      inc_rgem ipv103_shou } in
                                                                  case GHC.Prim.writeMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ GHC.Types.Int
                                                                         ipv15_sgfb
                                                                         sat_shov
                                                                         ipv102_shot
                                                                  of s2#21_show { __DEFAULT ->
                                                                  case GHC.Prim.readMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ GHC.Types.Int
                                                                         ipv15_sgfb
                                                                         s2#21_show
                                                                  of _ [Occ=Dead]
                                                                  { (# ipv104_shoy [Occ=Once*], ipv105_shoz [Occ=Once!] #) ->
                                                                  case ipv105_shoz
                                                                  of _ [Occ=Dead]
                                                                  { GHC.Types.I# x1_shoB [Occ=Once] ->
                                                                  case GHC.Prim.># x1_shoB 10
                                                                  of sat_shoC { __DEFAULT ->
                                                                  case GHC.Prim.tagToEnum#
                                                                         @ GHC.Types.Bool sat_shoC
                                                                  of _ [Occ=Dead] {
                                                                    GHC.Types.False ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ [GHC.Types.Int]
                                                                             ipv1_sgeQ
                                                                             ipv104_shoy
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv106_shoF [Occ=Once*], ipv107_shoG [Occ=Once!] #) ->
                                                                      case ipv107_shoG
                                                                      of _ [Occ=Dead] {
                                                                        [] -> a13_sgrA ipv106_shoF;
                                                                        : i2_shoI [Occ=Once]
                                                                          is2_shoJ [Occ=Once] ->
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ [GHC.Types.Int]
                                                                                 ipv1_sgeQ
                                                                                 is2_shoJ
                                                                                 ipv106_shoF
                                                                          of s2#22_shoK
                                                                          { __DEFAULT ->
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ GHC.Types.Int
                                                                                 ipv5_sgeW
                                                                                 i2_shoI
                                                                                 s2#22_shoK
                                                                          of s2#23_shoL
                                                                          { __DEFAULT ->
                                                                          a45_shnO s2#23_shoL
                                                                          }
                                                                          }
                                                                      }
                                                                      };
                                                                    GHC.Types.True ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ GHC.Types.Int
                                                                             ipv15_sgfb
                                                                             ipv104_shoy
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv106_shoN [Occ=Once], ipv107_shoO [Occ=Once] #) ->
                                                                      case GHC.Prim.writeMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ GHC.Types.Int
                                                                             ipv13_sgf8
                                                                             ipv107_shoO
                                                                             ipv106_shoN
                                                                      of s2#22_shoP { __DEFAULT ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ GHC.Types.Int
                                                                             ipv13_sgf8
                                                                             s2#22_shoP
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv108_shoR [Occ=Once], ipv109_shoS #) ->
                                                                      let {
                                                                        sat_shoT [Occ=Once]
                                                                          :: (GHC.Types.Int,
                                                                              GHC.Types.Int)
                                                                        [LclId, Str=DmdType]
                                                                        sat_shoT =
                                                                          (ipv109_shoS,
                                                                           ipv109_shoS) } in
                                                                      case GHC.Prim.writeMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv11_sgf5
                                                                             sat_shoT
                                                                             ipv108_shoR
                                                                      of s2#23_shoU { __DEFAULT ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv11_sgf5
                                                                             s2#23_shoU
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv110_shoW [Occ=Once], ipv111_shoX [Occ=Once] #) ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv9_sgf2
                                                                             ipv110_shoW
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv112_shoZ [Occ=Once*], ipv113_shp0 [Occ=Once] #) ->
                                                                      case Automata4Coms.merge_a_le_pair
                                                                             @ GHC.Types.Int
                                                                             ipv111_shoX
                                                                             ipv113_shp0
                                                                      of _ [Occ=Dead] {
                                                                        GHC.Types.False ->
                                                                          case GHC.Prim.readMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv9_sgf2
                                                                                 ipv112_shoZ
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv114_shp3 [Occ=Once], ipv115_shp4 #) ->
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv19_sgfh
                                                                                 ipv115_shp4
                                                                                 ipv114_shp3
                                                                          of s2#24_shp5
                                                                          { __DEFAULT ->
                                                                          let {
                                                                            sat_shpp [Occ=Once,
                                                                                      Dmd=<L,1*U>]
                                                                              :: GHC.Base.String
                                                                            [LclId, Str=DmdType]
                                                                            sat_shpp =
                                                                              let {
                                                                                sat_shpo [Occ=Once]
                                                                                  :: [GHC.Types.Char]
                                                                                [LclId, Str=DmdType]
                                                                                sat_shpo =
                                                                                  case ipv115_shp4
                                                                                  of _ [Occ=Dead]
                                                                                  { (ww1_shp7 [Occ=Once!], ww2_shp8 [Occ=OnceL!]) ->
                                                                                  let {
                                                                                    sat_shpn [Occ=Once]
                                                                                      :: [GHC.Types.Char]
                                                                                    [LclId,
                                                                                     Str=DmdType]
                                                                                    sat_shpn =
                                                                                      case ww1_shp7
                                                                                      of _ [Occ=Dead]
                                                                                      { GHC.Types.I# ww4_shpa [Occ=Once] ->
                                                                                      let {
                                                                                        sat_shpi [Occ=Once]
                                                                                          :: [GHC.Types.Char]
                                                                                        [LclId,
                                                                                         Str=DmdType]
                                                                                        sat_shpi =
                                                                                          let {
                                                                                            sat_shph [Occ=Once]
                                                                                              :: GHC.Base.String
                                                                                                 -> GHC.Base.String
                                                                                            [LclId,
                                                                                             Str=DmdType]
                                                                                            sat_shph =
                                                                                              \ (w2_shpb [Occ=Once]
                                                                                                   :: GHC.Base.String) ->
                                                                                                case ww2_shp8
                                                                                                of _ [Occ=Dead]
                                                                                                { GHC.Types.I# ww6_shpd [Occ=Once] ->
                                                                                                case GHC.Show.$wshowSignedInt
                                                                                                       0
                                                                                                       ww6_shpd
                                                                                                       w2_shpb
                                                                                                of _ [Occ=Dead]
                                                                                                { (# ww8_shpf [Occ=Once], ww9_shpg [Occ=Once] #) ->
                                                                                                GHC.Types.:
                                                                                                  @ GHC.Types.Char
                                                                                                  ww8_shpf
                                                                                                  ww9_shpg
                                                                                                }
                                                                                                } } in
                                                                                          GHC.List.foldr1_$sfoldr1
                                                                                            @ (GHC.Base.String
                                                                                               -> GHC.Base.String)
                                                                                            GHC.Show.$fShow(,)1
                                                                                            sat_shph
                                                                                            (GHC.Types.[]
                                                                                               @ GHC.Show.ShowS)
                                                                                            lvl4_rger } in
                                                                                      let {
                                                                                        sat_shpj [Occ=Once]
                                                                                          :: GHC.Base.String
                                                                                        [LclId,
                                                                                         Str=DmdType]
                                                                                        sat_shpj =
                                                                                          GHC.Types.:
                                                                                            @ GHC.Types.Char
                                                                                            GHC.Show.showList__1
                                                                                            sat_shpi } in
                                                                                      case GHC.Show.$wshowSignedInt
                                                                                             0
                                                                                             ww4_shpa
                                                                                             sat_shpj
                                                                                      of _ [Occ=Dead]
                                                                                      { (# ww6_shpl [Occ=Once], ww7_shpm [Occ=Once] #) ->
                                                                                      GHC.Types.:
                                                                                        @ GHC.Types.Char
                                                                                        ww6_shpl
                                                                                        ww7_shpm
                                                                                      }
                                                                                      } } in
                                                                                  GHC.Types.:
                                                                                    @ GHC.Types.Char
                                                                                    GHC.Show.shows13
                                                                                    sat_shpn
                                                                                  } } in
                                                                              GHC.CString.unpackAppendCString#
                                                                                "merg: "#
                                                                                sat_shpo } in
                                                                          case GHC.IO.Handle.Text.hPutStr2
                                                                                 GHC.IO.Handle.FD.stdout
                                                                                 sat_shpp
                                                                                 GHC.Types.True
                                                                                 s2#24_shp5
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv116_shpr [Occ=Once], _ [Occ=Dead] #) ->
                                                                          case GHC.Prim.readMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv19_sgfh
                                                                                 ipv116_shpr
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv118_shpu [Occ=Once], ipv119_shpv [Occ=Once] #) ->
                                                                          let {
                                                                            sat_shpw [Occ=Once]
                                                                              :: GHC.Types.Int
                                                                            [LclId, Str=DmdType]
                                                                            sat_shpw =
                                                                              Data.Tuple.snd
                                                                                @ GHC.Types.Int
                                                                                @ GHC.Types.Int
                                                                                ipv119_shpv } in
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ GHC.Types.Int
                                                                                 ipv21_sgfk
                                                                                 sat_shpw
                                                                                 ipv118_shpu
                                                                          of s2#25_shpx
                                                                          { __DEFAULT ->
                                                                          letrec {
                                                                            a46_shpy [Occ=LoopBreaker]
                                                                              :: GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                                 -> (# GHC.Prim.State#
                                                                                         GHC.Prim.RealWorld,
                                                                                       () #)
                                                                            [LclId,
                                                                             Arity=1,
                                                                             Str=DmdType <L,U>,
                                                                             Unf=OtherCon []]
                                                                            a46_shpy =
                                                                              \ (eta6_shpz [Occ=Once]
                                                                                   :: GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld) ->
                                                                                case GHC.Prim.readMutVar#
                                                                                       @ GHC.Prim.RealWorld
                                                                                       @ (GHC.Types.Int,
                                                                                          GHC.Types.Int)
                                                                                       ipv31_sgfz
                                                                                       eta6_shpz
                                                                                of _ [Occ=Dead]
                                                                                { (# ipv120_shpB [Occ=Once], ipv121_shpC [Occ=Once] #) ->
                                                                                let {
                                                                                  ix2_shpD [Dmd=<L,U(U)>]
                                                                                    :: GHC.Types.Int
                                                                                  [LclId,
                                                                                   Str=DmdType]
                                                                                  ix2_shpD =
                                                                                    Automata4Coms.indices_a_get_ix
                                                                                      ipv121_shpC } in
                                                                                case GHC.Prim.writeMutVar#
                                                                                       @ GHC.Prim.RealWorld
                                                                                       @ GHC.Types.Int
                                                                                       ipv17_sgfe
                                                                                       ix2_shpD
                                                                                       ipv120_shpB
                                                                                of s2#26_shpE
                                                                                { __DEFAULT ->
                                                                                let {
                                                                                  sat_shpL [Occ=Once,
                                                                                            Dmd=<L,1*U>]
                                                                                    :: GHC.Base.String
                                                                                  [LclId,
                                                                                   Str=DmdType]
                                                                                  sat_shpL =
                                                                                    let {
                                                                                      sat_shpK [Occ=Once]
                                                                                        :: [GHC.Types.Char]
                                                                                      [LclId,
                                                                                       Str=DmdType]
                                                                                      sat_shpK =
                                                                                        case ix2_shpD
                                                                                        of _ [Occ=Dead]
                                                                                        { GHC.Types.I# ww3_shpG [Occ=Once] ->
                                                                                        case GHC.Show.$wshowSignedInt
                                                                                               0
                                                                                               ww3_shpG
                                                                                               (GHC.Types.[]
                                                                                                  @ GHC.Types.Char)
                                                                                        of _ [Occ=Dead]
                                                                                        { (# ww5_shpI [Occ=Once], ww6_shpJ [Occ=Once] #) ->
                                                                                        GHC.Types.:
                                                                                          @ GHC.Types.Char
                                                                                          ww5_shpI
                                                                                          ww6_shpJ
                                                                                        }
                                                                                        } } in
                                                                                    GHC.CString.unpackAppendCString#
                                                                                      "filtd:"#
                                                                                      sat_shpK } in
                                                                                case GHC.IO.Handle.Text.hPutStr2
                                                                                       GHC.IO.Handle.FD.stdout
                                                                                       sat_shpL
                                                                                       GHC.Types.True
                                                                                       s2#26_shpE
                                                                                of _ [Occ=Dead]
                                                                                { (# ipv122_shpN [Occ=Once], _ [Occ=Dead] #) ->
                                                                                case GHC.Prim.readMutVar#
                                                                                       @ GHC.Prim.RealWorld
                                                                                       @ (GHC.Types.Int,
                                                                                          GHC.Types.Int)
                                                                                       ipv31_sgfz
                                                                                       ipv122_shpN
                                                                                of _ [Occ=Dead]
                                                                                { (# ipv124_shpQ [Occ=Once], ipv125_shpR [Occ=Once] #) ->
                                                                                let {
                                                                                  sat_shpS [Occ=Once]
                                                                                    :: (GHC.Types.Int,
                                                                                        GHC.Types.Int)
                                                                                  [LclId,
                                                                                   Str=DmdType]
                                                                                  sat_shpS =
                                                                                    Automata4Coms.indices_a_inc_ix
                                                                                      ipv125_shpR } in
                                                                                case GHC.Prim.writeMutVar#
                                                                                       @ GHC.Prim.RealWorld
                                                                                       @ (GHC.Types.Int,
                                                                                          GHC.Types.Int)
                                                                                       ipv31_sgfz
                                                                                       sat_shpS
                                                                                       ipv124_shpQ
                                                                                of s2#27_shpT
                                                                                { __DEFAULT ->
                                                                                case GHC.Prim.readMutVar#
                                                                                       @ GHC.Prim.RealWorld
                                                                                       @ (GHC.Types.Int,
                                                                                          GHC.Types.Int)
                                                                                       ipv31_sgfz
                                                                                       s2#27_shpT
                                                                                of _ [Occ=Dead]
                                                                                { (# ipv126_shpV [Occ=Once*], ipv127_shpW [Occ=Once] #) ->
                                                                                case Automata4Coms.indices_a_check
                                                                                       ipv127_shpW
                                                                                of _ [Occ=Dead] {
                                                                                  GHC.Types.False ->
                                                                                    case GHC.Prim.readMutVar#
                                                                                           @ GHC.Prim.RealWorld
                                                                                           @ GHC.Types.Int
                                                                                           ipv21_sgfk
                                                                                           ipv126_shpV
                                                                                    of _ [Occ=Dead]
                                                                                    { (# ipv128_shpZ [Occ=Once], ipv129_shq0 [Occ=Once] #) ->
                                                                                    let {
                                                                                      sat_shq1 [Occ=Once]
                                                                                        :: (GHC.Types.Int,
                                                                                            GHC.Types.Int)
                                                                                      [LclId,
                                                                                       Str=DmdType]
                                                                                      sat_shq1 =
                                                                                        Automata4Coms.indices_a_init
                                                                                          ipv129_shq0 } in
                                                                                    case GHC.Prim.writeMutVar#
                                                                                           @ GHC.Prim.RealWorld
                                                                                           @ (GHC.Types.Int,
                                                                                              GHC.Types.Int)
                                                                                           ipv31_sgfz
                                                                                           sat_shq1
                                                                                           ipv128_shpZ
                                                                                    of s2#28_shq2
                                                                                    { __DEFAULT ->
                                                                                    a6_sgln
                                                                                      s2#28_shq2
                                                                                    }
                                                                                    };
                                                                                  GHC.Types.True ->
                                                                                    a46_shpy
                                                                                      ipv126_shpV
                                                                                }
                                                                                }
                                                                                }
                                                                                }
                                                                                }
                                                                                }
                                                                                }; } in
                                                                          a46_shpy s2#25_shpx
                                                                          }
                                                                          }
                                                                          }
                                                                          }
                                                                          };
                                                                        GHC.Types.True ->
                                                                          case GHC.Prim.readMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv11_sgf5
                                                                                 ipv112_shoZ
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv114_shq4 [Occ=Once], ipv115_shq5 #) ->
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv19_sgfh
                                                                                 ipv115_shq5
                                                                                 ipv114_shq4
                                                                          of s2#24_shq6
                                                                          { __DEFAULT ->
                                                                          let {
                                                                            sat_shqq [Occ=Once,
                                                                                      Dmd=<L,1*U>]
                                                                              :: GHC.Base.String
                                                                            [LclId, Str=DmdType]
                                                                            sat_shqq =
                                                                              let {
                                                                                sat_shqp [Occ=Once]
                                                                                  :: [GHC.Types.Char]
                                                                                [LclId, Str=DmdType]
                                                                                sat_shqp =
                                                                                  case ipv115_shq5
                                                                                  of _ [Occ=Dead]
                                                                                  { (ww1_shq8 [Occ=Once!], ww2_shq9 [Occ=OnceL!]) ->
                                                                                  let {
                                                                                    sat_shqo [Occ=Once]
                                                                                      :: [GHC.Types.Char]
                                                                                    [LclId,
                                                                                     Str=DmdType]
                                                                                    sat_shqo =
                                                                                      case ww1_shq8
                                                                                      of _ [Occ=Dead]
                                                                                      { GHC.Types.I# ww4_shqb [Occ=Once] ->
                                                                                      let {
                                                                                        sat_shqj [Occ=Once]
                                                                                          :: [GHC.Types.Char]
                                                                                        [LclId,
                                                                                         Str=DmdType]
                                                                                        sat_shqj =
                                                                                          let {
                                                                                            sat_shqi [Occ=Once]
                                                                                              :: GHC.Base.String
                                                                                                 -> GHC.Base.String
                                                                                            [LclId,
                                                                                             Str=DmdType]
                                                                                            sat_shqi =
                                                                                              \ (w2_shqc [Occ=Once]
                                                                                                   :: GHC.Base.String) ->
                                                                                                case ww2_shq9
                                                                                                of _ [Occ=Dead]
                                                                                                { GHC.Types.I# ww6_shqe [Occ=Once] ->
                                                                                                case GHC.Show.$wshowSignedInt
                                                                                                       0
                                                                                                       ww6_shqe
                                                                                                       w2_shqc
                                                                                                of _ [Occ=Dead]
                                                                                                { (# ww8_shqg [Occ=Once], ww9_shqh [Occ=Once] #) ->
                                                                                                GHC.Types.:
                                                                                                  @ GHC.Types.Char
                                                                                                  ww8_shqg
                                                                                                  ww9_shqh
                                                                                                }
                                                                                                } } in
                                                                                          GHC.List.foldr1_$sfoldr1
                                                                                            @ (GHC.Base.String
                                                                                               -> GHC.Base.String)
                                                                                            GHC.Show.$fShow(,)1
                                                                                            sat_shqi
                                                                                            (GHC.Types.[]
                                                                                               @ GHC.Show.ShowS)
                                                                                            lvl4_rger } in
                                                                                      let {
                                                                                        sat_shqk [Occ=Once]
                                                                                          :: GHC.Base.String
                                                                                        [LclId,
                                                                                         Str=DmdType]
                                                                                        sat_shqk =
                                                                                          GHC.Types.:
                                                                                            @ GHC.Types.Char
                                                                                            GHC.Show.showList__1
                                                                                            sat_shqj } in
                                                                                      case GHC.Show.$wshowSignedInt
                                                                                             0
                                                                                             ww4_shqb
                                                                                             sat_shqk
                                                                                      of _ [Occ=Dead]
                                                                                      { (# ww6_shqm [Occ=Once], ww7_shqn [Occ=Once] #) ->
                                                                                      GHC.Types.:
                                                                                        @ GHC.Types.Char
                                                                                        ww6_shqm
                                                                                        ww7_shqn
                                                                                      }
                                                                                      } } in
                                                                                  GHC.Types.:
                                                                                    @ GHC.Types.Char
                                                                                    GHC.Show.shows13
                                                                                    sat_shqo
                                                                                  } } in
                                                                              GHC.CString.unpackAppendCString#
                                                                                "merg: "#
                                                                                sat_shqp } in
                                                                          case GHC.IO.Handle.Text.hPutStr2
                                                                                 GHC.IO.Handle.FD.stdout
                                                                                 sat_shqq
                                                                                 GHC.Types.True
                                                                                 s2#24_shq6
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv116_shqs [Occ=Once], _ [Occ=Dead] #) ->
                                                                          case GHC.Prim.readMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv19_sgfh
                                                                                 ipv116_shqs
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv118_shqv [Occ=Once], ipv119_shqw [Occ=Once] #) ->
                                                                          let {
                                                                            sat_shqx [Occ=Once]
                                                                              :: GHC.Types.Int
                                                                            [LclId, Str=DmdType]
                                                                            sat_shqx =
                                                                              Data.Tuple.snd
                                                                                @ GHC.Types.Int
                                                                                @ GHC.Types.Int
                                                                                ipv119_shqw } in
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ GHC.Types.Int
                                                                                 ipv21_sgfk
                                                                                 sat_shqx
                                                                                 ipv118_shqv
                                                                          of s2#25_shqy
                                                                          { __DEFAULT ->
                                                                          a44_shnN s2#25_shqy
                                                                          }
                                                                          }
                                                                          }
                                                                          }
                                                                          }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                  }
                                                                  }
                                                                  }
                                                                  }
                                                                  }
                                                                  };
                                                              a44_shnN [Occ=LoopBreaker]
                                                                :: GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                   -> (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         () #)
                                                              [LclId,
                                                               Arity=1,
                                                               Str=DmdType <L,U>,
                                                               Unf=OtherCon []]
                                                              a44_shnN =
                                                                \ (eta5_shnP [Occ=Once]
                                                                     :: GHC.Prim.State#
                                                                          GHC.Prim.RealWorld) ->
                                                                  case GHC.Prim.readMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ (GHC.Types.Int,
                                                                            GHC.Types.Int)
                                                                         ipv31_sgfz
                                                                         eta5_shnP
                                                                  of _ [Occ=Dead]
                                                                  { (# ipv102_shnR [Occ=Once], ipv103_shnS [Occ=Once] #) ->
                                                                  let {
                                                                    ix2_shnT [Dmd=<L,U(U)>]
                                                                      :: GHC.Types.Int
                                                                    [LclId, Str=DmdType]
                                                                    ix2_shnT =
                                                                      Automata4Coms.indices_a_get_ix
                                                                        ipv103_shnS } in
                                                                  case GHC.Prim.writeMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ GHC.Types.Int
                                                                         ipv17_sgfe
                                                                         ix2_shnT
                                                                         ipv102_shnR
                                                                  of s2#21_shnU { __DEFAULT ->
                                                                  let {
                                                                    sat_sho1 [Occ=Once, Dmd=<L,1*U>]
                                                                      :: GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sho1 =
                                                                      let {
                                                                        sat_sho0 [Occ=Once]
                                                                          :: [GHC.Types.Char]
                                                                        [LclId, Str=DmdType]
                                                                        sat_sho0 =
                                                                          case ix2_shnT
                                                                          of _ [Occ=Dead]
                                                                          { GHC.Types.I# ww3_shnW [Occ=Once] ->
                                                                          case GHC.Show.$wshowSignedInt
                                                                                 0
                                                                                 ww3_shnW
                                                                                 (GHC.Types.[]
                                                                                    @ GHC.Types.Char)
                                                                          of _ [Occ=Dead]
                                                                          { (# ww5_shnY [Occ=Once], ww6_shnZ [Occ=Once] #) ->
                                                                          GHC.Types.:
                                                                            @ GHC.Types.Char
                                                                            ww5_shnY
                                                                            ww6_shnZ
                                                                          }
                                                                          } } in
                                                                      GHC.CString.unpackAppendCString#
                                                                        "filtd:"# sat_sho0 } in
                                                                  case GHC.IO.Handle.Text.hPutStr2
                                                                         GHC.IO.Handle.FD.stdout
                                                                         sat_sho1
                                                                         GHC.Types.True
                                                                         s2#21_shnU
                                                                  of _ [Occ=Dead]
                                                                  { (# ipv104_sho3 [Occ=Once], _ [Occ=Dead] #) ->
                                                                  case GHC.Prim.readMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ (GHC.Types.Int,
                                                                            GHC.Types.Int)
                                                                         ipv31_sgfz
                                                                         ipv104_sho3
                                                                  of _ [Occ=Dead]
                                                                  { (# ipv106_sho6 [Occ=Once], ipv107_sho7 [Occ=Once] #) ->
                                                                  let {
                                                                    sat_sho8 [Occ=Once]
                                                                      :: (GHC.Types.Int,
                                                                          GHC.Types.Int)
                                                                    [LclId, Str=DmdType]
                                                                    sat_sho8 =
                                                                      Automata4Coms.indices_a_inc_ix
                                                                        ipv107_sho7 } in
                                                                  case GHC.Prim.writeMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ (GHC.Types.Int,
                                                                            GHC.Types.Int)
                                                                         ipv31_sgfz
                                                                         sat_sho8
                                                                         ipv106_sho6
                                                                  of s2#22_sho9 { __DEFAULT ->
                                                                  case GHC.Prim.readMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ (GHC.Types.Int,
                                                                            GHC.Types.Int)
                                                                         ipv31_sgfz
                                                                         s2#22_sho9
                                                                  of _ [Occ=Dead]
                                                                  { (# ipv108_shob [Occ=Once*], ipv109_shoc [Occ=Once] #) ->
                                                                  case Automata4Coms.indices_a_check
                                                                         ipv109_shoc
                                                                  of _ [Occ=Dead] {
                                                                    GHC.Types.False ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ GHC.Types.Int
                                                                             ipv21_sgfk
                                                                             ipv108_shob
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv110_shof [Occ=Once], ipv111_shog [Occ=Once] #) ->
                                                                      let {
                                                                        sat_shoh [Occ=Once]
                                                                          :: (GHC.Types.Int,
                                                                              GHC.Types.Int)
                                                                        [LclId, Str=DmdType]
                                                                        sat_shoh =
                                                                          Automata4Coms.indices_a_init
                                                                            ipv111_shog } in
                                                                      case GHC.Prim.writeMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_sgfz
                                                                             sat_shoh
                                                                             ipv110_shof
                                                                      of s2#23_shoi { __DEFAULT ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ [GHC.Types.Int]
                                                                             ipv1_sgeQ
                                                                             s2#23_shoi
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv112_shok [Occ=Once*], ipv113_shol [Occ=Once!] #) ->
                                                                      case ipv113_shol
                                                                      of _ [Occ=Dead] {
                                                                        [] -> a13_sgrA ipv112_shok;
                                                                        : i2_shon [Occ=Once]
                                                                          is2_shoo [Occ=Once] ->
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ [GHC.Types.Int]
                                                                                 ipv1_sgeQ
                                                                                 is2_shoo
                                                                                 ipv112_shok
                                                                          of s2#24_shop
                                                                          { __DEFAULT ->
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ GHC.Types.Int
                                                                                 ipv5_sgeW
                                                                                 i2_shon
                                                                                 s2#24_shop
                                                                          of s2#25_shoq
                                                                          { __DEFAULT ->
                                                                          a45_shnO s2#25_shoq
                                                                          }
                                                                          }
                                                                      }
                                                                      }
                                                                      }
                                                                      };
                                                                    GHC.Types.True ->
                                                                      a44_shnN ipv108_shob
                                                                  }
                                                                  }
                                                                  }
                                                                  }
                                                                  }
                                                                  }
                                                                  }; } in
                                                            a45_shnO s2#20_shnM
                                                            }
                                                            };
                                                          GHC.Types.True -> a43_shni ipv98_shnF
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a43_shni s2#17_shnh
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              };
                                            GHC.Types.True -> a42_shl0 ipv74_shln
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a42_shl0 s2#10_shkZ
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                };
                              : i2_shqz [Occ=Once] is2_shqA [Occ=Once] ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ [GHC.Types.Int]
                                       ipv3_sgeT
                                       is2_shqA
                                       ipv54_shje
                                of s2#8_shqB { __DEFAULT ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv7_sgeZ
                                       i2_shqz
                                       s2#8_shqB
                                of s2#9_shqC { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_sgf8 s2#9_shqC
                                of _ [Occ=Dead] { (# ipv56_shqE [Occ=Once], ipv57_shqF #) ->
                                let {
                                  sat_shqG [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_shqG = (ipv57_shqF, ipv57_shqF) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       sat_shqG
                                       ipv56_shqE
                                of s2#10_shqH { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       s2#10_shqH
                                of _ [Occ=Dead]
                                { (# ipv58_shqJ [Occ=Once], ipv59_shqK [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       ipv58_shqJ
                                of _ [Occ=Dead]
                                { (# ipv60_shqM [Occ=Once*], ipv61_shqN [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv59_shqK ipv61_shqN
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_sgf2
                                           ipv60_shqM
                                    of _ [Occ=Dead] { (# ipv62_shqQ [Occ=Once], ipv63_shqR #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv63_shqR
                                           ipv62_shqQ
                                    of s2#11_shqS { __DEFAULT ->
                                    let {
                                      sat_shrc [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_shrc =
                                        let {
                                          sat_shrb [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_shrb =
                                            case ipv63_shqR
                                            of _ [Occ=Dead]
                                            { (ww1_shqU [Occ=Once!], ww2_shqV [Occ=OnceL!]) ->
                                            let {
                                              sat_shra [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_shra =
                                                case ww1_shqU
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_shqX [Occ=Once] ->
                                                let {
                                                  sat_shr5 [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_shr5 =
                                                    let {
                                                      sat_shr4 [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_shr4 =
                                                        \ (w2_shqY [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_shqV
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_shr0 [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_shr0 w2_shqY
                                                          of _ [Occ=Dead]
                                                          { (# ww8_shr2 [Occ=Once], ww9_shr3 [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_shr2 ww9_shr3
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_shr4
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_shr6 [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_shr6 =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_shr5 } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_shqX sat_shr6
                                                of _ [Occ=Dead]
                                                { (# ww6_shr8 [Occ=Once], ww7_shr9 [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_shr8 ww7_shr9
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_shra
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_shrb } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_shrc
                                           GHC.Types.True
                                           s2#11_shqS
                                    of _ [Occ=Dead] { (# ipv64_shre [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv64_shre
                                    of _ [Occ=Dead]
                                    { (# ipv66_shrh [Occ=Once], ipv67_shri [Occ=Once] #) ->
                                    let {
                                      sat_shrj [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_shrj =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_shri } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_shrj
                                           ipv66_shrh
                                    of s2#12_shrk { __DEFAULT ->
                                    a40_sgX9 s2#12_shrk
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_sgf5
                                           ipv60_shqM
                                    of _ [Occ=Dead] { (# ipv62_shrm [Occ=Once], ipv63_shrn #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv63_shrn
                                           ipv62_shrm
                                    of s2#11_shro { __DEFAULT ->
                                    let {
                                      sat_shrI [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_shrI =
                                        let {
                                          sat_shrH [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_shrH =
                                            case ipv63_shrn
                                            of _ [Occ=Dead]
                                            { (ww1_shrq [Occ=Once!], ww2_shrr [Occ=OnceL!]) ->
                                            let {
                                              sat_shrG [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_shrG =
                                                case ww1_shrq
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_shrt [Occ=Once] ->
                                                let {
                                                  sat_shrB [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_shrB =
                                                    let {
                                                      sat_shrA [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_shrA =
                                                        \ (w2_shru [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_shrr
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_shrw [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_shrw w2_shru
                                                          of _ [Occ=Dead]
                                                          { (# ww8_shry [Occ=Once], ww9_shrz [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_shry ww9_shrz
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_shrA
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_shrC [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_shrC =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_shrB } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_shrt sat_shrC
                                                of _ [Occ=Dead]
                                                { (# ww6_shrE [Occ=Once], ww7_shrF [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_shrE ww7_shrF
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_shrG
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_shrH } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_shrI
                                           GHC.Types.True
                                           s2#11_shro
                                    of _ [Occ=Dead] { (# ipv64_shrK [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv64_shrK
                                    of _ [Occ=Dead]
                                    { (# ipv66_shrN [Occ=Once], ipv67_shrO [Occ=Once] #) ->
                                    let {
                                      sat_shrP [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_shrP =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_shrO } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_shrP
                                           ipv66_shrN
                                    of s2#12_shrQ { __DEFAULT ->
                                    a38_sgX7 s2#12_shrQ
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                            }
                            };
                        a26_sgWV [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a26_sgWV =
                          \ (eta2_sgZQ [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_sgZQ
                            of _ [Occ=Dead]
                            { (# ipv54_sgZS [Occ=Once], ipv55_sgZT [Occ=Once] #) ->
                            let {
                              ix_sgZU [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_sgZU = Automata4Coms.indices_a_get_ix ipv55_sgZT } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_sgZU
                                   ipv54_sgZS
                            of s2#8_sgZV { __DEFAULT ->
                            let {
                              sat_sh02 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sh02 =
                                let {
                                  sat_sh01 [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sh01 =
                                    case ix_sgZU
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_sgZX [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_sgZX (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_sgZZ [Occ=Once], ww6_sh00 [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_sgZZ ww6_sh00
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_sh01 } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sh02 GHC.Types.True s2#8_sgZV
                            of _ [Occ=Dead] { (# ipv56_sh04 [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv56_sh04
                            of _ [Occ=Dead]
                            { (# ipv58_sh07 [Occ=Once], ipv59_sh08 [Occ=Once] #) ->
                            let {
                              sat_sh09 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_sh09 = Automata4Coms.indices_a_inc_ix ipv59_sh08 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_sh09
                                   ipv58_sh07
                            of s2#9_sh0a { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#9_sh0a
                            of _ [Occ=Dead]
                            { (# ipv60_sh0c [Occ=Once*], ipv61_sh0d [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_sh0d of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv60_sh0c
                                of _ [Occ=Dead]
                                { (# ipv62_sh0g [Occ=Once], ipv63_sh0h [Occ=Once] #) ->
                                let {
                                  sat_sh0i [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sh0i = Automata4Coms.indices_a_init ipv63_sh0h } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_sh0i
                                       ipv62_sh0g
                                of s2#10_sh0j { __DEFAULT ->
                                a41_sgXa s2#10_sh0j
                                }
                                };
                              GHC.Types.True -> a26_sgWV ipv60_sh0c
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a31_sgX0 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a31_sgX0 =
                          \ (eta2_sh7Q [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_sh7Q
                            of _ [Occ=Dead]
                            { (# ipv54_sh7S [Occ=Once], ipv55_sh7T [Occ=Once] #) ->
                            let {
                              ix_sh7U [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_sh7U = Automata4Coms.indices_a_get_ix ipv55_sh7T } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_sh7U
                                   ipv54_sh7S
                            of s2#8_sh7V { __DEFAULT ->
                            let {
                              sat_sh82 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sh82 =
                                let {
                                  sat_sh81 [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sh81 =
                                    case ix_sh7U
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_sh7X [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_sh7X (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_sh7Z [Occ=Once], ww6_sh80 [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_sh7Z ww6_sh80
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_sh81 } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sh82 GHC.Types.True s2#8_sh7V
                            of _ [Occ=Dead] { (# ipv56_sh84 [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv56_sh84
                            of _ [Occ=Dead]
                            { (# ipv58_sh87 [Occ=Once], ipv59_sh88 [Occ=Once] #) ->
                            let {
                              sat_sh89 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_sh89 = Automata4Coms.indices_a_inc_ix ipv59_sh88 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_sh89
                                   ipv58_sh87
                            of s2#9_sh8a { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#9_sh8a
                            of _ [Occ=Dead]
                            { (# ipv60_sh8c [Occ=Once*], ipv61_sh8d [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_sh8d of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv60_sh8c
                                of _ [Occ=Dead]
                                { (# ipv62_sh8g [Occ=Once], ipv63_sh8h [Occ=Once] #) ->
                                let {
                                  sat_sh8i [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sh8i = Automata4Coms.indices_a_init ipv63_sh8h } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_sh8i
                                       ipv62_sh8g
                                of s2#10_sh8j { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ s2#10_sh8j
                                of _ [Occ=Dead]
                                { (# ipv64_sh8l [Occ=Once*], ipv65_sh8m [Occ=Once!] #) ->
                                case ipv65_sh8m of _ [Occ=Dead] {
                                  [] -> a14_sgsD ipv64_sh8l;
                                  : i2_sh8o [Occ=Once] is2_sh8p [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_sgeQ
                                           is2_sh8p
                                           ipv64_sh8l
                                    of s2#11_sh8q { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_sgeW
                                           i2_sh8o
                                           s2#11_sh8q
                                    of s2#12_sh8r { __DEFAULT ->
                                    a30_sgWZ s2#12_sh8r
                                    }
                                    }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a31_sgX0 ipv60_sh8c
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a32_sgX1 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a32_sgX1 =
                          \ (eta2_sh8s [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   eta2_sh8s
                            of _ [Occ=Dead]
                            { (# ipv54_sh8u [Occ=Once], ipv55_sh8v [Occ=Once] #) ->
                            let {
                              ix_sh8w [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_sh8w = Automata4Coms.indices_a_get_ix ipv55_sh8v } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_sgfe
                                   ix_sh8w
                                   ipv54_sh8u
                            of s2#8_sh8x { __DEFAULT ->
                            let {
                              sat_sh8E [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sh8E =
                                let {
                                  sat_sh8D [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sh8D =
                                    case ix_sh8w
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_sh8z [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_sh8z (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_sh8B [Occ=Once], ww6_sh8C [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_sh8B ww6_sh8C
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_sh8D } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sh8E GHC.Types.True s2#8_sh8x
                            of _ [Occ=Dead] { (# ipv56_sh8G [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   ipv56_sh8G
                            of _ [Occ=Dead]
                            { (# ipv58_sh8J [Occ=Once], ipv59_sh8K [Occ=Once] #) ->
                            let {
                              sat_sh8L [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_sh8L = Automata4Coms.indices_a_inc_ix ipv59_sh8K } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   sat_sh8L
                                   ipv58_sh8J
                            of s2#9_sh8M { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_sgfz
                                   s2#9_sh8M
                            of _ [Occ=Dead]
                            { (# ipv60_sh8O [Occ=Once*], ipv61_sh8P [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_sh8P of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk ipv60_sh8O
                                of _ [Occ=Dead]
                                { (# ipv62_sh8S [Occ=Once], ipv63_sh8T [Occ=Once] #) ->
                                let {
                                  sat_sh8U [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sh8U = Automata4Coms.indices_a_init ipv63_sh8T } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_sgfz
                                       sat_sh8U
                                       ipv62_sh8S
                                of s2#10_sh8V { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_sgeZ s2#10_sh8V
                                of _ [Occ=Dead] { (# ipv64_sh8X [Occ=Once], ipv65_sh8Y #) ->
                                let {
                                  sat_sh8Z [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sh8Z = (ipv65_sh8Y, ipv65_sh8Y) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       sat_sh8Z
                                       ipv64_sh8X
                                of s2#11_sh90 { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_sgf5
                                       s2#11_sh90
                                of _ [Occ=Dead]
                                { (# ipv66_sh92 [Occ=Once], ipv67_sh93 [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_sgf2
                                       ipv66_sh92
                                of _ [Occ=Dead]
                                { (# ipv68_sh95 [Occ=Once*], ipv69_sh96 [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv67_sh93 ipv69_sh96
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_sgf2
                                           ipv68_sh95
                                    of _ [Occ=Dead] { (# ipv70_sh99 [Occ=Once], ipv71_sh9a #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv71_sh9a
                                           ipv70_sh99
                                    of s2#12_sh9b { __DEFAULT ->
                                    let {
                                      sat_sh9v [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sh9v =
                                        let {
                                          sat_sh9u [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sh9u =
                                            case ipv71_sh9a
                                            of _ [Occ=Dead]
                                            { (ww1_sh9d [Occ=Once!], ww2_sh9e [Occ=OnceL!]) ->
                                            let {
                                              sat_sh9t [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sh9t =
                                                case ww1_sh9d
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sh9g [Occ=Once] ->
                                                let {
                                                  sat_sh9o [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sh9o =
                                                    let {
                                                      sat_sh9n [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sh9n =
                                                        \ (w2_sh9h [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sh9e
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sh9j [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sh9j w2_sh9h
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sh9l [Occ=Once], ww9_sh9m [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sh9l ww9_sh9m
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sh9n
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sh9p [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sh9p =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sh9o } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sh9g sat_sh9p
                                                of _ [Occ=Dead]
                                                { (# ww6_sh9r [Occ=Once], ww7_sh9s [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sh9r ww7_sh9s
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sh9t
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sh9u } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_sh9v
                                           GHC.Types.True
                                           s2#12_sh9b
                                    of _ [Occ=Dead] { (# ipv72_sh9x [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv72_sh9x
                                    of _ [Occ=Dead]
                                    { (# ipv74_sh9A [Occ=Once], ipv75_sh9B [Occ=Once] #) ->
                                    let {
                                      sat_sh9C [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sh9C =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv75_sh9B } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_sh9C
                                           ipv74_sh9A
                                    of s2#13_sh9D { __DEFAULT ->
                                    a31_sgX0 s2#13_sh9D
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_sgf5
                                           ipv68_sh95
                                    of _ [Occ=Dead] { (# ipv70_sh9F [Occ=Once], ipv71_sh9G #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv71_sh9G
                                           ipv70_sh9F
                                    of s2#12_sh9H { __DEFAULT ->
                                    let {
                                      sat_sha1 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sha1 =
                                        let {
                                          sat_sha0 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sha0 =
                                            case ipv71_sh9G
                                            of _ [Occ=Dead]
                                            { (ww1_sh9J [Occ=Once!], ww2_sh9K [Occ=OnceL!]) ->
                                            let {
                                              sat_sh9Z [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sh9Z =
                                                case ww1_sh9J
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sh9M [Occ=Once] ->
                                                let {
                                                  sat_sh9U [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sh9U =
                                                    let {
                                                      sat_sh9T [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sh9T =
                                                        \ (w2_sh9N [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sh9K
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sh9P [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sh9P w2_sh9N
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sh9R [Occ=Once], ww9_sh9S [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sh9R ww9_sh9S
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sh9T
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sh9V [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sh9V =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sh9U } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sh9M sat_sh9V
                                                of _ [Occ=Dead]
                                                { (# ww6_sh9X [Occ=Once], ww7_sh9Y [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sh9X ww7_sh9Y
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sh9Z
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sha0 } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_sha1
                                           GHC.Types.True
                                           s2#12_sh9H
                                    of _ [Occ=Dead] { (# ipv72_sha3 [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_sgfh
                                           ipv72_sha3
                                    of _ [Occ=Dead]
                                    { (# ipv74_sha6 [Occ=Once], ipv75_sha7 [Occ=Once] #) ->
                                    let {
                                      sat_sha8 [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sha8 =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv75_sha7 } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_sgfk
                                           sat_sha8
                                           ipv74_sha6
                                    of s2#13_sha9 { __DEFAULT ->
                                    a23_sgWS s2#13_sha9
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a32_sgX1 ipv60_sh8O
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a20_sgWP [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a20_sgWP =
                          \ (eta2_sgXb [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_sgeW eta2_sgXb
                            of _ [Occ=Dead]
                            { (# ipv54_sgXd [Occ=Once], ipv55_sgXe [Occ=Once] #) ->
                            let {
                              sat_sgXf [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sgXf = inc_rgem ipv55_sgXe } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv15_sgfb
                                   sat_sgXf
                                   ipv54_sgXd
                            of s2#8_sgXg { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_sgfb s2#8_sgXg
                            of _ [Occ=Dead]
                            { (# ipv56_sgXi [Occ=Once*], ipv57_sgXj [Occ=Once!] #) ->
                            case ipv57_sgXj
                            of _ [Occ=Dead] { GHC.Types.I# x1_sgXl [Occ=Once] ->
                            case GHC.Prim.># x1_sgXl 10 of sat_sgXm { __DEFAULT ->
                            case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_sgXm
                            of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ ipv56_sgXi
                                of _ [Occ=Dead]
                                { (# ipv58_sgXp [Occ=Once*], ipv59_sgXq [Occ=Once!] #) ->
                                case ipv59_sgXq of _ [Occ=Dead] {
                                  [] -> a15_sgwc ipv58_sgXp;
                                  : i2_sgXs [Occ=Once] is2_sgXt [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_sgeQ
                                           is2_sgXt
                                           ipv58_sgXp
                                    of s2#9_sgXu { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_sgeW
                                           i2_sgXs
                                           s2#9_sgXu
                                    of s2#10_sgXv { __DEFAULT ->
                                    a20_sgWP s2#10_sgXv
                                    }
                                    }
                                }
                                };
                              GHC.Types.True ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ ipv56_sgXi
                                of _ [Occ=Dead]
                                { (# ipv58_sgXx [Occ=Once*], ipv59_sgXy [Occ=Once!] #) ->
                                case ipv59_sgXy of _ [Occ=Dead] {
                                  [] -> a17_sgGG ipv58_sgXx;
                                  : i2_sgXA [Occ=Once] is2_sgXB [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_sgeQ
                                           is2_sgXB
                                           ipv58_sgXx
                                    of s2#9_sgXC { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_sgeW
                                           i2_sgXA
                                           s2#9_sgXC
                                    of s2#10_sgXD { __DEFAULT ->
                                    a41_sgXa s2#10_sgXD
                                    }
                                    }
                                }
                                }
                            }
                            }
                            }
                            }
                            }
                            }; } in
                      case Automata4Coms.merge_a_le_pair
                             @ GHC.Types.Int ipv51_sgnb ipv53_sgne
                      of _ [Occ=Dead] {
                        GHC.Types.False ->
                          case GHC.Prim.readMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv9_sgf2
                                 ipv52_sgnd
                          of _ [Occ=Dead] { (# ipv54_shrT [Occ=Once], ipv55_shrU #) ->
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv19_sgfh
                                 ipv55_shrU
                                 ipv54_shrT
                          of s2#8_shrV { __DEFAULT ->
                          let {
                            sat_shsf [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                            [LclId, Str=DmdType]
                            sat_shsf =
                              let {
                                sat_shse [Occ=Once] :: [GHC.Types.Char]
                                [LclId, Str=DmdType]
                                sat_shse =
                                  case ipv55_shrU
                                  of _ [Occ=Dead] { (ww1_shrX [Occ=Once!], ww2_shrY [Occ=OnceL!]) ->
                                  let {
                                    sat_shsd [Occ=Once] :: [GHC.Types.Char]
                                    [LclId, Str=DmdType]
                                    sat_shsd =
                                      case ww1_shrX
                                      of _ [Occ=Dead] { GHC.Types.I# ww4_shs0 [Occ=Once] ->
                                      let {
                                        sat_shs8 [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_shs8 =
                                          let {
                                            sat_shs7 [Occ=Once]
                                              :: GHC.Base.String -> GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_shs7 =
                                              \ (w2_shs1 [Occ=Once] :: GHC.Base.String) ->
                                                case ww2_shrY
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww6_shs3 [Occ=Once] ->
                                                case GHC.Show.$wshowSignedInt 0 ww6_shs3 w2_shs1
                                                of _ [Occ=Dead]
                                                { (# ww8_shs5 [Occ=Once], ww9_shs6 [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww8_shs5 ww9_shs6
                                                }
                                                } } in
                                          GHC.List.foldr1_$sfoldr1
                                            @ (GHC.Base.String -> GHC.Base.String)
                                            GHC.Show.$fShow(,)1
                                            sat_shs7
                                            (GHC.Types.[] @ GHC.Show.ShowS)
                                            lvl4_rger } in
                                      let {
                                        sat_shs9 [Occ=Once] :: GHC.Base.String
                                        [LclId, Str=DmdType]
                                        sat_shs9 =
                                          GHC.Types.:
                                            @ GHC.Types.Char GHC.Show.showList__1 sat_shs8 } in
                                      case GHC.Show.$wshowSignedInt 0 ww4_shs0 sat_shs9
                                      of _ [Occ=Dead]
                                      { (# ww6_shsb [Occ=Once], ww7_shsc [Occ=Once] #) ->
                                      GHC.Types.: @ GHC.Types.Char ww6_shsb ww7_shsc
                                      }
                                      } } in
                                  GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_shsd
                                  } } in
                              GHC.CString.unpackAppendCString# "merg: "# sat_shse } in
                          case GHC.IO.Handle.Text.hPutStr2
                                 GHC.IO.Handle.FD.stdout sat_shsf GHC.Types.True s2#8_shrV
                          of _ [Occ=Dead] { (# ipv56_shsh [Occ=Once], _ [Occ=Dead] #) ->
                          case GHC.Prim.readMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv19_sgfh
                                 ipv56_shsh
                          of _ [Occ=Dead]
                          { (# ipv58_shsk [Occ=Once], ipv59_shsl [Occ=Once] #) ->
                          let {
                            sat_shsm [Occ=Once] :: GHC.Types.Int
                            [LclId, Str=DmdType]
                            sat_shsm =
                              Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_shsl } in
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk sat_shsm ipv58_shsk
                          of s2#9_shsn { __DEFAULT ->
                          case GHC.Prim.readMutVar#
                                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk s2#9_shsn
                          of _ [Occ=Dead]
                          { (# ipv60_shsp [Occ=Once], ipv61_shsq [Occ=Once] #) ->
                          let {
                            sat_shsr [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                            [LclId, Str=DmdType]
                            sat_shsr = Automata4Coms.indices_a_init ipv61_shsq } in
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv31_sgfz
                                 sat_shsr
                                 ipv60_shsp
                          of s2#10_shss { __DEFAULT ->
                          case GHC.Prim.readMutVar#
                                 @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_sgeQ s2#10_shss
                          of _ [Occ=Dead]
                          { (# ipv62_shsu [Occ=Once*], ipv63_shsv [Occ=Once!] #) ->
                          case ipv63_shsv of _ [Occ=Dead] {
                            [] -> a14_sgsD ipv62_shsu;
                            : i2_shsx [Occ=Once] is2_shsy [Occ=Once] ->
                              case GHC.Prim.writeMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ [GHC.Types.Int]
                                     ipv1_sgeQ
                                     is2_shsy
                                     ipv62_shsu
                              of s2#11_shsz { __DEFAULT ->
                              case GHC.Prim.writeMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv5_sgeW
                                     i2_shsx
                                     s2#11_shsz
                              of s2#12_shsA { __DEFAULT ->
                              a30_sgWZ s2#12_shsA
                              }
                              }
                          }
                          }
                          }
                          }
                          }
                          }
                          }
                          }
                          };
                        GHC.Types.True ->
                          case GHC.Prim.readMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv11_sgf5
                                 ipv52_sgnd
                          of _ [Occ=Dead] { (# ipv54_shsC [Occ=Once], ipv55_shsD #) ->
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv19_sgfh
                                 ipv55_shsD
                                 ipv54_shsC
                          of s2#8_shsE { __DEFAULT ->
                          let {
                            sat_shsY [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                            [LclId, Str=DmdType]
                            sat_shsY =
                              let {
                                sat_shsX [Occ=Once] :: [GHC.Types.Char]
                                [LclId, Str=DmdType]
                                sat_shsX =
                                  case ipv55_shsD
                                  of _ [Occ=Dead] { (ww1_shsG [Occ=Once!], ww2_shsH [Occ=OnceL!]) ->
                                  let {
                                    sat_shsW [Occ=Once] :: [GHC.Types.Char]
                                    [LclId, Str=DmdType]
                                    sat_shsW =
                                      case ww1_shsG
                                      of _ [Occ=Dead] { GHC.Types.I# ww4_shsJ [Occ=Once] ->
                                      let {
                                        sat_shsR [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_shsR =
                                          let {
                                            sat_shsQ [Occ=Once]
                                              :: GHC.Base.String -> GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_shsQ =
                                              \ (w2_shsK [Occ=Once] :: GHC.Base.String) ->
                                                case ww2_shsH
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww6_shsM [Occ=Once] ->
                                                case GHC.Show.$wshowSignedInt 0 ww6_shsM w2_shsK
                                                of _ [Occ=Dead]
                                                { (# ww8_shsO [Occ=Once], ww9_shsP [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww8_shsO ww9_shsP
                                                }
                                                } } in
                                          GHC.List.foldr1_$sfoldr1
                                            @ (GHC.Base.String -> GHC.Base.String)
                                            GHC.Show.$fShow(,)1
                                            sat_shsQ
                                            (GHC.Types.[] @ GHC.Show.ShowS)
                                            lvl4_rger } in
                                      let {
                                        sat_shsS [Occ=Once] :: GHC.Base.String
                                        [LclId, Str=DmdType]
                                        sat_shsS =
                                          GHC.Types.:
                                            @ GHC.Types.Char GHC.Show.showList__1 sat_shsR } in
                                      case GHC.Show.$wshowSignedInt 0 ww4_shsJ sat_shsS
                                      of _ [Occ=Dead]
                                      { (# ww6_shsU [Occ=Once], ww7_shsV [Occ=Once] #) ->
                                      GHC.Types.: @ GHC.Types.Char ww6_shsU ww7_shsV
                                      }
                                      } } in
                                  GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_shsW
                                  } } in
                              GHC.CString.unpackAppendCString# "merg: "# sat_shsX } in
                          case GHC.IO.Handle.Text.hPutStr2
                                 GHC.IO.Handle.FD.stdout sat_shsY GHC.Types.True s2#8_shsE
                          of _ [Occ=Dead] { (# ipv56_sht0 [Occ=Once], _ [Occ=Dead] #) ->
                          case GHC.Prim.readMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv19_sgfh
                                 ipv56_sht0
                          of _ [Occ=Dead]
                          { (# ipv58_sht3 [Occ=Once], ipv59_sht4 [Occ=Once] #) ->
                          let {
                            sat_sht5 [Occ=Once] :: GHC.Types.Int
                            [LclId, Str=DmdType]
                            sat_sht5 =
                              Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_sht4 } in
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk sat_sht5 ipv58_sht3
                          of s2#9_sht6 { __DEFAULT ->
                          case GHC.Prim.readMutVar#
                                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_sgfk s2#9_sht6
                          of _ [Occ=Dead]
                          { (# ipv60_sht8 [Occ=Once], ipv61_sht9 [Occ=Once] #) ->
                          let {
                            sat_shta [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                            [LclId, Str=DmdType]
                            sat_shta = Automata4Coms.indices_a_init ipv61_sht9 } in
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv31_sgfz
                                 sat_shta
                                 ipv60_sht8
                          of s2#10_shtb { __DEFAULT ->
                          a21_sgWQ s2#10_shtb
                          }
                          }
                          }
                          }
                          }
                          }
                          }
                      }
                      }
                      }
                      }
                      }
                      }
                      }
                  }
                  }
                  }
                  }
                  }
                  }
              }
              }
              }
              }
              }
              }; } in
        a5_sgio s2#1_sgin
        }
        }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }

Automata4QQEg.bobo :: GHC.Types.IO ()
[GblId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
Automata4QQEg.bobo =
  (\ (eta_B1 [Occ=Once, OS=OneShot]
        :: GHC.Prim.State# GHC.Prim.RealWorld) ->
     Automata4QQEg.bobo1 eta_B1)
  `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)
          :: (GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             GHC.Types.IO ())




==================== CorePrep ====================
Result size of CorePrep
  = {terms: 12,380, types: 15,481, coercions: 16}

Automata4QQEg.puller1
  :: forall a_a4cA.
     [a_a4cA]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Types.IO (Data.Maybe.Maybe a_a4cA) #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType <L,U><L,U>,
 Unf=OtherCon []]
Automata4QQEg.puller1 =
  \ (@ a_a4cA)
    (ls_snHI [Occ=Once] :: [a_a4cA])
    (eta_snHJ [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.Prim.newMutVar#
           @ [a_a4cA] @ GHC.Prim.RealWorld ls_snHI eta_snHJ
    of _ [Occ=Dead] { (# ipv_snHL [Occ=Once], ipv1_snHM #) ->
    let {
      sat_snHW [Occ=Once] :: GHC.Types.IO (Data.Maybe.Maybe a_a4cA)
      [LclId, Str=DmdType]
      sat_snHW =
        (\ (s_snHN [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
           case GHC.Prim.readMutVar#
                  @ GHC.Prim.RealWorld @ [a_a4cA] ipv1_snHM s_snHN
           of _ [Occ=Dead]
           { (# ipv2_snHP [Occ=Once*], ipv3_snHQ [Occ=Once!] #) ->
           case ipv3_snHQ of _ [Occ=Dead] {
             [] -> (# ipv2_snHP, Data.Maybe.Nothing @ a_a4cA #);
             : i_snHS [Occ=Once] is_snHT [Occ=Once] ->
               case GHC.Prim.writeMutVar#
                      @ GHC.Prim.RealWorld @ [a_a4cA] ipv1_snHM is_snHT ipv2_snHP
               of s2#_snHU { __DEFAULT ->
               let {
                 sat_snHV [Occ=Once] :: Data.Maybe.Maybe a_a4cA
                 [LclId, Str=DmdType]
                 sat_snHV = Data.Maybe.Just @ a_a4cA i_snHS } in
               (# s2#_snHU, sat_snHV #)
               }
           }
           })
        `cast` (Sym (GHC.Types.NTCo:IO[0] <Data.Maybe.Maybe a_a4cA>_R)
                :: (GHC.Prim.State# GHC.Prim.RealWorld
                    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                          Data.Maybe.Maybe a_a4cA #))
                     ~#
                   GHC.Types.IO (Data.Maybe.Maybe a_a4cA)) } in
    (# ipv_snHL, sat_snHW #)
    }

Automata4QQEg.puller
  :: forall a_a3qJ.
     [a_a3qJ] -> GHC.Types.IO (GHC.Types.IO (Data.Maybe.Maybe a_a3qJ))
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType <L,U><L,U>,
 Unf=OtherCon []]
Automata4QQEg.puller =
  (\ (@ a_a4cA)
     (eta_B2 [Occ=Once] :: [a_a4cA])
     (eta_B1 [Occ=Once, OS=OneShot]
        :: GHC.Prim.State# GHC.Prim.RealWorld) ->
     Automata4QQEg.puller1 @ a_a4cA eta_B2 eta_B1)
  `cast` (forall a_a4cA.
          <[a_a4cA]>_R
          -> Sym
               (GHC.Types.NTCo:IO[0] <GHC.Types.IO (Data.Maybe.Maybe a_a4cA)>_R)
          :: (forall a_a4cA.
              [a_a4cA]
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    GHC.Types.IO (Data.Maybe.Maybe a_a4cA) #))
               ~#
             (forall a_a4cA.
              [a_a4cA] -> GHC.Types.IO (GHC.Types.IO (Data.Maybe.Maybe a_a4cA))))

inc_rgem :: GHC.Types.Int -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType <S,1*U(U)>m,
 Unf=OtherCon []]
inc_rgem =
  \ (ds_snHX [Occ=Once!] :: GHC.Types.Int) ->
    case ds_snHX of _ [Occ=Dead] { GHC.Types.I# x_snHZ [Occ=Once] ->
    case GHC.Prim.+# x_snHZ 5 of sat_snI0 { __DEFAULT ->
    GHC.Types.I# sat_snI0
    }
    }

lvl_rgen :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl_rgen = GHC.CString.unpackCString# "Uninitialised"#

lvl1_rgeo :: GHC.Types.Int
[GblId, Str=DmdType b]
lvl1_rgeo = GHC.Err.error @ GHC.Types.Int lvl_rgen

lvl2_rgep :: (GHC.Types.Int, GHC.Types.Int)
[GblId, Str=DmdType b]
lvl2_rgep = GHC.Err.error @ (GHC.Types.Int, GHC.Types.Int) lvl_rgen

lvl3_rgeq :: GHC.Prim.Any
[GblId, Str=DmdType b]
lvl3_rgeq = GHC.Err.error @ GHC.Prim.Any lvl_rgen

lvl4_rger :: [GHC.Types.Char]
[GblId, Caf=NoCafRefs, Str=DmdType, Unf=OtherCon []]
lvl4_rger =
  GHC.Types.:
    @ GHC.Types.Char GHC.Show.shows12 (GHC.Types.[] @ GHC.Types.Char)

lvl5_rges :: [GHC.Types.Int]
[GblId, Str=DmdType]
lvl5_rges = GHC.Enum.eftInt 5 15

lvl6_rget :: [GHC.Types.Int]
[GblId, Str=DmdType]
lvl6_rget = GHC.Enum.eftInt 1 10

Automata4QQEg.bobo1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
Automata4QQEg.bobo1 =
  \ (eta_snI1 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.Prim.newMutVar#
           @ [GHC.Types.Int] @ GHC.Prim.RealWorld lvl6_rget eta_snI1
    of _ [Occ=Dead] { (# ipv_snI3 [Occ=Once], ipv1_snI4 #) ->
    case GHC.Prim.newMutVar#
           @ [GHC.Types.Int] @ GHC.Prim.RealWorld lvl5_rges ipv_snI3
    of _ [Occ=Dead] { (# ipv2_snI6 [Occ=Once], ipv3_snI7 #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Types.Int @ GHC.Prim.RealWorld lvl1_rgeo ipv2_snI6
    of _ [Occ=Dead] { (# ipv4_snI9 [Occ=Once], ipv5_snIa #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Types.Int @ GHC.Prim.RealWorld lvl1_rgeo ipv4_snI9
    of _ [Occ=Dead] { (# ipv6_snIc [Occ=Once], ipv7_snId #) ->
    case GHC.Prim.newMutVar#
           @ (GHC.Types.Int, GHC.Types.Int)
           @ GHC.Prim.RealWorld
           lvl2_rgep
           ipv6_snIc
    of _ [Occ=Dead] { (# ipv8_snIf [Occ=Once], ipv9_snIg #) ->
    case GHC.Prim.newMutVar#
           @ (GHC.Types.Int, GHC.Types.Int)
           @ GHC.Prim.RealWorld
           lvl2_rgep
           ipv8_snIf
    of _ [Occ=Dead] { (# ipv10_snIi [Occ=Once], ipv11_snIj #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Types.Int @ GHC.Prim.RealWorld lvl1_rgeo ipv10_snIi
    of _ [Occ=Dead] { (# ipv12_snIl [Occ=Once], ipv13_snIm #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Types.Int @ GHC.Prim.RealWorld lvl1_rgeo ipv12_snIl
    of _ [Occ=Dead] { (# ipv14_snIo [Occ=Once], ipv15_snIp #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Types.Int @ GHC.Prim.RealWorld lvl1_rgeo ipv14_snIo
    of _ [Occ=Dead] { (# ipv16_snIr [Occ=Once], ipv17_snIs #) ->
    case GHC.Prim.newMutVar#
           @ (GHC.Types.Int, GHC.Types.Int)
           @ GHC.Prim.RealWorld
           lvl2_rgep
           ipv16_snIr
    of _ [Occ=Dead] { (# ipv18_snIu [Occ=Once], ipv19_snIv #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Types.Int @ GHC.Prim.RealWorld lvl1_rgeo ipv18_snIu
    of _ [Occ=Dead] { (# ipv20_snIx [Occ=Once], ipv21_snIy #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Prim.Any @ GHC.Prim.RealWorld lvl3_rgeq ipv20_snIx
    of _ [Occ=Dead] { (# ipv22_snIA [Occ=Once], _ [Occ=Dead] #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Prim.Any @ GHC.Prim.RealWorld lvl3_rgeq ipv22_snIA
    of _ [Occ=Dead] { (# ipv24_snID [Occ=Once], _ [Occ=Dead] #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Prim.Any @ GHC.Prim.RealWorld lvl3_rgeq ipv24_snID
    of _ [Occ=Dead] { (# ipv26_snIG [Occ=Once], _ [Occ=Dead] #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Prim.Any @ GHC.Prim.RealWorld lvl3_rgeq ipv26_snIG
    of _ [Occ=Dead] { (# ipv28_snIJ [Occ=Once], _ [Occ=Dead] #) ->
    case GHC.Prim.newMutVar#
           @ (GHC.Types.Int, GHC.Types.Int)
           @ GHC.Prim.RealWorld
           lvl2_rgep
           ipv28_snIJ
    of _ [Occ=Dead] { (# ipv30_snIM [Occ=Once], ipv31_snIN #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Prim.Any @ GHC.Prim.RealWorld lvl3_rgeq ipv30_snIM
    of _ [Occ=Dead] { (# ipv32_snIP [Occ=Once], _ [Occ=Dead] #) ->
    case GHC.Prim.newMutVar#
           @ GHC.Prim.Any @ GHC.Prim.RealWorld lvl3_rgeq ipv32_snIP
    of _ [Occ=Dead] { (# ipv34_snIS [Occ=Once], _ [Occ=Dead] #) ->
    case GHC.Prim.readMutVar#
           @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 ipv34_snIS
    of _ [Occ=Dead]
    { (# ipv36_snIV [Occ=Once*], ipv37_snIW [Occ=Once!] #) ->
    let {
      a_snIX
        :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
      a_snIX =
        \ (eta1_snIY [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
          letrec {
            a1_snIZ [Occ=LoopBreaker]
              :: GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
            [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
            a1_snIZ =
              \ (eta2_snJ0 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                case GHC.Prim.readMutVar#
                       @ GHC.Prim.RealWorld
                       @ (GHC.Types.Int, GHC.Types.Int)
                       ipv31_snIN
                       eta2_snJ0
                of _ [Occ=Dead]
                { (# ipv38_snJ2 [Occ=Once], ipv39_snJ3 [Occ=Once] #) ->
                let {
                  ix_snJ4 [Dmd=<L,U(U)>] :: GHC.Types.Int
                  [LclId, Str=DmdType]
                  ix_snJ4 = Automata4Coms.indices_a_get_ix ipv39_snJ3 } in
                case GHC.Prim.writeMutVar#
                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv17_snIs ix_snJ4 ipv38_snJ2
                of s2#_snJ5 { __DEFAULT ->
                let {
                  sat_snJc [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                  [LclId, Str=DmdType]
                  sat_snJc =
                    let {
                      sat_snJb [Occ=Once] :: [GHC.Types.Char]
                      [LclId, Str=DmdType]
                      sat_snJb =
                        case ix_snJ4 of _ [Occ=Dead] { GHC.Types.I# ww3_snJ7 [Occ=Once] ->
                        case GHC.Show.$wshowSignedInt
                               0 ww3_snJ7 (GHC.Types.[] @ GHC.Types.Char)
                        of _ [Occ=Dead] { (# ww5_snJ9 [Occ=Once], ww6_snJa [Occ=Once] #) ->
                        GHC.Types.: @ GHC.Types.Char ww5_snJ9 ww6_snJa
                        }
                        } } in
                    GHC.CString.unpackAppendCString# "filtd:"# sat_snJb } in
                case GHC.IO.Handle.Text.hPutStr2
                       GHC.IO.Handle.FD.stdout sat_snJc GHC.Types.True s2#_snJ5
                of _ [Occ=Dead] { (# ipv40_snJe [Occ=Once], _ [Occ=Dead] #) ->
                case GHC.Prim.readMutVar#
                       @ GHC.Prim.RealWorld
                       @ (GHC.Types.Int, GHC.Types.Int)
                       ipv31_snIN
                       ipv40_snJe
                of _ [Occ=Dead]
                { (# ipv42_snJh [Occ=Once], ipv43_snJi [Occ=Once] #) ->
                let {
                  sat_snJj [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                  [LclId, Str=DmdType]
                  sat_snJj = Automata4Coms.indices_a_inc_ix ipv43_snJi } in
                case GHC.Prim.writeMutVar#
                       @ GHC.Prim.RealWorld
                       @ (GHC.Types.Int, GHC.Types.Int)
                       ipv31_snIN
                       sat_snJj
                       ipv42_snJh
                of s2#1_snJk { __DEFAULT ->
                case GHC.Prim.readMutVar#
                       @ GHC.Prim.RealWorld
                       @ (GHC.Types.Int, GHC.Types.Int)
                       ipv31_snIN
                       s2#1_snJk
                of _ [Occ=Dead]
                { (# ipv44_snJm [Occ=Once*], ipv45_snJn [Occ=Once] #) ->
                case Automata4Coms.indices_a_check ipv45_snJn of _ [Occ=Dead] {
                  GHC.Types.False -> (# ipv44_snJm, GHC.Tuple.() #);
                  GHC.Types.True -> a1_snIZ ipv44_snJm
                }
                }
                }
                }
                }
                }
                }; } in
          a1_snIZ eta1_snIY } in
    letrec {
      a2_snJq
        :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
      a2_snJq =
        \ (eta1_snJW [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_snId eta1_snJW
          of _ [Occ=Dead] { (# ipv38_snJY [Occ=Once], ipv39_snJZ #) ->
          let {
            sat_snK0 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
            [LclId, Str=DmdType]
            sat_snK0 = (ipv39_snJZ, ipv39_snJZ) } in
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv9_snIg
                 sat_snK0
                 ipv38_snJY
          of s2#_snK1 { __DEFAULT ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv9_snIg
                 s2#_snK1
          of _ [Occ=Dead] { (# ipv40_snK3 [Occ=Once], ipv41_snK4 #) ->
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv19_snIv
                 ipv41_snK4
                 ipv40_snK3
          of s2#1_snK5 { __DEFAULT ->
          let {
            sat_snKp [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
            [LclId, Str=DmdType]
            sat_snKp =
              let {
                sat_snKo [Occ=Once] :: [GHC.Types.Char]
                [LclId, Str=DmdType]
                sat_snKo =
                  case ipv41_snK4
                  of _ [Occ=Dead] { (ww1_snK7 [Occ=Once!], ww2_snK8 [Occ=OnceL!]) ->
                  let {
                    sat_snKn [Occ=Once] :: [GHC.Types.Char]
                    [LclId, Str=DmdType]
                    sat_snKn =
                      case ww1_snK7 of _ [Occ=Dead] { GHC.Types.I# ww4_snKa [Occ=Once] ->
                      let {
                        sat_snKi [Occ=Once] :: [GHC.Types.Char]
                        [LclId, Str=DmdType]
                        sat_snKi =
                          let {
                            sat_snKh [Occ=Once] :: GHC.Base.String -> GHC.Base.String
                            [LclId, Str=DmdType]
                            sat_snKh =
                              \ (w2_snKb [Occ=Once] :: GHC.Base.String) ->
                                case ww2_snK8 of _ [Occ=Dead] { GHC.Types.I# ww6_snKd [Occ=Once] ->
                                case GHC.Show.$wshowSignedInt 0 ww6_snKd w2_snKb
                                of _ [Occ=Dead] { (# ww8_snKf [Occ=Once], ww9_snKg [Occ=Once] #) ->
                                GHC.Types.: @ GHC.Types.Char ww8_snKf ww9_snKg
                                }
                                } } in
                          GHC.List.foldr1_$sfoldr1
                            @ (GHC.Base.String -> GHC.Base.String)
                            GHC.Show.$fShow(,)1
                            sat_snKh
                            (GHC.Types.[] @ GHC.Show.ShowS)
                            lvl4_rger } in
                      let {
                        sat_snKj [Occ=Once] :: GHC.Base.String
                        [LclId, Str=DmdType]
                        sat_snKj =
                          GHC.Types.: @ GHC.Types.Char GHC.Show.showList__1 sat_snKi } in
                      case GHC.Show.$wshowSignedInt 0 ww4_snKa sat_snKj
                      of _ [Occ=Dead] { (# ww6_snKl [Occ=Once], ww7_snKm [Occ=Once] #) ->
                      GHC.Types.: @ GHC.Types.Char ww6_snKl ww7_snKm
                      }
                      } } in
                  GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_snKn
                  } } in
              GHC.CString.unpackAppendCString# "merg: "# sat_snKo } in
          case GHC.IO.Handle.Text.hPutStr2
                 GHC.IO.Handle.FD.stdout sat_snKp GHC.Types.True s2#1_snK5
          of _ [Occ=Dead] { (# ipv42_snKr [Occ=Once], _ [Occ=Dead] #) ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv19_snIv
                 ipv42_snKr
          of _ [Occ=Dead]
          { (# ipv44_snKu [Occ=Once], ipv45_snKv [Occ=Once] #) ->
          let {
            sat_snKw [Occ=Once] :: GHC.Types.Int
            [LclId, Str=DmdType]
            sat_snKw =
              Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv45_snKv } in
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy sat_snKw ipv44_snKu
          of s2#2_snKx { __DEFAULT ->
          a1_snJp s2#2_snKx
          }
          }
          }
          }
          }
          }
          };
      a3_snJr
        :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
      a3_snJr =
        \ (eta1_snKy [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_snI7 eta1_snKy
          of _ [Occ=Dead]
          { (# ipv38_snKA [Occ=Once*], ipv39_snKB [Occ=Once!] #) ->
          case ipv39_snKB of _ [Occ=Dead] {
            [] -> a_snIX ipv38_snKA;
            : i_snKD [Occ=Once] is_snKE [Occ=Once] ->
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_snI7 is_snKE ipv38_snKA
              of s2#_snKF { __DEFAULT ->
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_snId i_snKD s2#_snKF
              of s2#1_snKG { __DEFAULT ->
              a2_snJq s2#1_snKG
              }
              }
          }
          };
      a1_snJp [Occ=LoopBreaker]
        :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
      a1_snJp =
        \ (eta1_snJs [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv31_snIN
                 eta1_snJs
          of _ [Occ=Dead]
          { (# ipv38_snJu [Occ=Once], ipv39_snJv [Occ=Once] #) ->
          let {
            ix_snJw [Dmd=<L,U(U)>] :: GHC.Types.Int
            [LclId, Str=DmdType]
            ix_snJw = Automata4Coms.indices_a_get_ix ipv39_snJv } in
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv17_snIs ix_snJw ipv38_snJu
          of s2#_snJx { __DEFAULT ->
          let {
            sat_snJE [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
            [LclId, Str=DmdType]
            sat_snJE =
              let {
                sat_snJD [Occ=Once] :: [GHC.Types.Char]
                [LclId, Str=DmdType]
                sat_snJD =
                  case ix_snJw of _ [Occ=Dead] { GHC.Types.I# ww3_snJz [Occ=Once] ->
                  case GHC.Show.$wshowSignedInt
                         0 ww3_snJz (GHC.Types.[] @ GHC.Types.Char)
                  of _ [Occ=Dead] { (# ww5_snJB [Occ=Once], ww6_snJC [Occ=Once] #) ->
                  GHC.Types.: @ GHC.Types.Char ww5_snJB ww6_snJC
                  }
                  } } in
              GHC.CString.unpackAppendCString# "filtd:"# sat_snJD } in
          case GHC.IO.Handle.Text.hPutStr2
                 GHC.IO.Handle.FD.stdout sat_snJE GHC.Types.True s2#_snJx
          of _ [Occ=Dead] { (# ipv40_snJG [Occ=Once], _ [Occ=Dead] #) ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv31_snIN
                 ipv40_snJG
          of _ [Occ=Dead]
          { (# ipv42_snJJ [Occ=Once], ipv43_snJK [Occ=Once] #) ->
          let {
            sat_snJL [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
            [LclId, Str=DmdType]
            sat_snJL = Automata4Coms.indices_a_inc_ix ipv43_snJK } in
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv31_snIN
                 sat_snJL
                 ipv42_snJJ
          of s2#1_snJM { __DEFAULT ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld
                 @ (GHC.Types.Int, GHC.Types.Int)
                 ipv31_snIN
                 s2#1_snJM
          of _ [Occ=Dead]
          { (# ipv44_snJO [Occ=Once*], ipv45_snJP [Occ=Once] #) ->
          case Automata4Coms.indices_a_check ipv45_snJP of _ [Occ=Dead] {
            GHC.Types.False ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv44_snJO
              of _ [Occ=Dead]
              { (# ipv46_snJS [Occ=Once], ipv47_snJT [Occ=Once] #) ->
              let {
                sat_snJU [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                [LclId, Str=DmdType]
                sat_snJU = Automata4Coms.indices_a_init ipv47_snJT } in
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld
                     @ (GHC.Types.Int, GHC.Types.Int)
                     ipv31_snIN
                     sat_snJU
                     ipv46_snJS
              of s2#2_snJV { __DEFAULT ->
              a3_snJr s2#2_snJV
              }
              };
            GHC.Types.True -> a1_snJp ipv44_snJO
          }
          }
          }
          }
          }
          }
          }; } in
    let {
      a4_snKH [Occ=OnceL*!]
        :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
      a4_snKH =
        \ (eta1_snKI [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_snI7 eta1_snKI
          of _ [Occ=Dead]
          { (# ipv38_snKK [Occ=Once*], ipv39_snKL [Occ=Once!] #) ->
          case ipv39_snKL of _ [Occ=Dead] {
            [] -> (# ipv38_snKK, GHC.Tuple.() #);
            : i_snKN [Occ=Once] is_snKO [Occ=Once] ->
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_snI7 is_snKO ipv38_snKK
              of s2#_snKP { __DEFAULT ->
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_snId i_snKN s2#_snKP
              of s2#1_snKQ { __DEFAULT ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_snId s2#1_snKQ
              of _ [Occ=Dead] { (# ipv40_snKS [Occ=Once], ipv41_snKT #) ->
              let {
                sat_snKU [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                [LclId, Str=DmdType]
                sat_snKU = (ipv41_snKT, ipv41_snKT) } in
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld
                     @ (GHC.Types.Int, GHC.Types.Int)
                     ipv9_snIg
                     sat_snKU
                     ipv40_snKS
              of s2#2_snKV { __DEFAULT ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld
                     @ (GHC.Types.Int, GHC.Types.Int)
                     ipv9_snIg
                     s2#2_snKV
              of _ [Occ=Dead] { (# ipv42_snKX [Occ=Once], ipv43_snKY #) ->
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld
                     @ (GHC.Types.Int, GHC.Types.Int)
                     ipv19_snIv
                     ipv43_snKY
                     ipv42_snKX
              of s2#3_snKZ { __DEFAULT ->
              let {
                sat_snLj [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                [LclId, Str=DmdType]
                sat_snLj =
                  let {
                    sat_snLi [Occ=Once] :: [GHC.Types.Char]
                    [LclId, Str=DmdType]
                    sat_snLi =
                      case ipv43_snKY
                      of _ [Occ=Dead] { (ww1_snL1 [Occ=Once!], ww2_snL2 [Occ=OnceL!]) ->
                      let {
                        sat_snLh [Occ=Once] :: [GHC.Types.Char]
                        [LclId, Str=DmdType]
                        sat_snLh =
                          case ww1_snL1 of _ [Occ=Dead] { GHC.Types.I# ww4_snL4 [Occ=Once] ->
                          let {
                            sat_snLc [Occ=Once] :: [GHC.Types.Char]
                            [LclId, Str=DmdType]
                            sat_snLc =
                              let {
                                sat_snLb [Occ=Once] :: GHC.Base.String -> GHC.Base.String
                                [LclId, Str=DmdType]
                                sat_snLb =
                                  \ (w2_snL5 [Occ=Once] :: GHC.Base.String) ->
                                    case ww2_snL2
                                    of _ [Occ=Dead] { GHC.Types.I# ww6_snL7 [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt 0 ww6_snL7 w2_snL5
                                    of _ [Occ=Dead]
                                    { (# ww8_snL9 [Occ=Once], ww9_snLa [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww8_snL9 ww9_snLa
                                    }
                                    } } in
                              GHC.List.foldr1_$sfoldr1
                                @ (GHC.Base.String -> GHC.Base.String)
                                GHC.Show.$fShow(,)1
                                sat_snLb
                                (GHC.Types.[] @ GHC.Show.ShowS)
                                lvl4_rger } in
                          let {
                            sat_snLd [Occ=Once] :: GHC.Base.String
                            [LclId, Str=DmdType]
                            sat_snLd =
                              GHC.Types.: @ GHC.Types.Char GHC.Show.showList__1 sat_snLc } in
                          case GHC.Show.$wshowSignedInt 0 ww4_snL4 sat_snLd
                          of _ [Occ=Dead] { (# ww6_snLf [Occ=Once], ww7_snLg [Occ=Once] #) ->
                          GHC.Types.: @ GHC.Types.Char ww6_snLf ww7_snLg
                          }
                          } } in
                      GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_snLh
                      } } in
                  GHC.CString.unpackAppendCString# "merg: "# sat_snLi } in
              case GHC.IO.Handle.Text.hPutStr2
                     GHC.IO.Handle.FD.stdout sat_snLj GHC.Types.True s2#3_snKZ
              of _ [Occ=Dead] { (# ipv44_snLl [Occ=Once], _ [Occ=Dead] #) ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld
                     @ (GHC.Types.Int, GHC.Types.Int)
                     ipv19_snIv
                     ipv44_snLl
              of _ [Occ=Dead]
              { (# ipv46_snLo [Occ=Once], ipv47_snLp [Occ=Once] #) ->
              let {
                sat_snLq [Occ=Once] :: GHC.Types.Int
                [LclId, Str=DmdType]
                sat_snLq =
                  Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv47_snLp } in
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy sat_snLq ipv46_snLo
              of s2#4_snLr { __DEFAULT ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy s2#4_snLr
              of _ [Occ=Dead]
              { (# ipv48_snLt [Occ=Once], ipv49_snLu [Occ=Once] #) ->
              let {
                sat_snLv [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                [LclId, Str=DmdType]
                sat_snLv = Automata4Coms.indices_a_init ipv49_snLu } in
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld
                     @ (GHC.Types.Int, GHC.Types.Int)
                     ipv31_snIN
                     sat_snLv
                     ipv48_snLt
              of s2#5_snLw { __DEFAULT ->
              a3_snJr s2#5_snLw
              }
              }
              }
              }
              }
              }
              }
              }
              }
              }
              }
          }
          } } in
    case ipv37_snIW of _ [Occ=Dead] {
      [] -> a4_snKH ipv36_snIV;
      : i_snLy [Occ=Once] is_snLz [Occ=Once] ->
        case GHC.Prim.writeMutVar#
               @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 is_snLz ipv36_snIV
        of s2#_snLA { __DEFAULT ->
        case GHC.Prim.writeMutVar#
               @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_snIa i_snLy s2#_snLA
        of s2#1_snLB { __DEFAULT ->
        letrec {
          a5_snLC [Occ=LoopBreaker]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
          a5_snLC =
            \ (eta1_snLD [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_snIa eta1_snLD
              of _ [Occ=Dead]
              { (# ipv38_snLF [Occ=Once], ipv39_snLG [Occ=Once] #) ->
              let {
                sat_snLH [Occ=Once] :: GHC.Types.Int
                [LclId, Str=DmdType]
                sat_snLH = inc_rgem ipv39_snLG } in
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp sat_snLH ipv38_snLF
              of s2#2_snLI { __DEFAULT ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp s2#2_snLI
              of _ [Occ=Dead]
              { (# ipv40_snLK [Occ=Once*], ipv41_snLL [Occ=Once!] #) ->
              case ipv41_snLL of _ [Occ=Dead] { GHC.Types.I# x_snLN [Occ=Once] ->
              case GHC.Prim.># x_snLN 10 of sat_snLO { __DEFAULT ->
              case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_snLO
              of _ [Occ=Dead] {
                GHC.Types.False ->
                  case GHC.Prim.readMutVar#
                         @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 ipv40_snLK
                  of _ [Occ=Dead]
                  { (# ipv42_snLR [Occ=Once*], ipv43_snLS [Occ=Once!] #) ->
                  case ipv43_snLS of _ [Occ=Dead] {
                    [] -> a4_snKH ipv42_snLR;
                    : i1_snLU [Occ=Once] is1_snLV [Occ=Once] ->
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ [GHC.Types.Int]
                             ipv1_snI4
                             is1_snLV
                             ipv42_snLR
                      of s2#3_snLW { __DEFAULT ->
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_snIa i1_snLU s2#3_snLW
                      of s2#4_snLX { __DEFAULT ->
                      a5_snLC s2#4_snLX
                      }
                      }
                  }
                  };
                GHC.Types.True ->
                  case GHC.Prim.readMutVar#
                         @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp ipv40_snLK
                  of _ [Occ=Dead]
                  { (# ipv42_snLZ [Occ=Once], ipv43_snM0 [Occ=Once] #) ->
                  case GHC.Prim.writeMutVar#
                         @ GHC.Prim.RealWorld
                         @ GHC.Types.Int
                         ipv13_snIm
                         ipv43_snM0
                         ipv42_snLZ
                  of s2#3_snM1 { __DEFAULT ->
                  case GHC.Prim.readMutVar#
                         @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_snIm s2#3_snM1
                  of _ [Occ=Dead] { (# ipv44_snM3 [Occ=Once], ipv45_snM4 #) ->
                  let {
                    sat_snM5 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                    [LclId, Str=DmdType]
                    sat_snM5 = (ipv45_snM4, ipv45_snM4) } in
                  case GHC.Prim.writeMutVar#
                         @ GHC.Prim.RealWorld
                         @ (GHC.Types.Int, GHC.Types.Int)
                         ipv11_snIj
                         sat_snM5
                         ipv44_snM3
                  of s2#4_snM6 { __DEFAULT ->
                  case GHC.Prim.readMutVar#
                         @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_snI7 s2#4_snM6
                  of _ [Occ=Dead]
                  { (# ipv46_snM8 [Occ=Once*], ipv47_snM9 [Occ=Once!] #) ->
                  case ipv47_snM9 of _ [Occ=Dead] {
                    [] ->
                      letrec {
                        a7_snMc [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a7_snMc =
                          \ (eta2_snNd [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_snNd
                            of _ [Occ=Dead]
                            { (# ipv48_snNf [Occ=Once], ipv49_snNg [Occ=Once] #) ->
                            let {
                              ix_snNh [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_snNh = Automata4Coms.indices_a_get_ix ipv49_snNg } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_snNh
                                   ipv48_snNf
                            of s2#5_snNi { __DEFAULT ->
                            let {
                              sat_snNp [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_snNp =
                                let {
                                  sat_snNo [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_snNo =
                                    case ix_snNh
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_snNk [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_snNk (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_snNm [Occ=Once], ww6_snNn [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_snNm ww6_snNn
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_snNo } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_snNp GHC.Types.True s2#5_snNi
                            of _ [Occ=Dead] { (# ipv50_snNr [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv50_snNr
                            of _ [Occ=Dead]
                            { (# ipv52_snNu [Occ=Once], ipv53_snNv [Occ=Once] #) ->
                            let {
                              sat_snNw [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_snNw = Automata4Coms.indices_a_inc_ix ipv53_snNv } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_snNw
                                   ipv52_snNu
                            of s2#6_snNx { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#6_snNx
                            of _ [Occ=Dead]
                            { (# ipv54_snNz [Occ=Once*], ipv55_snNA [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv55_snNA of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv54_snNz
                                of _ [Occ=Dead]
                                { (# ipv56_snND [Occ=Once], ipv57_snNE [Occ=Once] #) ->
                                let {
                                  sat_snNF [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_snNF = Automata4Coms.indices_a_init ipv57_snNE } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_snNF
                                       ipv56_snND
                                of s2#7_snNG { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 s2#7_snNG
                                of _ [Occ=Dead]
                                { (# ipv58_snNI [Occ=Once*], ipv59_snNJ [Occ=Once!] #) ->
                                case ipv59_snNJ of _ [Occ=Dead] {
                                  [] -> a_snIX ipv58_snNI;
                                  : i1_snNL [Occ=Once] is1_snNM [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_snI4
                                           is1_snNM
                                           ipv58_snNI
                                    of s2#8_snNN { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_snIa
                                           i1_snNL
                                           s2#8_snNN
                                    of s2#9_snNO { __DEFAULT ->
                                    a6_snMb s2#9_snNO
                                    }
                                    }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a7_snMc ipv54_snNz
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a6_snMb [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a6_snMb =
                          \ (eta2_snMd [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_snIa eta2_snMd
                            of _ [Occ=Dead]
                            { (# ipv48_snMf [Occ=Once], ipv49_snMg [Occ=Once] #) ->
                            let {
                              sat_snMh [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_snMh = inc_rgem ipv49_snMg } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv15_snIp
                                   sat_snMh
                                   ipv48_snMf
                            of s2#5_snMi { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp s2#5_snMi
                            of _ [Occ=Dead]
                            { (# ipv50_snMk [Occ=Once*], ipv51_snMl [Occ=Once!] #) ->
                            case ipv51_snMl
                            of _ [Occ=Dead] { GHC.Types.I# x1_snMn [Occ=Once] ->
                            case GHC.Prim.># x1_snMn 10 of sat_snMo { __DEFAULT ->
                            case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_snMo
                            of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 ipv50_snMk
                                of _ [Occ=Dead]
                                { (# ipv52_snMr [Occ=Once*], ipv53_snMs [Occ=Once!] #) ->
                                case ipv53_snMs of _ [Occ=Dead] {
                                  [] -> a_snIX ipv52_snMr;
                                  : i1_snMu [Occ=Once] is1_snMv [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_snI4
                                           is1_snMv
                                           ipv52_snMr
                                    of s2#6_snMw { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_snIa
                                           i1_snMu
                                           s2#6_snMw
                                    of s2#7_snMx { __DEFAULT ->
                                    a6_snMb s2#7_snMx
                                    }
                                    }
                                }
                                };
                              GHC.Types.True ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp ipv50_snMk
                                of _ [Occ=Dead]
                                { (# ipv52_snMz [Occ=Once], ipv53_snMA [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_snIm
                                       ipv53_snMA
                                       ipv52_snMz
                                of s2#6_snMB { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_snIm s2#6_snMB
                                of _ [Occ=Dead] { (# ipv54_snMD [Occ=Once], ipv55_snME #) ->
                                let {
                                  sat_snMF [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_snMF = (ipv55_snME, ipv55_snME) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       sat_snMF
                                       ipv54_snMD
                                of s2#7_snMG { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       s2#7_snMG
                                of _ [Occ=Dead] { (# ipv56_snMI [Occ=Once], ipv57_snMJ #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv19_snIv
                                       ipv57_snMJ
                                       ipv56_snMI
                                of s2#8_snMK { __DEFAULT ->
                                let {
                                  sat_snN4 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                  [LclId, Str=DmdType]
                                  sat_snN4 =
                                    let {
                                      sat_snN3 [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_snN3 =
                                        case ipv57_snMJ
                                        of _ [Occ=Dead]
                                        { (ww1_snMM [Occ=Once!], ww2_snMN [Occ=OnceL!]) ->
                                        let {
                                          sat_snN2 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_snN2 =
                                            case ww1_snMM
                                            of _ [Occ=Dead] { GHC.Types.I# ww4_snMP [Occ=Once] ->
                                            let {
                                              sat_snMX [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_snMX =
                                                let {
                                                  sat_snMW [Occ=Once]
                                                    :: GHC.Base.String -> GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_snMW =
                                                    \ (w2_snMQ [Occ=Once] :: GHC.Base.String) ->
                                                      case ww2_snMN
                                                      of _ [Occ=Dead]
                                                      { GHC.Types.I# ww6_snMS [Occ=Once] ->
                                                      case GHC.Show.$wshowSignedInt
                                                             0 ww6_snMS w2_snMQ
                                                      of _ [Occ=Dead]
                                                      { (# ww8_snMU [Occ=Once], ww9_snMV [Occ=Once] #) ->
                                                      GHC.Types.: @ GHC.Types.Char ww8_snMU ww9_snMV
                                                      }
                                                      } } in
                                                GHC.List.foldr1_$sfoldr1
                                                  @ (GHC.Base.String -> GHC.Base.String)
                                                  GHC.Show.$fShow(,)1
                                                  sat_snMW
                                                  (GHC.Types.[] @ GHC.Show.ShowS)
                                                  lvl4_rger } in
                                            let {
                                              sat_snMY [Occ=Once] :: GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_snMY =
                                                GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.showList__1
                                                  sat_snMX } in
                                            case GHC.Show.$wshowSignedInt 0 ww4_snMP sat_snMY
                                            of _ [Occ=Dead]
                                            { (# ww6_snN0 [Occ=Once], ww7_snN1 [Occ=Once] #) ->
                                            GHC.Types.: @ GHC.Types.Char ww6_snN0 ww7_snN1
                                            }
                                            } } in
                                        GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_snN2
                                        } } in
                                    GHC.CString.unpackAppendCString# "merg: "# sat_snN3 } in
                                case GHC.IO.Handle.Text.hPutStr2
                                       GHC.IO.Handle.FD.stdout sat_snN4 GHC.Types.True s2#8_snMK
                                of _ [Occ=Dead] { (# ipv58_snN6 [Occ=Once], _ [Occ=Dead] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv19_snIv
                                       ipv58_snN6
                                of _ [Occ=Dead]
                                { (# ipv60_snN9 [Occ=Once], ipv61_snNa [Occ=Once] #) ->
                                let {
                                  sat_snNb [Occ=Once] :: GHC.Types.Int
                                  [LclId, Str=DmdType]
                                  sat_snNb =
                                    Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv61_snNa } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv21_snIy
                                       sat_snNb
                                       ipv60_snN9
                                of s2#9_snNc { __DEFAULT ->
                                a7_snMc s2#9_snNc
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                            }
                            }
                            }
                            }
                            }
                            }; } in
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int)
                             ipv11_snIj
                             ipv46_snM8
                      of _ [Occ=Dead] { (# ipv48_snNQ [Occ=Once], ipv49_snNR #) ->
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int)
                             ipv19_snIv
                             ipv49_snNR
                             ipv48_snNQ
                      of s2#5_snNS { __DEFAULT ->
                      let {
                        sat_snOc [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                        [LclId, Str=DmdType]
                        sat_snOc =
                          let {
                            sat_snOb [Occ=Once] :: [GHC.Types.Char]
                            [LclId, Str=DmdType]
                            sat_snOb =
                              case ipv49_snNR
                              of _ [Occ=Dead] { (ww1_snNU [Occ=Once!], ww2_snNV [Occ=OnceL!]) ->
                              let {
                                sat_snOa [Occ=Once] :: [GHC.Types.Char]
                                [LclId, Str=DmdType]
                                sat_snOa =
                                  case ww1_snNU
                                  of _ [Occ=Dead] { GHC.Types.I# ww4_snNX [Occ=Once] ->
                                  let {
                                    sat_snO5 [Occ=Once] :: [GHC.Types.Char]
                                    [LclId, Str=DmdType]
                                    sat_snO5 =
                                      let {
                                        sat_snO4 [Occ=Once] :: GHC.Base.String -> GHC.Base.String
                                        [LclId, Str=DmdType]
                                        sat_snO4 =
                                          \ (w2_snNY [Occ=Once] :: GHC.Base.String) ->
                                            case ww2_snNV
                                            of _ [Occ=Dead] { GHC.Types.I# ww6_snO0 [Occ=Once] ->
                                            case GHC.Show.$wshowSignedInt 0 ww6_snO0 w2_snNY
                                            of _ [Occ=Dead]
                                            { (# ww8_snO2 [Occ=Once], ww9_snO3 [Occ=Once] #) ->
                                            GHC.Types.: @ GHC.Types.Char ww8_snO2 ww9_snO3
                                            }
                                            } } in
                                      GHC.List.foldr1_$sfoldr1
                                        @ (GHC.Base.String -> GHC.Base.String)
                                        GHC.Show.$fShow(,)1
                                        sat_snO4
                                        (GHC.Types.[] @ GHC.Show.ShowS)
                                        lvl4_rger } in
                                  let {
                                    sat_snO6 [Occ=Once] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_snO6 =
                                      GHC.Types.:
                                        @ GHC.Types.Char GHC.Show.showList__1 sat_snO5 } in
                                  case GHC.Show.$wshowSignedInt 0 ww4_snNX sat_snO6
                                  of _ [Occ=Dead]
                                  { (# ww6_snO8 [Occ=Once], ww7_snO9 [Occ=Once] #) ->
                                  GHC.Types.: @ GHC.Types.Char ww6_snO8 ww7_snO9
                                  }
                                  } } in
                              GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_snOa
                              } } in
                          GHC.CString.unpackAppendCString# "merg: "# sat_snOb } in
                      case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout sat_snOc GHC.Types.True s2#5_snNS
                      of _ [Occ=Dead] { (# ipv50_snOe [Occ=Once], _ [Occ=Dead] #) ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int)
                             ipv19_snIv
                             ipv50_snOe
                      of _ [Occ=Dead]
                      { (# ipv52_snOh [Occ=Once], ipv53_snOi [Occ=Once] #) ->
                      let {
                        sat_snOj [Occ=Once] :: GHC.Types.Int
                        [LclId, Str=DmdType]
                        sat_snOj =
                          Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv53_snOi } in
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy sat_snOj ipv52_snOh
                      of s2#6_snOk { __DEFAULT ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy s2#6_snOk
                      of _ [Occ=Dead]
                      { (# ipv54_snOm [Occ=Once], ipv55_snOn [Occ=Once] #) ->
                      let {
                        sat_snOo [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                        [LclId, Str=DmdType]
                        sat_snOo = Automata4Coms.indices_a_init ipv55_snOn } in
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int)
                             ipv31_snIN
                             sat_snOo
                             ipv54_snOm
                      of s2#7_snOp { __DEFAULT ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 s2#7_snOp
                      of _ [Occ=Dead]
                      { (# ipv56_snOr [Occ=Once*], ipv57_snOs [Occ=Once!] #) ->
                      case ipv57_snOs of _ [Occ=Dead] {
                        [] -> a_snIX ipv56_snOr;
                        : i1_snOu [Occ=Once] is1_snOv [Occ=Once] ->
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ [GHC.Types.Int]
                                 ipv1_snI4
                                 is1_snOv
                                 ipv56_snOr
                          of s2#8_snOw { __DEFAULT ->
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_snIa i1_snOu s2#8_snOw
                          of s2#9_snOx { __DEFAULT ->
                          a6_snMb s2#9_snOx
                          }
                          }
                      }
                      }
                      }
                      }
                      }
                      }
                      }
                      }
                      };
                    : i1_snOy [Occ=Once] is1_snOz [Occ=Once] ->
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ [GHC.Types.Int]
                             ipv3_snI7
                             is1_snOz
                             ipv46_snM8
                      of s2#5_snOA { __DEFAULT ->
                      letrec {
                        a7_snOC [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a7_snOC =
                          \ (eta2_snPb [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_snIa eta2_snPb
                            of _ [Occ=Dead]
                            { (# ipv48_snPd [Occ=Once], ipv49_snPe [Occ=Once] #) ->
                            let {
                              sat_snPf [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_snPf = inc_rgem ipv49_snPe } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv15_snIp
                                   sat_snPf
                                   ipv48_snPd
                            of s2#6_snPg { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp s2#6_snPg
                            of _ [Occ=Dead]
                            { (# ipv50_snPi [Occ=Once*], ipv51_snPj [Occ=Once!] #) ->
                            case ipv51_snPj
                            of _ [Occ=Dead] { GHC.Types.I# x1_snPl [Occ=Once] ->
                            case GHC.Prim.># x1_snPl 10 of sat_snPm { __DEFAULT ->
                            case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_snPm
                            of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 ipv50_snPi
                                of _ [Occ=Dead]
                                { (# ipv52_snPp [Occ=Once*], ipv53_snPq [Occ=Once!] #) ->
                                case ipv53_snPq of _ [Occ=Dead] {
                                  [] -> a_snIX ipv52_snPp;
                                  : i2_snPs [Occ=Once] is2_snPt [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_snI4
                                           is2_snPt
                                           ipv52_snPp
                                    of s2#7_snPu { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_snIa
                                           i2_snPs
                                           s2#7_snPu
                                    of s2#8_snPv { __DEFAULT ->
                                    a7_snOC s2#8_snPv
                                    }
                                    }
                                }
                                };
                              GHC.Types.True ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp ipv50_snPi
                                of _ [Occ=Dead]
                                { (# ipv52_snPx [Occ=Once], ipv53_snPy [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_snIm
                                       ipv53_snPy
                                       ipv52_snPx
                                of s2#7_snPz { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_snIm s2#7_snPz
                                of _ [Occ=Dead] { (# ipv54_snPB [Occ=Once], ipv55_snPC #) ->
                                let {
                                  sat_snPD [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_snPD = (ipv55_snPC, ipv55_snPC) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       sat_snPD
                                       ipv54_snPB
                                of s2#8_snPE { __DEFAULT ->
                                a6_snOB s2#8_snPE
                                }
                                }
                                }
                                }
                            }
                            }
                            }
                            }
                            }
                            };
                        a8_snOD [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a8_snOD =
                          \ (eta2_snPF [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_snPF
                            of _ [Occ=Dead]
                            { (# ipv48_snPH [Occ=Once], ipv49_snPI [Occ=Once] #) ->
                            let {
                              ix_snPJ [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_snPJ = Automata4Coms.indices_a_get_ix ipv49_snPI } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_snPJ
                                   ipv48_snPH
                            of s2#6_snPK { __DEFAULT ->
                            let {
                              sat_snPR [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_snPR =
                                let {
                                  sat_snPQ [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_snPQ =
                                    case ix_snPJ
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_snPM [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_snPM (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_snPO [Occ=Once], ww6_snPP [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_snPO ww6_snPP
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_snPQ } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_snPR GHC.Types.True s2#6_snPK
                            of _ [Occ=Dead] { (# ipv50_snPT [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv50_snPT
                            of _ [Occ=Dead]
                            { (# ipv52_snPW [Occ=Once], ipv53_snPX [Occ=Once] #) ->
                            let {
                              sat_snPY [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_snPY = Automata4Coms.indices_a_inc_ix ipv53_snPX } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_snPY
                                   ipv52_snPW
                            of s2#7_snPZ { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#7_snPZ
                            of _ [Occ=Dead]
                            { (# ipv54_snQ1 [Occ=Once*], ipv55_snQ2 [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv55_snQ2 of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv54_snQ1
                                of _ [Occ=Dead]
                                { (# ipv56_snQ5 [Occ=Once], ipv57_snQ6 [Occ=Once] #) ->
                                let {
                                  sat_snQ7 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_snQ7 = Automata4Coms.indices_a_init ipv57_snQ6 } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_snQ7
                                       ipv56_snQ5
                                of s2#8_snQ8 { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 s2#8_snQ8
                                of _ [Occ=Dead]
                                { (# ipv58_snQa [Occ=Once*], ipv59_snQb [Occ=Once!] #) ->
                                case ipv59_snQb of _ [Occ=Dead] {
                                  [] -> a_snIX ipv58_snQa;
                                  : i2_snQd [Occ=Once] is2_snQe [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_snI4
                                           is2_snQe
                                           ipv58_snQa
                                    of s2#9_snQf { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_snIa
                                           i2_snQd
                                           s2#9_snQf
                                    of s2#10_snQg { __DEFAULT ->
                                    a7_snOC s2#10_snQg
                                    }
                                    }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a8_snOD ipv54_snQ1
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a6_snOB [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a6_snOB =
                          \ (eta2_snOE [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv11_snIj
                                   eta2_snOE
                            of _ [Occ=Dead] { (# ipv48_snOG [Occ=Once], ipv49_snOH #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv49_snOH
                                   ipv48_snOG
                            of s2#6_snOI { __DEFAULT ->
                            let {
                              sat_snP2 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_snP2 =
                                let {
                                  sat_snP1 [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_snP1 =
                                    case ipv49_snOH
                                    of _ [Occ=Dead]
                                    { (ww1_snOK [Occ=Once!], ww2_snOL [Occ=OnceL!]) ->
                                    let {
                                      sat_snP0 [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_snP0 =
                                        case ww1_snOK
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_snON [Occ=Once] ->
                                        let {
                                          sat_snOV [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_snOV =
                                            let {
                                              sat_snOU [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_snOU =
                                                \ (w2_snOO [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_snOL
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_snOQ [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_snOQ w2_snOO
                                                  of _ [Occ=Dead]
                                                  { (# ww8_snOS [Occ=Once], ww9_snOT [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_snOS ww9_snOT
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_snOU
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_snOW [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_snOW =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_snOV } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_snON sat_snOW
                                        of _ [Occ=Dead]
                                        { (# ww6_snOY [Occ=Once], ww7_snOZ [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_snOY ww7_snOZ
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_snP0
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_snP1 } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_snP2 GHC.Types.True s2#6_snOI
                            of _ [Occ=Dead] { (# ipv50_snP4 [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv50_snP4
                            of _ [Occ=Dead]
                            { (# ipv52_snP7 [Occ=Once], ipv53_snP8 [Occ=Once] #) ->
                            let {
                              sat_snP9 [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_snP9 =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv53_snP8 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_snIy
                                   sat_snP9
                                   ipv52_snP7
                            of s2#7_snPa { __DEFAULT ->
                            a8_snOD s2#7_snPa
                            }
                            }
                            }
                            }
                            }; } in
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_snId i1_snOy s2#5_snOA
                      of s2#6_snQh { __DEFAULT ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_snId s2#6_snQh
                      of _ [Occ=Dead] { (# ipv48_snQj [Occ=Once], ipv49_snQk #) ->
                      let {
                        sat_snQl [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                        [LclId, Str=DmdType]
                        sat_snQl = (ipv49_snQk, ipv49_snQk) } in
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int)
                             ipv9_snIg
                             sat_snQl
                             ipv48_snQj
                      of s2#7_snQm { __DEFAULT ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int)
                             ipv11_snIj
                             s2#7_snQm
                      of _ [Occ=Dead]
                      { (# ipv50_snQo [Occ=Once], ipv51_snQp [Occ=Once] #) ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int)
                             ipv9_snIg
                             ipv50_snQo
                      of _ [Occ=Dead]
                      { (# ipv52_snQr [Occ=Once*], ipv53_snQs [Occ=Once] #) ->
                      let {
                        a9_snQt
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a9_snQt =
                          \ (eta2_snQu [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv11_snIj
                                   eta2_snQu
                            of _ [Occ=Dead] { (# ipv54_snQw [Occ=Once], ipv55_snQx #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv55_snQx
                                   ipv54_snQw
                            of s2#8_snQy { __DEFAULT ->
                            let {
                              sat_snQS [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_snQS =
                                let {
                                  sat_snQR [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_snQR =
                                    case ipv55_snQx
                                    of _ [Occ=Dead]
                                    { (ww1_snQA [Occ=Once!], ww2_snQB [Occ=OnceL!]) ->
                                    let {
                                      sat_snQQ [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_snQQ =
                                        case ww1_snQA
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_snQD [Occ=Once] ->
                                        let {
                                          sat_snQL [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_snQL =
                                            let {
                                              sat_snQK [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_snQK =
                                                \ (w2_snQE [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_snQB
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_snQG [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_snQG w2_snQE
                                                  of _ [Occ=Dead]
                                                  { (# ww8_snQI [Occ=Once], ww9_snQJ [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_snQI ww9_snQJ
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_snQK
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_snQM [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_snQM =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_snQL } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_snQD sat_snQM
                                        of _ [Occ=Dead]
                                        { (# ww6_snQO [Occ=Once], ww7_snQP [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_snQO ww7_snQP
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_snQQ
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_snQR } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_snQS GHC.Types.True s2#8_snQy
                            of _ [Occ=Dead] { (# ipv56_snQU [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv56_snQU
                            of _ [Occ=Dead]
                            { (# ipv58_snQX [Occ=Once], ipv59_snQY [Occ=Once] #) ->
                            let {
                              sat_snQZ [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_snQZ =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_snQY } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_snIy
                                   sat_snQZ
                                   ipv58_snQX
                            of s2#9_snR0 { __DEFAULT ->
                            letrec {
                              a10_snR1 [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a10_snR1 =
                                \ (eta3_snR2 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         eta3_snR2
                                  of _ [Occ=Dead]
                                  { (# ipv60_snR4 [Occ=Once], ipv61_snR5 [Occ=Once] #) ->
                                  let {
                                    ix_snR6 [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_snR6 = Automata4Coms.indices_a_get_ix ipv61_snR5 } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_snIs
                                         ix_snR6
                                         ipv60_snR4
                                  of s2#10_snR7 { __DEFAULT ->
                                  let {
                                    sat_snRe [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_snRe =
                                      let {
                                        sat_snRd [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_snRd =
                                          case ix_snR6
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_snR9 [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_snR9 (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_snRb [Occ=Once], ww6_snRc [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_snRb ww6_snRc
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_snRd } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_snRe GHC.Types.True s2#10_snR7
                                  of _ [Occ=Dead] { (# ipv62_snRg [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         ipv62_snRg
                                  of _ [Occ=Dead]
                                  { (# ipv64_snRj [Occ=Once], ipv65_snRk [Occ=Once] #) ->
                                  let {
                                    sat_snRl [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_snRl = Automata4Coms.indices_a_inc_ix ipv65_snRk } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         sat_snRl
                                         ipv64_snRj
                                  of s2#11_snRm { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         s2#11_snRm
                                  of _ [Occ=Dead]
                                  { (# ipv66_snRo [Occ=Once*], ipv67_snRp [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv67_snRp of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_snIy
                                             ipv66_snRo
                                      of _ [Occ=Dead]
                                      { (# ipv68_snRs [Occ=Once], ipv69_snRt [Occ=Once] #) ->
                                      let {
                                        sat_snRu [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_snRu = Automata4Coms.indices_a_init ipv69_snRt } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_snIN
                                             sat_snRu
                                             ipv68_snRs
                                      of s2#12_snRv { __DEFAULT ->
                                      a_snIX s2#12_snRv
                                      }
                                      };
                                    GHC.Types.True -> a10_snR1 ipv66_snRo
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a10_snR1 s2#9_snR0
                            }
                            }
                            }
                            }
                            } } in
                      let {
                        a10_snRw
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a10_snRw =
                          \ (eta2_snRx [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv11_snIj
                                   eta2_snRx
                            of _ [Occ=Dead] { (# ipv54_snRz [Occ=Once], ipv55_snRA #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv55_snRA
                                   ipv54_snRz
                            of s2#8_snRB { __DEFAULT ->
                            let {
                              sat_snRV [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_snRV =
                                let {
                                  sat_snRU [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_snRU =
                                    case ipv55_snRA
                                    of _ [Occ=Dead]
                                    { (ww1_snRD [Occ=Once!], ww2_snRE [Occ=OnceL!]) ->
                                    let {
                                      sat_snRT [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_snRT =
                                        case ww1_snRD
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_snRG [Occ=Once] ->
                                        let {
                                          sat_snRO [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_snRO =
                                            let {
                                              sat_snRN [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_snRN =
                                                \ (w2_snRH [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_snRE
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_snRJ [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_snRJ w2_snRH
                                                  of _ [Occ=Dead]
                                                  { (# ww8_snRL [Occ=Once], ww9_snRM [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_snRL ww9_snRM
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_snRN
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_snRP [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_snRP =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_snRO } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_snRG sat_snRP
                                        of _ [Occ=Dead]
                                        { (# ww6_snRR [Occ=Once], ww7_snRS [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_snRR ww7_snRS
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_snRT
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_snRU } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_snRV GHC.Types.True s2#8_snRB
                            of _ [Occ=Dead] { (# ipv56_snRX [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv56_snRX
                            of _ [Occ=Dead]
                            { (# ipv58_snS0 [Occ=Once], ipv59_snS1 [Occ=Once] #) ->
                            let {
                              sat_snS2 [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_snS2 =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_snS1 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_snIy
                                   sat_snS2
                                   ipv58_snS0
                            of s2#9_snS3 { __DEFAULT ->
                            letrec {
                              a11_snS4 [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a11_snS4 =
                                \ (eta3_snS5 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         eta3_snS5
                                  of _ [Occ=Dead]
                                  { (# ipv60_snS7 [Occ=Once], ipv61_snS8 [Occ=Once] #) ->
                                  let {
                                    ix_snS9 [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_snS9 = Automata4Coms.indices_a_get_ix ipv61_snS8 } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_snIs
                                         ix_snS9
                                         ipv60_snS7
                                  of s2#10_snSa { __DEFAULT ->
                                  let {
                                    sat_snSh [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_snSh =
                                      let {
                                        sat_snSg [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_snSg =
                                          case ix_snS9
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_snSc [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_snSc (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_snSe [Occ=Once], ww6_snSf [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_snSe ww6_snSf
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_snSg } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_snSh GHC.Types.True s2#10_snSa
                                  of _ [Occ=Dead] { (# ipv62_snSj [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         ipv62_snSj
                                  of _ [Occ=Dead]
                                  { (# ipv64_snSm [Occ=Once], ipv65_snSn [Occ=Once] #) ->
                                  let {
                                    sat_snSo [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_snSo = Automata4Coms.indices_a_inc_ix ipv65_snSn } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         sat_snSo
                                         ipv64_snSm
                                  of s2#11_snSp { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         s2#11_snSp
                                  of _ [Occ=Dead]
                                  { (# ipv66_snSr [Occ=Once*], ipv67_snSs [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv67_snSs of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_snIy
                                             ipv66_snSr
                                      of _ [Occ=Dead]
                                      { (# ipv68_snSv [Occ=Once], ipv69_snSw [Occ=Once] #) ->
                                      let {
                                        sat_snSx [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_snSx = Automata4Coms.indices_a_init ipv69_snSw } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_snIN
                                             sat_snSx
                                             ipv68_snSv
                                      of s2#12_snSy { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv15_snIp
                                             s2#12_snSy
                                      of _ [Occ=Dead]
                                      { (# ipv70_snSA [Occ=Once], ipv71_snSB [Occ=Once] #) ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv13_snIm
                                             ipv71_snSB
                                             ipv70_snSA
                                      of s2#13_snSC { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv13_snIm
                                             s2#13_snSC
                                      of _ [Occ=Dead] { (# ipv72_snSE [Occ=Once], ipv73_snSF #) ->
                                      let {
                                        sat_snSG [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_snSG = (ipv73_snSF, ipv73_snSF) } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv11_snIj
                                             sat_snSG
                                             ipv72_snSE
                                      of s2#14_snSH { __DEFAULT ->
                                      a9_snQt s2#14_snSH
                                      }
                                      }
                                      }
                                      }
                                      }
                                      };
                                    GHC.Types.True -> a11_snS4 ipv66_snSr
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a11_snS4 s2#9_snS3
                            }
                            }
                            }
                            }
                            } } in
                      let {
                        a11_snSI
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a11_snSI =
                          \ (eta2_snSJ [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv11_snIj
                                   eta2_snSJ
                            of _ [Occ=Dead] { (# ipv54_snSL [Occ=Once], ipv55_snSM #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv55_snSM
                                   ipv54_snSL
                            of s2#8_snSN { __DEFAULT ->
                            let {
                              sat_snT7 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_snT7 =
                                let {
                                  sat_snT6 [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_snT6 =
                                    case ipv55_snSM
                                    of _ [Occ=Dead]
                                    { (ww1_snSP [Occ=Once!], ww2_snSQ [Occ=OnceL!]) ->
                                    let {
                                      sat_snT5 [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_snT5 =
                                        case ww1_snSP
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_snSS [Occ=Once] ->
                                        let {
                                          sat_snT0 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_snT0 =
                                            let {
                                              sat_snSZ [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_snSZ =
                                                \ (w2_snST [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_snSQ
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_snSV [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_snSV w2_snST
                                                  of _ [Occ=Dead]
                                                  { (# ww8_snSX [Occ=Once], ww9_snSY [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_snSX ww9_snSY
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_snSZ
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_snT1 [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_snT1 =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_snT0 } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_snSS sat_snT1
                                        of _ [Occ=Dead]
                                        { (# ww6_snT3 [Occ=Once], ww7_snT4 [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_snT3 ww7_snT4
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_snT5
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_snT6 } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_snT7 GHC.Types.True s2#8_snSN
                            of _ [Occ=Dead] { (# ipv56_snT9 [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv56_snT9
                            of _ [Occ=Dead]
                            { (# ipv58_snTc [Occ=Once], ipv59_snTd [Occ=Once] #) ->
                            let {
                              sat_snTe [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_snTe =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_snTd } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_snIy
                                   sat_snTe
                                   ipv58_snTc
                            of s2#9_snTf { __DEFAULT ->
                            letrec {
                              a12_snTg [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a12_snTg =
                                \ (eta3_snTh [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         eta3_snTh
                                  of _ [Occ=Dead]
                                  { (# ipv60_snTj [Occ=Once], ipv61_snTk [Occ=Once] #) ->
                                  let {
                                    ix_snTl [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_snTl = Automata4Coms.indices_a_get_ix ipv61_snTk } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_snIs
                                         ix_snTl
                                         ipv60_snTj
                                  of s2#10_snTm { __DEFAULT ->
                                  let {
                                    sat_snTt [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_snTt =
                                      let {
                                        sat_snTs [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_snTs =
                                          case ix_snTl
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_snTo [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_snTo (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_snTq [Occ=Once], ww6_snTr [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_snTq ww6_snTr
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_snTs } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_snTt GHC.Types.True s2#10_snTm
                                  of _ [Occ=Dead] { (# ipv62_snTv [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         ipv62_snTv
                                  of _ [Occ=Dead]
                                  { (# ipv64_snTy [Occ=Once], ipv65_snTz [Occ=Once] #) ->
                                  let {
                                    sat_snTA [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_snTA = Automata4Coms.indices_a_inc_ix ipv65_snTz } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         sat_snTA
                                         ipv64_snTy
                                  of s2#11_snTB { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         s2#11_snTB
                                  of _ [Occ=Dead]
                                  { (# ipv66_snTD [Occ=Once*], ipv67_snTE [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv67_snTE of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_snIy
                                             ipv66_snTD
                                      of _ [Occ=Dead]
                                      { (# ipv68_snTH [Occ=Once], ipv69_snTI [Occ=Once] #) ->
                                      let {
                                        sat_snTJ [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_snTJ = Automata4Coms.indices_a_init ipv69_snTI } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_snIN
                                             sat_snTJ
                                             ipv68_snTH
                                      of s2#12_snTK { __DEFAULT ->
                                      a_snIX s2#12_snTK
                                      }
                                      };
                                    GHC.Types.True -> a12_snTg ipv66_snTD
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a12_snTg s2#9_snTf
                            }
                            }
                            }
                            }
                            } } in
                      let {
                        a12_snTL
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a12_snTL =
                          \ (eta2_snTM [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv9_snIg
                                   eta2_snTM
                            of _ [Occ=Dead] { (# ipv54_snTO [Occ=Once], ipv55_snTP #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv55_snTP
                                   ipv54_snTO
                            of s2#8_snTQ { __DEFAULT ->
                            let {
                              sat_snUa [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_snUa =
                                let {
                                  sat_snU9 [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_snU9 =
                                    case ipv55_snTP
                                    of _ [Occ=Dead]
                                    { (ww1_snTS [Occ=Once!], ww2_snTT [Occ=OnceL!]) ->
                                    let {
                                      sat_snU8 [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_snU8 =
                                        case ww1_snTS
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_snTV [Occ=Once] ->
                                        let {
                                          sat_snU3 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_snU3 =
                                            let {
                                              sat_snU2 [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_snU2 =
                                                \ (w2_snTW [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_snTT
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_snTY [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_snTY w2_snTW
                                                  of _ [Occ=Dead]
                                                  { (# ww8_snU0 [Occ=Once], ww9_snU1 [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_snU0 ww9_snU1
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_snU2
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_snU4 [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_snU4 =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_snU3 } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_snTV sat_snU4
                                        of _ [Occ=Dead]
                                        { (# ww6_snU6 [Occ=Once], ww7_snU7 [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_snU6 ww7_snU7
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_snU8
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_snU9 } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_snUa GHC.Types.True s2#8_snTQ
                            of _ [Occ=Dead] { (# ipv56_snUc [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv56_snUc
                            of _ [Occ=Dead]
                            { (# ipv58_snUf [Occ=Once], ipv59_snUg [Occ=Once] #) ->
                            let {
                              sat_snUh [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_snUh =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_snUg } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_snIy
                                   sat_snUh
                                   ipv58_snUf
                            of s2#9_snUi { __DEFAULT ->
                            letrec {
                              a13_snUj [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a13_snUj =
                                \ (eta3_snUk [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         eta3_snUk
                                  of _ [Occ=Dead]
                                  { (# ipv60_snUm [Occ=Once], ipv61_snUn [Occ=Once] #) ->
                                  let {
                                    ix_snUo [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_snUo = Automata4Coms.indices_a_get_ix ipv61_snUn } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_snIs
                                         ix_snUo
                                         ipv60_snUm
                                  of s2#10_snUp { __DEFAULT ->
                                  let {
                                    sat_snUw [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_snUw =
                                      let {
                                        sat_snUv [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_snUv =
                                          case ix_snUo
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_snUr [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_snUr (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_snUt [Occ=Once], ww6_snUu [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_snUt ww6_snUu
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_snUv } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_snUw GHC.Types.True s2#10_snUp
                                  of _ [Occ=Dead] { (# ipv62_snUy [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         ipv62_snUy
                                  of _ [Occ=Dead]
                                  { (# ipv64_snUB [Occ=Once], ipv65_snUC [Occ=Once] #) ->
                                  let {
                                    sat_snUD [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_snUD = Automata4Coms.indices_a_inc_ix ipv65_snUC } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         sat_snUD
                                         ipv64_snUB
                                  of s2#11_snUE { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         s2#11_snUE
                                  of _ [Occ=Dead]
                                  { (# ipv66_snUG [Occ=Once*], ipv67_snUH [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv67_snUH of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_snIy
                                             ipv66_snUG
                                      of _ [Occ=Dead]
                                      { (# ipv68_snUK [Occ=Once], ipv69_snUL [Occ=Once] #) ->
                                      let {
                                        sat_snUM [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_snUM = Automata4Coms.indices_a_init ipv69_snUL } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_snIN
                                             sat_snUM
                                             ipv68_snUK
                                      of s2#12_snUN { __DEFAULT ->
                                      a2_snJq s2#12_snUN
                                      }
                                      };
                                    GHC.Types.True -> a13_snUj ipv66_snUG
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a13_snUj s2#9_snUi
                            }
                            }
                            }
                            }
                            } } in
                      let {
                        a13_snUO
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a13_snUO =
                          \ (eta2_snUP [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv9_snIg
                                   eta2_snUP
                            of _ [Occ=Dead] { (# ipv54_snUR [Occ=Once], ipv55_snUS #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv55_snUS
                                   ipv54_snUR
                            of s2#8_snUT { __DEFAULT ->
                            let {
                              sat_snVd [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_snVd =
                                let {
                                  sat_snVc [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_snVc =
                                    case ipv55_snUS
                                    of _ [Occ=Dead]
                                    { (ww1_snUV [Occ=Once!], ww2_snUW [Occ=OnceL!]) ->
                                    let {
                                      sat_snVb [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_snVb =
                                        case ww1_snUV
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_snUY [Occ=Once] ->
                                        let {
                                          sat_snV6 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_snV6 =
                                            let {
                                              sat_snV5 [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_snV5 =
                                                \ (w2_snUZ [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_snUW
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_snV1 [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_snV1 w2_snUZ
                                                  of _ [Occ=Dead]
                                                  { (# ww8_snV3 [Occ=Once], ww9_snV4 [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_snV3 ww9_snV4
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_snV5
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_snV7 [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_snV7 =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_snV6 } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_snUY sat_snV7
                                        of _ [Occ=Dead]
                                        { (# ww6_snV9 [Occ=Once], ww7_snVa [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_snV9 ww7_snVa
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_snVb
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_snVc } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_snVd GHC.Types.True s2#8_snUT
                            of _ [Occ=Dead] { (# ipv56_snVf [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv56_snVf
                            of _ [Occ=Dead]
                            { (# ipv58_snVi [Occ=Once], ipv59_snVj [Occ=Once] #) ->
                            let {
                              sat_snVk [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_snVk =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_snVj } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_snIy
                                   sat_snVk
                                   ipv58_snVi
                            of s2#9_snVl { __DEFAULT ->
                            letrec {
                              a14_snVm [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a14_snVm =
                                \ (eta3_snVn [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         eta3_snVn
                                  of _ [Occ=Dead]
                                  { (# ipv60_snVp [Occ=Once], ipv61_snVq [Occ=Once] #) ->
                                  let {
                                    ix_snVr [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_snVr = Automata4Coms.indices_a_get_ix ipv61_snVq } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_snIs
                                         ix_snVr
                                         ipv60_snVp
                                  of s2#10_snVs { __DEFAULT ->
                                  let {
                                    sat_snVz [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_snVz =
                                      let {
                                        sat_snVy [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_snVy =
                                          case ix_snVr
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_snVu [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_snVu (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_snVw [Occ=Once], ww6_snVx [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_snVw ww6_snVx
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_snVy } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_snVz GHC.Types.True s2#10_snVs
                                  of _ [Occ=Dead] { (# ipv62_snVB [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         ipv62_snVB
                                  of _ [Occ=Dead]
                                  { (# ipv64_snVE [Occ=Once], ipv65_snVF [Occ=Once] #) ->
                                  let {
                                    sat_snVG [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_snVG = Automata4Coms.indices_a_inc_ix ipv65_snVF } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         sat_snVG
                                         ipv64_snVE
                                  of s2#11_snVH { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         s2#11_snVH
                                  of _ [Occ=Dead]
                                  { (# ipv66_snVJ [Occ=Once*], ipv67_snVK [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv67_snVK of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_snIy
                                             ipv66_snVJ
                                      of _ [Occ=Dead]
                                      { (# ipv68_snVN [Occ=Once], ipv69_snVO [Occ=Once] #) ->
                                      let {
                                        sat_snVP [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_snVP = Automata4Coms.indices_a_init ipv69_snVO } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_snIN
                                             sat_snVP
                                             ipv68_snVN
                                      of s2#12_snVQ { __DEFAULT ->
                                      a_snIX s2#12_snVQ
                                      }
                                      };
                                    GHC.Types.True -> a14_snVm ipv66_snVJ
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a14_snVm s2#9_snVl
                            }
                            }
                            }
                            }
                            } } in
                      let {
                        a14_snVR
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a14_snVR =
                          \ (eta2_snVS [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            letrec {
                              a16_snVU
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a16_snVU =
                                \ (eta3_snWp [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_snI7 eta3_snWp
                                  of _ [Occ=Dead]
                                  { (# ipv54_snWr [Occ=Once*], ipv55_snWs [Occ=Once!] #) ->
                                  case ipv55_snWs of _ [Occ=Dead] {
                                    [] ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv11_snIj
                                             ipv54_snWr
                                      of _ [Occ=Dead] { (# ipv56_snWv [Occ=Once], ipv57_snWw #) ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv19_snIv
                                             ipv57_snWw
                                             ipv56_snWv
                                      of s2#8_snWx { __DEFAULT ->
                                      let {
                                        sat_snWR [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                        [LclId, Str=DmdType]
                                        sat_snWR =
                                          let {
                                            sat_snWQ [Occ=Once] :: [GHC.Types.Char]
                                            [LclId, Str=DmdType]
                                            sat_snWQ =
                                              case ipv57_snWw
                                              of _ [Occ=Dead]
                                              { (ww1_snWz [Occ=Once!], ww2_snWA [Occ=OnceL!]) ->
                                              let {
                                                sat_snWP [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_snWP =
                                                  case ww1_snWz
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww4_snWC [Occ=Once] ->
                                                  let {
                                                    sat_snWK [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId, Str=DmdType]
                                                    sat_snWK =
                                                      let {
                                                        sat_snWJ [Occ=Once]
                                                          :: GHC.Base.String -> GHC.Base.String
                                                        [LclId, Str=DmdType]
                                                        sat_snWJ =
                                                          \ (w2_snWD [Occ=Once]
                                                               :: GHC.Base.String) ->
                                                            case ww2_snWA
                                                            of _ [Occ=Dead]
                                                            { GHC.Types.I# ww6_snWF [Occ=Once] ->
                                                            case GHC.Show.$wshowSignedInt
                                                                   0 ww6_snWF w2_snWD
                                                            of _ [Occ=Dead]
                                                            { (# ww8_snWH [Occ=Once], ww9_snWI [Occ=Once] #) ->
                                                            GHC.Types.:
                                                              @ GHC.Types.Char ww8_snWH ww9_snWI
                                                            }
                                                            } } in
                                                      GHC.List.foldr1_$sfoldr1
                                                        @ (GHC.Base.String -> GHC.Base.String)
                                                        GHC.Show.$fShow(,)1
                                                        sat_snWJ
                                                        (GHC.Types.[] @ GHC.Show.ShowS)
                                                        lvl4_rger } in
                                                  let {
                                                    sat_snWL [Occ=Once] :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_snWL =
                                                      GHC.Types.:
                                                        @ GHC.Types.Char
                                                        GHC.Show.showList__1
                                                        sat_snWK } in
                                                  case GHC.Show.$wshowSignedInt 0 ww4_snWC sat_snWL
                                                  of _ [Occ=Dead]
                                                  { (# ww6_snWN [Occ=Once], ww7_snWO [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww6_snWN ww7_snWO
                                                  }
                                                  } } in
                                              GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_snWP
                                              } } in
                                          GHC.CString.unpackAppendCString# "merg: "# sat_snWQ } in
                                      case GHC.IO.Handle.Text.hPutStr2
                                             GHC.IO.Handle.FD.stdout
                                             sat_snWR
                                             GHC.Types.True
                                             s2#8_snWx
                                      of _ [Occ=Dead] { (# ipv58_snWT [Occ=Once], _ [Occ=Dead] #) ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv19_snIv
                                             ipv58_snWT
                                      of _ [Occ=Dead]
                                      { (# ipv60_snWW [Occ=Once], ipv61_snWX [Occ=Once] #) ->
                                      let {
                                        sat_snWY [Occ=Once] :: GHC.Types.Int
                                        [LclId, Str=DmdType]
                                        sat_snWY =
                                          Data.Tuple.snd
                                            @ GHC.Types.Int @ GHC.Types.Int ipv61_snWX } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_snIy
                                             sat_snWY
                                             ipv60_snWW
                                      of s2#9_snWZ { __DEFAULT ->
                                      letrec {
                                        a17_snX0 [Occ=LoopBreaker]
                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                        a17_snX0 =
                                          \ (eta4_snX1 [Occ=Once]
                                               :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                            case GHC.Prim.readMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_snIN
                                                   eta4_snX1
                                            of _ [Occ=Dead]
                                            { (# ipv62_snX3 [Occ=Once], ipv63_snX4 [Occ=Once] #) ->
                                            let {
                                              ix_snX5 [Dmd=<L,U(U)>] :: GHC.Types.Int
                                              [LclId, Str=DmdType]
                                              ix_snX5 =
                                                Automata4Coms.indices_a_get_ix ipv63_snX4 } in
                                            case GHC.Prim.writeMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ GHC.Types.Int
                                                   ipv17_snIs
                                                   ix_snX5
                                                   ipv62_snX3
                                            of s2#10_snX6 { __DEFAULT ->
                                            let {
                                              sat_snXd [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_snXd =
                                                let {
                                                  sat_snXc [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_snXc =
                                                    case ix_snX5
                                                    of _ [Occ=Dead]
                                                    { GHC.Types.I# ww3_snX8 [Occ=Once] ->
                                                    case GHC.Show.$wshowSignedInt
                                                           0
                                                           ww3_snX8
                                                           (GHC.Types.[] @ GHC.Types.Char)
                                                    of _ [Occ=Dead]
                                                    { (# ww5_snXa [Occ=Once], ww6_snXb [Occ=Once] #) ->
                                                    GHC.Types.: @ GHC.Types.Char ww5_snXa ww6_snXb
                                                    }
                                                    } } in
                                                GHC.CString.unpackAppendCString#
                                                  "filtd:"# sat_snXc } in
                                            case GHC.IO.Handle.Text.hPutStr2
                                                   GHC.IO.Handle.FD.stdout
                                                   sat_snXd
                                                   GHC.Types.True
                                                   s2#10_snX6
                                            of _ [Occ=Dead]
                                            { (# ipv64_snXf [Occ=Once], _ [Occ=Dead] #) ->
                                            case GHC.Prim.readMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_snIN
                                                   ipv64_snXf
                                            of _ [Occ=Dead]
                                            { (# ipv66_snXi [Occ=Once], ipv67_snXj [Occ=Once] #) ->
                                            let {
                                              sat_snXk [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                              [LclId, Str=DmdType]
                                              sat_snXk =
                                                Automata4Coms.indices_a_inc_ix ipv67_snXj } in
                                            case GHC.Prim.writeMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_snIN
                                                   sat_snXk
                                                   ipv66_snXi
                                            of s2#11_snXl { __DEFAULT ->
                                            case GHC.Prim.readMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_snIN
                                                   s2#11_snXl
                                            of _ [Occ=Dead]
                                            { (# ipv68_snXn [Occ=Once*], ipv69_snXo [Occ=Once] #) ->
                                            case Automata4Coms.indices_a_check ipv69_snXo
                                            of _ [Occ=Dead] {
                                              GHC.Types.False ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ GHC.Types.Int
                                                       ipv21_snIy
                                                       ipv68_snXn
                                                of _ [Occ=Dead]
                                                { (# ipv70_snXr [Occ=Once], ipv71_snXs [Occ=Once] #) ->
                                                let {
                                                  sat_snXt [Occ=Once]
                                                    :: (GHC.Types.Int, GHC.Types.Int)
                                                  [LclId, Str=DmdType]
                                                  sat_snXt =
                                                    Automata4Coms.indices_a_init ipv71_snXs } in
                                                case GHC.Prim.writeMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_snIN
                                                       sat_snXt
                                                       ipv70_snXr
                                                of s2#12_snXu { __DEFAULT ->
                                                a_snIX s2#12_snXu
                                                }
                                                };
                                              GHC.Types.True -> a17_snX0 ipv68_snXn
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }; } in
                                      a17_snX0 s2#9_snWZ
                                      }
                                      }
                                      }
                                      }
                                      };
                                    : i2_snXv [Occ=Once] is2_snXw [Occ=Once] ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ [GHC.Types.Int]
                                             ipv3_snI7
                                             is2_snXw
                                             ipv54_snWr
                                      of s2#8_snXx { __DEFAULT ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv7_snId
                                             i2_snXv
                                             s2#8_snXx
                                      of s2#9_snXy { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv7_snId
                                             s2#9_snXy
                                      of _ [Occ=Dead] { (# ipv56_snXA [Occ=Once], ipv57_snXB #) ->
                                      let {
                                        sat_snXC [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_snXC = (ipv57_snXB, ipv57_snXB) } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv9_snIg
                                             sat_snXC
                                             ipv56_snXA
                                      of s2#10_snXD { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv11_snIj
                                             s2#10_snXD
                                      of _ [Occ=Dead]
                                      { (# ipv58_snXF [Occ=Once], ipv59_snXG [Occ=Once] #) ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv9_snIg
                                             ipv58_snXF
                                      of _ [Occ=Dead]
                                      { (# ipv60_snXI [Occ=Once*], ipv61_snXJ [Occ=Once] #) ->
                                      case Automata4Coms.merge_a_le_pair
                                             @ GHC.Types.Int ipv59_snXG ipv61_snXJ
                                      of _ [Occ=Dead] {
                                        GHC.Types.False ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv9_snIg
                                                 ipv60_snXI
                                          of _ [Occ=Dead]
                                          { (# ipv62_snXM [Occ=Once], ipv63_snXN #) ->
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_snIv
                                                 ipv63_snXN
                                                 ipv62_snXM
                                          of s2#11_snXO { __DEFAULT ->
                                          let {
                                            sat_snY8 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_snY8 =
                                              let {
                                                sat_snY7 [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_snY7 =
                                                  case ipv63_snXN
                                                  of _ [Occ=Dead]
                                                  { (ww1_snXQ [Occ=Once!], ww2_snXR [Occ=OnceL!]) ->
                                                  let {
                                                    sat_snY6 [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId, Str=DmdType]
                                                    sat_snY6 =
                                                      case ww1_snXQ
                                                      of _ [Occ=Dead]
                                                      { GHC.Types.I# ww4_snXT [Occ=Once] ->
                                                      let {
                                                        sat_snY1 [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_snY1 =
                                                          let {
                                                            sat_snY0 [Occ=Once]
                                                              :: GHC.Base.String -> GHC.Base.String
                                                            [LclId, Str=DmdType]
                                                            sat_snY0 =
                                                              \ (w2_snXU [Occ=Once]
                                                                   :: GHC.Base.String) ->
                                                                case ww2_snXR
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww6_snXW [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0 ww6_snXW w2_snXU
                                                                of _ [Occ=Dead]
                                                                { (# ww8_snXY [Occ=Once], ww9_snXZ [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww8_snXY ww9_snXZ
                                                                }
                                                                } } in
                                                          GHC.List.foldr1_$sfoldr1
                                                            @ (GHC.Base.String -> GHC.Base.String)
                                                            GHC.Show.$fShow(,)1
                                                            sat_snY0
                                                            (GHC.Types.[] @ GHC.Show.ShowS)
                                                            lvl4_rger } in
                                                      let {
                                                        sat_snY2 [Occ=Once] :: GHC.Base.String
                                                        [LclId, Str=DmdType]
                                                        sat_snY2 =
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.showList__1
                                                            sat_snY1 } in
                                                      case GHC.Show.$wshowSignedInt
                                                             0 ww4_snXT sat_snY2
                                                      of _ [Occ=Dead]
                                                      { (# ww6_snY4 [Occ=Once], ww7_snY5 [Occ=Once] #) ->
                                                      GHC.Types.: @ GHC.Types.Char ww6_snY4 ww7_snY5
                                                      }
                                                      } } in
                                                  GHC.Types.:
                                                    @ GHC.Types.Char GHC.Show.shows13 sat_snY6
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "merg: "# sat_snY7 } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_snY8
                                                 GHC.Types.True
                                                 s2#11_snXO
                                          of _ [Occ=Dead]
                                          { (# ipv64_snYa [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_snIv
                                                 ipv64_snYa
                                          of _ [Occ=Dead]
                                          { (# ipv66_snYd [Occ=Once], ipv67_snYe [Occ=Once] #) ->
                                          let {
                                            sat_snYf [Occ=Once] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            sat_snYf =
                                              Data.Tuple.snd
                                                @ GHC.Types.Int @ GHC.Types.Int ipv67_snYe } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv21_snIy
                                                 sat_snYf
                                                 ipv66_snYd
                                          of s2#12_snYg { __DEFAULT ->
                                          a15_snVT s2#12_snYg
                                          }
                                          }
                                          }
                                          }
                                          };
                                        GHC.Types.True ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv11_snIj
                                                 ipv60_snXI
                                          of _ [Occ=Dead]
                                          { (# ipv62_snYi [Occ=Once], ipv63_snYj #) ->
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_snIv
                                                 ipv63_snYj
                                                 ipv62_snYi
                                          of s2#11_snYk { __DEFAULT ->
                                          let {
                                            sat_snYE [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_snYE =
                                              let {
                                                sat_snYD [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_snYD =
                                                  case ipv63_snYj
                                                  of _ [Occ=Dead]
                                                  { (ww1_snYm [Occ=Once!], ww2_snYn [Occ=OnceL!]) ->
                                                  let {
                                                    sat_snYC [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId, Str=DmdType]
                                                    sat_snYC =
                                                      case ww1_snYm
                                                      of _ [Occ=Dead]
                                                      { GHC.Types.I# ww4_snYp [Occ=Once] ->
                                                      let {
                                                        sat_snYx [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_snYx =
                                                          let {
                                                            sat_snYw [Occ=Once]
                                                              :: GHC.Base.String -> GHC.Base.String
                                                            [LclId, Str=DmdType]
                                                            sat_snYw =
                                                              \ (w2_snYq [Occ=Once]
                                                                   :: GHC.Base.String) ->
                                                                case ww2_snYn
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww6_snYs [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0 ww6_snYs w2_snYq
                                                                of _ [Occ=Dead]
                                                                { (# ww8_snYu [Occ=Once], ww9_snYv [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww8_snYu ww9_snYv
                                                                }
                                                                } } in
                                                          GHC.List.foldr1_$sfoldr1
                                                            @ (GHC.Base.String -> GHC.Base.String)
                                                            GHC.Show.$fShow(,)1
                                                            sat_snYw
                                                            (GHC.Types.[] @ GHC.Show.ShowS)
                                                            lvl4_rger } in
                                                      let {
                                                        sat_snYy [Occ=Once] :: GHC.Base.String
                                                        [LclId, Str=DmdType]
                                                        sat_snYy =
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.showList__1
                                                            sat_snYx } in
                                                      case GHC.Show.$wshowSignedInt
                                                             0 ww4_snYp sat_snYy
                                                      of _ [Occ=Dead]
                                                      { (# ww6_snYA [Occ=Once], ww7_snYB [Occ=Once] #) ->
                                                      GHC.Types.: @ GHC.Types.Char ww6_snYA ww7_snYB
                                                      }
                                                      } } in
                                                  GHC.Types.:
                                                    @ GHC.Types.Char GHC.Show.shows13 sat_snYC
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "merg: "# sat_snYD } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_snYE
                                                 GHC.Types.True
                                                 s2#11_snYk
                                          of _ [Occ=Dead]
                                          { (# ipv64_snYG [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_snIv
                                                 ipv64_snYG
                                          of _ [Occ=Dead]
                                          { (# ipv66_snYJ [Occ=Once], ipv67_snYK [Occ=Once] #) ->
                                          let {
                                            sat_snYL [Occ=Once] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            sat_snYL =
                                              Data.Tuple.snd
                                                @ GHC.Types.Int @ GHC.Types.Int ipv67_snYK } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv21_snIy
                                                 sat_snYL
                                                 ipv66_snYJ
                                          of s2#12_snYM { __DEFAULT ->
                                          letrec {
                                            a17_snYN [Occ=LoopBreaker]
                                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                            [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                            a17_snYN =
                                              \ (eta4_snYO [Occ=Once]
                                                   :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_snIN
                                                       eta4_snYO
                                                of _ [Occ=Dead]
                                                { (# ipv68_snYQ [Occ=Once], ipv69_snYR [Occ=Once] #) ->
                                                let {
                                                  ix_snYS [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                  [LclId, Str=DmdType]
                                                  ix_snYS =
                                                    Automata4Coms.indices_a_get_ix ipv69_snYR } in
                                                case GHC.Prim.writeMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ GHC.Types.Int
                                                       ipv17_snIs
                                                       ix_snYS
                                                       ipv68_snYQ
                                                of s2#13_snYT { __DEFAULT ->
                                                let {
                                                  sat_snZ0 [Occ=Once, Dmd=<L,1*U>]
                                                    :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_snZ0 =
                                                    let {
                                                      sat_snYZ [Occ=Once] :: [GHC.Types.Char]
                                                      [LclId, Str=DmdType]
                                                      sat_snYZ =
                                                        case ix_snYS
                                                        of _ [Occ=Dead]
                                                        { GHC.Types.I# ww3_snYV [Occ=Once] ->
                                                        case GHC.Show.$wshowSignedInt
                                                               0
                                                               ww3_snYV
                                                               (GHC.Types.[] @ GHC.Types.Char)
                                                        of _ [Occ=Dead]
                                                        { (# ww5_snYX [Occ=Once], ww6_snYY [Occ=Once] #) ->
                                                        GHC.Types.:
                                                          @ GHC.Types.Char ww5_snYX ww6_snYY
                                                        }
                                                        } } in
                                                    GHC.CString.unpackAppendCString#
                                                      "filtd:"# sat_snYZ } in
                                                case GHC.IO.Handle.Text.hPutStr2
                                                       GHC.IO.Handle.FD.stdout
                                                       sat_snZ0
                                                       GHC.Types.True
                                                       s2#13_snYT
                                                of _ [Occ=Dead]
                                                { (# ipv70_snZ2 [Occ=Once], _ [Occ=Dead] #) ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_snIN
                                                       ipv70_snZ2
                                                of _ [Occ=Dead]
                                                { (# ipv72_snZ5 [Occ=Once], ipv73_snZ6 [Occ=Once] #) ->
                                                let {
                                                  sat_snZ7 [Occ=Once]
                                                    :: (GHC.Types.Int, GHC.Types.Int)
                                                  [LclId, Str=DmdType]
                                                  sat_snZ7 =
                                                    Automata4Coms.indices_a_inc_ix ipv73_snZ6 } in
                                                case GHC.Prim.writeMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_snIN
                                                       sat_snZ7
                                                       ipv72_snZ5
                                                of s2#14_snZ8 { __DEFAULT ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_snIN
                                                       s2#14_snZ8
                                                of _ [Occ=Dead]
                                                { (# ipv74_snZa [Occ=Once*], ipv75_snZb [Occ=Once] #) ->
                                                case Automata4Coms.indices_a_check ipv75_snZb
                                                of _ [Occ=Dead] {
                                                  GHC.Types.False ->
                                                    case GHC.Prim.readMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ GHC.Types.Int
                                                           ipv21_snIy
                                                           ipv74_snZa
                                                    of _ [Occ=Dead]
                                                    { (# ipv76_snZe [Occ=Once], ipv77_snZf [Occ=Once] #) ->
                                                    let {
                                                      sat_snZg [Occ=Once]
                                                        :: (GHC.Types.Int, GHC.Types.Int)
                                                      [LclId, Str=DmdType]
                                                      sat_snZg =
                                                        Automata4Coms.indices_a_init ipv77_snZf } in
                                                    case GHC.Prim.writeMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ (GHC.Types.Int, GHC.Types.Int)
                                                           ipv31_snIN
                                                           sat_snZg
                                                           ipv76_snZe
                                                    of s2#15_snZh { __DEFAULT ->
                                                    case GHC.Prim.readMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ [GHC.Types.Int]
                                                           ipv3_snI7
                                                           s2#15_snZh
                                                    of _ [Occ=Dead]
                                                    { (# ipv78_snZj [Occ=Once*], ipv79_snZk [Occ=Once!] #) ->
                                                    case ipv79_snZk of _ [Occ=Dead] {
                                                      [] -> a13_snUO ipv78_snZj;
                                                      : i3_snZm [Occ=Once] is3_snZn [Occ=Once] ->
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ [GHC.Types.Int]
                                                               ipv3_snI7
                                                               is3_snZn
                                                               ipv78_snZj
                                                        of s2#16_snZo { __DEFAULT ->
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv7_snId
                                                               i3_snZm
                                                               s2#16_snZo
                                                        of s2#17_snZp { __DEFAULT ->
                                                        a12_snTL s2#17_snZp
                                                        }
                                                        }
                                                    }
                                                    }
                                                    }
                                                    };
                                                  GHC.Types.True -> a17_snYN ipv74_snZa
                                                }
                                                }
                                                }
                                                }
                                                }
                                                }
                                                }; } in
                                          a17_snYN s2#12_snYM
                                          }
                                          }
                                          }
                                          }
                                          }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                  }
                                  };
                              a15_snVT [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a15_snVT =
                                \ (eta3_snVV [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         eta3_snVV
                                  of _ [Occ=Dead]
                                  { (# ipv54_snVX [Occ=Once], ipv55_snVY [Occ=Once] #) ->
                                  let {
                                    ix_snVZ [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_snVZ = Automata4Coms.indices_a_get_ix ipv55_snVY } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_snIs
                                         ix_snVZ
                                         ipv54_snVX
                                  of s2#8_snW0 { __DEFAULT ->
                                  let {
                                    sat_snW7 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_snW7 =
                                      let {
                                        sat_snW6 [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_snW6 =
                                          case ix_snVZ
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_snW2 [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_snW2 (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_snW4 [Occ=Once], ww6_snW5 [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_snW4 ww6_snW5
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_snW6 } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_snW7 GHC.Types.True s2#8_snW0
                                  of _ [Occ=Dead] { (# ipv56_snW9 [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         ipv56_snW9
                                  of _ [Occ=Dead]
                                  { (# ipv58_snWc [Occ=Once], ipv59_snWd [Occ=Once] #) ->
                                  let {
                                    sat_snWe [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_snWe = Automata4Coms.indices_a_inc_ix ipv59_snWd } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         sat_snWe
                                         ipv58_snWc
                                  of s2#9_snWf { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         s2#9_snWf
                                  of _ [Occ=Dead]
                                  { (# ipv60_snWh [Occ=Once*], ipv61_snWi [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv61_snWi of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_snIy
                                             ipv60_snWh
                                      of _ [Occ=Dead]
                                      { (# ipv62_snWl [Occ=Once], ipv63_snWm [Occ=Once] #) ->
                                      let {
                                        sat_snWn [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_snWn = Automata4Coms.indices_a_init ipv63_snWm } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_snIN
                                             sat_snWn
                                             ipv62_snWl
                                      of s2#10_snWo { __DEFAULT ->
                                      a16_snVU s2#10_snWo
                                      }
                                      };
                                    GHC.Types.True -> a15_snVT ipv60_snWh
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a16_snVU eta2_snVS } in
                      let {
                        a15_snZq
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a15_snZq =
                          \ (eta2_snZr [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_snI7 eta2_snZr
                            of _ [Occ=Dead]
                            { (# ipv54_snZt [Occ=Once*], ipv55_snZu [Occ=Once!] #) ->
                            case ipv55_snZu of _ [Occ=Dead] {
                              [] ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_snIm ipv54_snZt
                                of _ [Occ=Dead] { (# ipv56_snZx [Occ=Once], ipv57_snZy #) ->
                                let {
                                  sat_snZz [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_snZz = (ipv57_snZy, ipv57_snZy) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       sat_snZz
                                       ipv56_snZx
                                of s2#8_snZA { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       s2#8_snZA
                                of _ [Occ=Dead]
                                { (# ipv58_snZC [Occ=Once], ipv59_snZD [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       ipv58_snZC
                                of _ [Occ=Dead]
                                { (# ipv60_snZF [Occ=Once*], ipv61_snZG [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv59_snZD ipv61_snZG
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_snIg
                                           ipv60_snZF
                                    of _ [Occ=Dead] { (# ipv62_snZJ [Occ=Once], ipv63_snZK #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv63_snZK
                                           ipv62_snZJ
                                    of s2#9_snZL { __DEFAULT ->
                                    let {
                                      sat_so05 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_so05 =
                                        let {
                                          sat_so04 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_so04 =
                                            case ipv63_snZK
                                            of _ [Occ=Dead]
                                            { (ww1_snZN [Occ=Once!], ww2_snZO [Occ=OnceL!]) ->
                                            let {
                                              sat_so03 [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_so03 =
                                                case ww1_snZN
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_snZQ [Occ=Once] ->
                                                let {
                                                  sat_snZY [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_snZY =
                                                    let {
                                                      sat_snZX [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_snZX =
                                                        \ (w2_snZR [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_snZO
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_snZT [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_snZT w2_snZR
                                                          of _ [Occ=Dead]
                                                          { (# ww8_snZV [Occ=Once], ww9_snZW [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_snZV ww9_snZW
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_snZX
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_snZZ [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_snZZ =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_snZY } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_snZQ sat_snZZ
                                                of _ [Occ=Dead]
                                                { (# ww6_so01 [Occ=Once], ww7_so02 [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_so01 ww7_so02
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_so03
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_so04 } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout sat_so05 GHC.Types.True s2#9_snZL
                                    of _ [Occ=Dead] { (# ipv64_so07 [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv64_so07
                                    of _ [Occ=Dead]
                                    { (# ipv66_so0a [Occ=Once], ipv67_so0b [Occ=Once] #) ->
                                    let {
                                      sat_so0c [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_so0c =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_so0b } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_so0c
                                           ipv66_so0a
                                    of s2#10_so0d { __DEFAULT ->
                                    letrec {
                                      a16_so0e [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a16_so0e =
                                        \ (eta3_so0f [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 eta3_so0f
                                          of _ [Occ=Dead]
                                          { (# ipv68_so0h [Occ=Once], ipv69_so0i [Occ=Once] #) ->
                                          let {
                                            ix_so0j [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_so0j = Automata4Coms.indices_a_get_ix ipv69_so0i } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_snIs
                                                 ix_so0j
                                                 ipv68_so0h
                                          of s2#11_so0k { __DEFAULT ->
                                          let {
                                            sat_so0r [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_so0r =
                                              let {
                                                sat_so0q [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_so0q =
                                                  case ix_so0j
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_so0m [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_so0m (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_so0o [Occ=Once], ww6_so0p [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_so0o ww6_so0p
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_so0q } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_so0r
                                                 GHC.Types.True
                                                 s2#11_so0k
                                          of _ [Occ=Dead]
                                          { (# ipv70_so0t [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 ipv70_so0t
                                          of _ [Occ=Dead]
                                          { (# ipv72_so0w [Occ=Once], ipv73_so0x [Occ=Once] #) ->
                                          let {
                                            sat_so0y [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_so0y =
                                              Automata4Coms.indices_a_inc_ix ipv73_so0x } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 sat_so0y
                                                 ipv72_so0w
                                          of s2#12_so0z { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 s2#12_so0z
                                          of _ [Occ=Dead]
                                          { (# ipv74_so0B [Occ=Once*], ipv75_so0C [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_so0C
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_snIy
                                                     ipv74_so0B
                                              of _ [Occ=Dead]
                                              { (# ipv76_so0F [Occ=Once], ipv77_so0G [Occ=Once] #) ->
                                              let {
                                                sat_so0H [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_so0H =
                                                  Automata4Coms.indices_a_init ipv77_so0G } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_snIN
                                                     sat_so0H
                                                     ipv76_so0F
                                              of s2#13_so0I { __DEFAULT ->
                                              a11_snSI s2#13_so0I
                                              }
                                              };
                                            GHC.Types.True -> a16_so0e ipv74_so0B
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a16_so0e s2#10_so0d
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_snIj
                                           ipv60_snZF
                                    of _ [Occ=Dead] { (# ipv62_so0K [Occ=Once], ipv63_so0L #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv63_so0L
                                           ipv62_so0K
                                    of s2#9_so0M { __DEFAULT ->
                                    let {
                                      sat_so16 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_so16 =
                                        let {
                                          sat_so15 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_so15 =
                                            case ipv63_so0L
                                            of _ [Occ=Dead]
                                            { (ww1_so0O [Occ=Once!], ww2_so0P [Occ=OnceL!]) ->
                                            let {
                                              sat_so14 [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_so14 =
                                                case ww1_so0O
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_so0R [Occ=Once] ->
                                                let {
                                                  sat_so0Z [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_so0Z =
                                                    let {
                                                      sat_so0Y [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_so0Y =
                                                        \ (w2_so0S [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_so0P
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_so0U [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_so0U w2_so0S
                                                          of _ [Occ=Dead]
                                                          { (# ww8_so0W [Occ=Once], ww9_so0X [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_so0W ww9_so0X
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_so0Y
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_so10 [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_so10 =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_so0Z } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_so0R sat_so10
                                                of _ [Occ=Dead]
                                                { (# ww6_so12 [Occ=Once], ww7_so13 [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_so12 ww7_so13
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_so14
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_so15 } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout sat_so16 GHC.Types.True s2#9_so0M
                                    of _ [Occ=Dead] { (# ipv64_so18 [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv64_so18
                                    of _ [Occ=Dead]
                                    { (# ipv66_so1b [Occ=Once], ipv67_so1c [Occ=Once] #) ->
                                    let {
                                      sat_so1d [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_so1d =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_so1c } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_so1d
                                           ipv66_so1b
                                    of s2#10_so1e { __DEFAULT ->
                                    letrec {
                                      a16_so1f [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a16_so1f =
                                        \ (eta3_so1g [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 eta3_so1g
                                          of _ [Occ=Dead]
                                          { (# ipv68_so1i [Occ=Once], ipv69_so1j [Occ=Once] #) ->
                                          let {
                                            ix_so1k [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_so1k = Automata4Coms.indices_a_get_ix ipv69_so1j } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_snIs
                                                 ix_so1k
                                                 ipv68_so1i
                                          of s2#11_so1l { __DEFAULT ->
                                          let {
                                            sat_so1s [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_so1s =
                                              let {
                                                sat_so1r [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_so1r =
                                                  case ix_so1k
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_so1n [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_so1n (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_so1p [Occ=Once], ww6_so1q [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_so1p ww6_so1q
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_so1r } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_so1s
                                                 GHC.Types.True
                                                 s2#11_so1l
                                          of _ [Occ=Dead]
                                          { (# ipv70_so1u [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 ipv70_so1u
                                          of _ [Occ=Dead]
                                          { (# ipv72_so1x [Occ=Once], ipv73_so1y [Occ=Once] #) ->
                                          let {
                                            sat_so1z [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_so1z =
                                              Automata4Coms.indices_a_inc_ix ipv73_so1y } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 sat_so1z
                                                 ipv72_so1x
                                          of s2#12_so1A { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 s2#12_so1A
                                          of _ [Occ=Dead]
                                          { (# ipv74_so1C [Occ=Once*], ipv75_so1D [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_so1D
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_snIy
                                                     ipv74_so1C
                                              of _ [Occ=Dead]
                                              { (# ipv76_so1G [Occ=Once], ipv77_so1H [Occ=Once] #) ->
                                              let {
                                                sat_so1I [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_so1I =
                                                  Automata4Coms.indices_a_init ipv77_so1H } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_snIN
                                                     sat_so1I
                                                     ipv76_so1G
                                              of s2#13_so1J { __DEFAULT ->
                                              a13_snUO s2#13_so1J
                                              }
                                              };
                                            GHC.Types.True -> a16_so1f ipv74_so1C
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a16_so1f s2#10_so1e
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                };
                              : i2_so1K [Occ=Once] is2_so1L [Occ=Once] ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ [GHC.Types.Int]
                                       ipv3_snI7
                                       is2_so1L
                                       ipv54_snZt
                                of s2#8_so1M { __DEFAULT ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv7_snId
                                       i2_so1K
                                       s2#8_so1M
                                of s2#9_so1N { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_snIm s2#9_so1N
                                of _ [Occ=Dead] { (# ipv56_so1P [Occ=Once], ipv57_so1Q #) ->
                                let {
                                  sat_so1R [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_so1R = (ipv57_so1Q, ipv57_so1Q) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       sat_so1R
                                       ipv56_so1P
                                of s2#10_so1S { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       s2#10_so1S
                                of _ [Occ=Dead]
                                { (# ipv58_so1U [Occ=Once], ipv59_so1V [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       ipv58_so1U
                                of _ [Occ=Dead]
                                { (# ipv60_so1X [Occ=Once*], ipv61_so1Y [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv59_so1V ipv61_so1Y
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_snIg
                                           ipv60_so1X
                                    of _ [Occ=Dead] { (# ipv62_so21 [Occ=Once], ipv63_so22 #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv63_so22
                                           ipv62_so21
                                    of s2#11_so23 { __DEFAULT ->
                                    let {
                                      sat_so2n [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_so2n =
                                        let {
                                          sat_so2m [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_so2m =
                                            case ipv63_so22
                                            of _ [Occ=Dead]
                                            { (ww1_so25 [Occ=Once!], ww2_so26 [Occ=OnceL!]) ->
                                            let {
                                              sat_so2l [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_so2l =
                                                case ww1_so25
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_so28 [Occ=Once] ->
                                                let {
                                                  sat_so2g [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_so2g =
                                                    let {
                                                      sat_so2f [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_so2f =
                                                        \ (w2_so29 [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_so26
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_so2b [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_so2b w2_so29
                                                          of _ [Occ=Dead]
                                                          { (# ww8_so2d [Occ=Once], ww9_so2e [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_so2d ww9_so2e
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_so2f
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_so2h [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_so2h =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_so2g } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_so28 sat_so2h
                                                of _ [Occ=Dead]
                                                { (# ww6_so2j [Occ=Once], ww7_so2k [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_so2j ww7_so2k
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_so2l
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_so2m } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_so2n
                                           GHC.Types.True
                                           s2#11_so23
                                    of _ [Occ=Dead] { (# ipv64_so2p [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv64_so2p
                                    of _ [Occ=Dead]
                                    { (# ipv66_so2s [Occ=Once], ipv67_so2t [Occ=Once] #) ->
                                    let {
                                      sat_so2u [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_so2u =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_so2t } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_so2u
                                           ipv66_so2s
                                    of s2#12_so2v { __DEFAULT ->
                                    letrec {
                                      a16_so2w [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a16_so2w =
                                        \ (eta3_so2x [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 eta3_so2x
                                          of _ [Occ=Dead]
                                          { (# ipv68_so2z [Occ=Once], ipv69_so2A [Occ=Once] #) ->
                                          let {
                                            ix_so2B [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_so2B = Automata4Coms.indices_a_get_ix ipv69_so2A } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_snIs
                                                 ix_so2B
                                                 ipv68_so2z
                                          of s2#13_so2C { __DEFAULT ->
                                          let {
                                            sat_so2J [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_so2J =
                                              let {
                                                sat_so2I [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_so2I =
                                                  case ix_so2B
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_so2E [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_so2E (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_so2G [Occ=Once], ww6_so2H [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_so2G ww6_so2H
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_so2I } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_so2J
                                                 GHC.Types.True
                                                 s2#13_so2C
                                          of _ [Occ=Dead]
                                          { (# ipv70_so2L [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 ipv70_so2L
                                          of _ [Occ=Dead]
                                          { (# ipv72_so2O [Occ=Once], ipv73_so2P [Occ=Once] #) ->
                                          let {
                                            sat_so2Q [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_so2Q =
                                              Automata4Coms.indices_a_inc_ix ipv73_so2P } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 sat_so2Q
                                                 ipv72_so2O
                                          of s2#14_so2R { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 s2#14_so2R
                                          of _ [Occ=Dead]
                                          { (# ipv74_so2T [Occ=Once*], ipv75_so2U [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_so2U
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_snIy
                                                     ipv74_so2T
                                              of _ [Occ=Dead]
                                              { (# ipv76_so2X [Occ=Once], ipv77_so2Y [Occ=Once] #) ->
                                              let {
                                                sat_so2Z [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_so2Z =
                                                  Automata4Coms.indices_a_init ipv77_so2Y } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_snIN
                                                     sat_so2Z
                                                     ipv76_so2X
                                              of s2#15_so30 { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv7_snId
                                                     s2#15_so30
                                              of _ [Occ=Dead]
                                              { (# ipv78_so32 [Occ=Once], ipv79_so33 #) ->
                                              let {
                                                sat_so34 [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_so34 = (ipv79_so33, ipv79_so33) } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_snIg
                                                     sat_so34
                                                     ipv78_so32
                                              of s2#16_so35 { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_snIj
                                                     s2#16_so35
                                              of _ [Occ=Dead]
                                              { (# ipv80_so37 [Occ=Once], ipv81_so38 [Occ=Once] #) ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_snIg
                                                     ipv80_so37
                                              of _ [Occ=Dead]
                                              { (# ipv82_so3a [Occ=Once*], ipv83_so3b [Occ=Once] #) ->
                                              case Automata4Coms.merge_a_le_pair
                                                     @ GHC.Types.Int ipv81_so38 ipv83_so3b
                                              of _ [Occ=Dead] {
                                                GHC.Types.False ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv9_snIg
                                                         ipv82_so3a
                                                  of _ [Occ=Dead]
                                                  { (# ipv84_so3e [Occ=Once], ipv85_so3f #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv85_so3f
                                                         ipv84_so3e
                                                  of s2#17_so3g { __DEFAULT ->
                                                  let {
                                                    sat_so3A [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_so3A =
                                                      let {
                                                        sat_so3z [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_so3z =
                                                          case ipv85_so3f
                                                          of _ [Occ=Dead]
                                                          { (ww1_so3i [Occ=Once!], ww2_so3j [Occ=OnceL!]) ->
                                                          let {
                                                            sat_so3y [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_so3y =
                                                              case ww1_so3i
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_so3l [Occ=Once] ->
                                                              let {
                                                                sat_so3t [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_so3t =
                                                                  let {
                                                                    sat_so3s [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_so3s =
                                                                      \ (w2_so3m [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_so3j
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_so3o [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_so3o w2_so3m
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_so3q [Occ=Once], ww9_so3r [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_so3q
                                                                          ww9_so3r
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_so3s
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_so3u [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_so3u =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_so3t } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_so3l sat_so3u
                                                              of _ [Occ=Dead]
                                                              { (# ww6_so3w [Occ=Once], ww7_so3x [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_so3w ww7_so3x
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_so3y
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_so3z } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_so3A
                                                         GHC.Types.True
                                                         s2#17_so3g
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_so3C [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv86_so3C
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_so3F [Occ=Once], ipv89_so3G [Occ=Once] #) ->
                                                  let {
                                                    sat_so3H [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_so3H =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv89_so3G } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_snIy
                                                         sat_so3H
                                                         ipv88_so3F
                                                  of s2#18_so3I { __DEFAULT ->
                                                  letrec {
                                                    a17_so3J [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a17_so3J =
                                                      \ (eta4_so3K [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               eta4_so3K
                                                        of _ [Occ=Dead]
                                                        { (# ipv90_so3M [Occ=Once], ipv91_so3N [Occ=Once] #) ->
                                                        let {
                                                          ix1_so3O [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_so3O =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv91_so3N } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_snIs
                                                               ix1_so3O
                                                               ipv90_so3M
                                                        of s2#19_so3P { __DEFAULT ->
                                                        let {
                                                          sat_so3W [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_so3W =
                                                            let {
                                                              sat_so3V [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_so3V =
                                                                case ix1_so3O
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_so3R [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_so3R
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_so3T [Occ=Once], ww6_so3U [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_so3T ww6_so3U
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_so3V } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_so3W
                                                               GHC.Types.True
                                                               s2#19_so3P
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_so3Y [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               ipv92_so3Y
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_so41 [Occ=Once], ipv95_so42 [Occ=Once] #) ->
                                                        let {
                                                          sat_so43 [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_so43 =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv95_so42 } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               sat_so43
                                                               ipv94_so41
                                                        of s2#20_so44 { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               s2#20_so44
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_so46 [Occ=Once*], ipv97_so47 [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv97_so47
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_snIy
                                                                   ipv96_so46
                                                            of _ [Occ=Dead]
                                                            { (# ipv98_so4a [Occ=Once], ipv99_so4b [Occ=Once] #) ->
                                                            let {
                                                              sat_so4c [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_so4c =
                                                                Automata4Coms.indices_a_init
                                                                  ipv99_so4b } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_snIN
                                                                   sat_so4c
                                                                   ipv98_so4a
                                                            of s2#21_so4d { __DEFAULT ->
                                                            a14_snVR s2#21_so4d
                                                            }
                                                            };
                                                          GHC.Types.True -> a17_so3J ipv96_so46
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a17_so3J s2#18_so3I
                                                  }
                                                  }
                                                  }
                                                  }
                                                  };
                                                GHC.Types.True ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv11_snIj
                                                         ipv82_so3a
                                                  of _ [Occ=Dead]
                                                  { (# ipv84_so4f [Occ=Once], ipv85_so4g #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv85_so4g
                                                         ipv84_so4f
                                                  of s2#17_so4h { __DEFAULT ->
                                                  let {
                                                    sat_so4B [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_so4B =
                                                      let {
                                                        sat_so4A [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_so4A =
                                                          case ipv85_so4g
                                                          of _ [Occ=Dead]
                                                          { (ww1_so4j [Occ=Once!], ww2_so4k [Occ=OnceL!]) ->
                                                          let {
                                                            sat_so4z [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_so4z =
                                                              case ww1_so4j
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_so4m [Occ=Once] ->
                                                              let {
                                                                sat_so4u [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_so4u =
                                                                  let {
                                                                    sat_so4t [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_so4t =
                                                                      \ (w2_so4n [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_so4k
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_so4p [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_so4p w2_so4n
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_so4r [Occ=Once], ww9_so4s [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_so4r
                                                                          ww9_so4s
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_so4t
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_so4v [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_so4v =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_so4u } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_so4m sat_so4v
                                                              of _ [Occ=Dead]
                                                              { (# ww6_so4x [Occ=Once], ww7_so4y [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_so4x ww7_so4y
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_so4z
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_so4A } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_so4B
                                                         GHC.Types.True
                                                         s2#17_so4h
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_so4D [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv86_so4D
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_so4G [Occ=Once], ipv89_so4H [Occ=Once] #) ->
                                                  let {
                                                    sat_so4I [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_so4I =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv89_so4H } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_snIy
                                                         sat_so4I
                                                         ipv88_so4G
                                                  of s2#18_so4J { __DEFAULT ->
                                                  letrec {
                                                    a17_so4K [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a17_so4K =
                                                      \ (eta4_so4L [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               eta4_so4L
                                                        of _ [Occ=Dead]
                                                        { (# ipv90_so4N [Occ=Once], ipv91_so4O [Occ=Once] #) ->
                                                        let {
                                                          ix1_so4P [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_so4P =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv91_so4O } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_snIs
                                                               ix1_so4P
                                                               ipv90_so4N
                                                        of s2#19_so4Q { __DEFAULT ->
                                                        let {
                                                          sat_so4X [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_so4X =
                                                            let {
                                                              sat_so4W [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_so4W =
                                                                case ix1_so4P
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_so4S [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_so4S
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_so4U [Occ=Once], ww6_so4V [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_so4U ww6_so4V
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_so4W } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_so4X
                                                               GHC.Types.True
                                                               s2#19_so4Q
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_so4Z [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               ipv92_so4Z
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_so52 [Occ=Once], ipv95_so53 [Occ=Once] #) ->
                                                        let {
                                                          sat_so54 [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_so54 =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv95_so53 } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               sat_so54
                                                               ipv94_so52
                                                        of s2#20_so55 { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               s2#20_so55
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_so57 [Occ=Once*], ipv97_so58 [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv97_so58
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_snIy
                                                                   ipv96_so57
                                                            of _ [Occ=Dead]
                                                            { (# ipv98_so5b [Occ=Once], ipv99_so5c [Occ=Once] #) ->
                                                            let {
                                                              sat_so5d [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_so5d =
                                                                Automata4Coms.indices_a_init
                                                                  ipv99_so5c } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_snIN
                                                                   sat_so5d
                                                                   ipv98_so5b
                                                            of s2#21_so5e { __DEFAULT ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ [GHC.Types.Int]
                                                                   ipv3_snI7
                                                                   s2#21_so5e
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_so5g [Occ=Once*], ipv101_so5h [Occ=Once!] #) ->
                                                            case ipv101_so5h of _ [Occ=Dead] {
                                                              [] -> a13_snUO ipv100_so5g;
                                                              : i3_so5j [Occ=Once]
                                                                is3_so5k [Occ=Once] ->
                                                                case GHC.Prim.writeMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ [GHC.Types.Int]
                                                                       ipv3_snI7
                                                                       is3_so5k
                                                                       ipv100_so5g
                                                                of s2#22_so5l { __DEFAULT ->
                                                                case GHC.Prim.writeMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ GHC.Types.Int
                                                                       ipv7_snId
                                                                       i3_so5j
                                                                       s2#22_so5l
                                                                of s2#23_so5m { __DEFAULT ->
                                                                a12_snTL s2#23_so5m
                                                                }
                                                                }
                                                            }
                                                            }
                                                            }
                                                            };
                                                          GHC.Types.True -> a17_so4K ipv96_so57
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a17_so4K s2#18_so4J
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              };
                                            GHC.Types.True -> a16_so2w ipv74_so2T
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a16_so2w s2#12_so2v
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_snIj
                                           ipv60_so1X
                                    of _ [Occ=Dead] { (# ipv62_so5o [Occ=Once], ipv63_so5p #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv63_so5p
                                           ipv62_so5o
                                    of s2#11_so5q { __DEFAULT ->
                                    let {
                                      sat_so5K [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_so5K =
                                        let {
                                          sat_so5J [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_so5J =
                                            case ipv63_so5p
                                            of _ [Occ=Dead]
                                            { (ww1_so5s [Occ=Once!], ww2_so5t [Occ=OnceL!]) ->
                                            let {
                                              sat_so5I [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_so5I =
                                                case ww1_so5s
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_so5v [Occ=Once] ->
                                                let {
                                                  sat_so5D [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_so5D =
                                                    let {
                                                      sat_so5C [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_so5C =
                                                        \ (w2_so5w [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_so5t
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_so5y [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_so5y w2_so5w
                                                          of _ [Occ=Dead]
                                                          { (# ww8_so5A [Occ=Once], ww9_so5B [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_so5A ww9_so5B
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_so5C
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_so5E [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_so5E =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_so5D } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_so5v sat_so5E
                                                of _ [Occ=Dead]
                                                { (# ww6_so5G [Occ=Once], ww7_so5H [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_so5G ww7_so5H
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_so5I
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_so5J } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_so5K
                                           GHC.Types.True
                                           s2#11_so5q
                                    of _ [Occ=Dead] { (# ipv64_so5M [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv64_so5M
                                    of _ [Occ=Dead]
                                    { (# ipv66_so5P [Occ=Once], ipv67_so5Q [Occ=Once] #) ->
                                    let {
                                      sat_so5R [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_so5R =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_so5Q } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_so5R
                                           ipv66_so5P
                                    of s2#12_so5S { __DEFAULT ->
                                    letrec {
                                      a16_so5T [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a16_so5T =
                                        \ (eta3_so5U [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 eta3_so5U
                                          of _ [Occ=Dead]
                                          { (# ipv68_so5W [Occ=Once], ipv69_so5X [Occ=Once] #) ->
                                          let {
                                            ix_so5Y [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_so5Y = Automata4Coms.indices_a_get_ix ipv69_so5X } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_snIs
                                                 ix_so5Y
                                                 ipv68_so5W
                                          of s2#13_so5Z { __DEFAULT ->
                                          let {
                                            sat_so66 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_so66 =
                                              let {
                                                sat_so65 [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_so65 =
                                                  case ix_so5Y
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_so61 [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_so61 (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_so63 [Occ=Once], ww6_so64 [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_so63 ww6_so64
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_so65 } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_so66
                                                 GHC.Types.True
                                                 s2#13_so5Z
                                          of _ [Occ=Dead]
                                          { (# ipv70_so68 [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 ipv70_so68
                                          of _ [Occ=Dead]
                                          { (# ipv72_so6b [Occ=Once], ipv73_so6c [Occ=Once] #) ->
                                          let {
                                            sat_so6d [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_so6d =
                                              Automata4Coms.indices_a_inc_ix ipv73_so6c } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 sat_so6d
                                                 ipv72_so6b
                                          of s2#14_so6e { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 s2#14_so6e
                                          of _ [Occ=Dead]
                                          { (# ipv74_so6g [Occ=Once*], ipv75_so6h [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_so6h
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_snIy
                                                     ipv74_so6g
                                              of _ [Occ=Dead]
                                              { (# ipv76_so6k [Occ=Once], ipv77_so6l [Occ=Once] #) ->
                                              let {
                                                sat_so6m [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_so6m =
                                                  Automata4Coms.indices_a_init ipv77_so6l } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_snIN
                                                     sat_so6m
                                                     ipv76_so6k
                                              of s2#15_so6n { __DEFAULT ->
                                              a12_snTL s2#15_so6n
                                              }
                                              };
                                            GHC.Types.True -> a16_so5T ipv74_so6g
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a16_so5T s2#12_so5S
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                            }
                            } } in
                      let {
                        a16_so6o
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a16_so6o =
                          \ (eta2_so6p [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            letrec {
                              a18_so6r
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a18_so6r =
                                \ (eta3_so6W [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_snI7 eta3_so6W
                                  of _ [Occ=Dead]
                                  { (# ipv54_so6Y [Occ=Once*], ipv55_so6Z [Occ=Once!] #) ->
                                  case ipv55_so6Z of _ [Occ=Dead] {
                                    [] ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv11_snIj
                                             ipv54_so6Y
                                      of _ [Occ=Dead] { (# ipv56_so72 [Occ=Once], ipv57_so73 #) ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv19_snIv
                                             ipv57_so73
                                             ipv56_so72
                                      of s2#8_so74 { __DEFAULT ->
                                      let {
                                        sat_so7o [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                        [LclId, Str=DmdType]
                                        sat_so7o =
                                          let {
                                            sat_so7n [Occ=Once] :: [GHC.Types.Char]
                                            [LclId, Str=DmdType]
                                            sat_so7n =
                                              case ipv57_so73
                                              of _ [Occ=Dead]
                                              { (ww1_so76 [Occ=Once!], ww2_so77 [Occ=OnceL!]) ->
                                              let {
                                                sat_so7m [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_so7m =
                                                  case ww1_so76
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww4_so79 [Occ=Once] ->
                                                  let {
                                                    sat_so7h [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId, Str=DmdType]
                                                    sat_so7h =
                                                      let {
                                                        sat_so7g [Occ=Once]
                                                          :: GHC.Base.String -> GHC.Base.String
                                                        [LclId, Str=DmdType]
                                                        sat_so7g =
                                                          \ (w2_so7a [Occ=Once]
                                                               :: GHC.Base.String) ->
                                                            case ww2_so77
                                                            of _ [Occ=Dead]
                                                            { GHC.Types.I# ww6_so7c [Occ=Once] ->
                                                            case GHC.Show.$wshowSignedInt
                                                                   0 ww6_so7c w2_so7a
                                                            of _ [Occ=Dead]
                                                            { (# ww8_so7e [Occ=Once], ww9_so7f [Occ=Once] #) ->
                                                            GHC.Types.:
                                                              @ GHC.Types.Char ww8_so7e ww9_so7f
                                                            }
                                                            } } in
                                                      GHC.List.foldr1_$sfoldr1
                                                        @ (GHC.Base.String -> GHC.Base.String)
                                                        GHC.Show.$fShow(,)1
                                                        sat_so7g
                                                        (GHC.Types.[] @ GHC.Show.ShowS)
                                                        lvl4_rger } in
                                                  let {
                                                    sat_so7i [Occ=Once] :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_so7i =
                                                      GHC.Types.:
                                                        @ GHC.Types.Char
                                                        GHC.Show.showList__1
                                                        sat_so7h } in
                                                  case GHC.Show.$wshowSignedInt 0 ww4_so79 sat_so7i
                                                  of _ [Occ=Dead]
                                                  { (# ww6_so7k [Occ=Once], ww7_so7l [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww6_so7k ww7_so7l
                                                  }
                                                  } } in
                                              GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_so7m
                                              } } in
                                          GHC.CString.unpackAppendCString# "merg: "# sat_so7n } in
                                      case GHC.IO.Handle.Text.hPutStr2
                                             GHC.IO.Handle.FD.stdout
                                             sat_so7o
                                             GHC.Types.True
                                             s2#8_so74
                                      of _ [Occ=Dead] { (# ipv58_so7q [Occ=Once], _ [Occ=Dead] #) ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv19_snIv
                                             ipv58_so7q
                                      of _ [Occ=Dead]
                                      { (# ipv60_so7t [Occ=Once], ipv61_so7u [Occ=Once] #) ->
                                      let {
                                        sat_so7v [Occ=Once] :: GHC.Types.Int
                                        [LclId, Str=DmdType]
                                        sat_so7v =
                                          Data.Tuple.snd
                                            @ GHC.Types.Int @ GHC.Types.Int ipv61_so7u } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_snIy
                                             sat_so7v
                                             ipv60_so7t
                                      of s2#9_so7w { __DEFAULT ->
                                      letrec {
                                        a19_so7x [Occ=LoopBreaker]
                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                        a19_so7x =
                                          \ (eta4_so7y [Occ=Once]
                                               :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                            case GHC.Prim.readMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_snIN
                                                   eta4_so7y
                                            of _ [Occ=Dead]
                                            { (# ipv62_so7A [Occ=Once], ipv63_so7B [Occ=Once] #) ->
                                            let {
                                              ix_so7C [Dmd=<L,U(U)>] :: GHC.Types.Int
                                              [LclId, Str=DmdType]
                                              ix_so7C =
                                                Automata4Coms.indices_a_get_ix ipv63_so7B } in
                                            case GHC.Prim.writeMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ GHC.Types.Int
                                                   ipv17_snIs
                                                   ix_so7C
                                                   ipv62_so7A
                                            of s2#10_so7D { __DEFAULT ->
                                            let {
                                              sat_so7K [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_so7K =
                                                let {
                                                  sat_so7J [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_so7J =
                                                    case ix_so7C
                                                    of _ [Occ=Dead]
                                                    { GHC.Types.I# ww3_so7F [Occ=Once] ->
                                                    case GHC.Show.$wshowSignedInt
                                                           0
                                                           ww3_so7F
                                                           (GHC.Types.[] @ GHC.Types.Char)
                                                    of _ [Occ=Dead]
                                                    { (# ww5_so7H [Occ=Once], ww6_so7I [Occ=Once] #) ->
                                                    GHC.Types.: @ GHC.Types.Char ww5_so7H ww6_so7I
                                                    }
                                                    } } in
                                                GHC.CString.unpackAppendCString#
                                                  "filtd:"# sat_so7J } in
                                            case GHC.IO.Handle.Text.hPutStr2
                                                   GHC.IO.Handle.FD.stdout
                                                   sat_so7K
                                                   GHC.Types.True
                                                   s2#10_so7D
                                            of _ [Occ=Dead]
                                            { (# ipv64_so7M [Occ=Once], _ [Occ=Dead] #) ->
                                            case GHC.Prim.readMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_snIN
                                                   ipv64_so7M
                                            of _ [Occ=Dead]
                                            { (# ipv66_so7P [Occ=Once], ipv67_so7Q [Occ=Once] #) ->
                                            let {
                                              sat_so7R [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                              [LclId, Str=DmdType]
                                              sat_so7R =
                                                Automata4Coms.indices_a_inc_ix ipv67_so7Q } in
                                            case GHC.Prim.writeMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_snIN
                                                   sat_so7R
                                                   ipv66_so7P
                                            of s2#11_so7S { __DEFAULT ->
                                            case GHC.Prim.readMutVar#
                                                   @ GHC.Prim.RealWorld
                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                   ipv31_snIN
                                                   s2#11_so7S
                                            of _ [Occ=Dead]
                                            { (# ipv68_so7U [Occ=Once*], ipv69_so7V [Occ=Once] #) ->
                                            case Automata4Coms.indices_a_check ipv69_so7V
                                            of _ [Occ=Dead] {
                                              GHC.Types.False ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ GHC.Types.Int
                                                       ipv21_snIy
                                                       ipv68_so7U
                                                of _ [Occ=Dead]
                                                { (# ipv70_so7Y [Occ=Once], ipv71_so7Z [Occ=Once] #) ->
                                                let {
                                                  sat_so80 [Occ=Once]
                                                    :: (GHC.Types.Int, GHC.Types.Int)
                                                  [LclId, Str=DmdType]
                                                  sat_so80 =
                                                    Automata4Coms.indices_a_init ipv71_so7Z } in
                                                case GHC.Prim.writeMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_snIN
                                                       sat_so80
                                                       ipv70_so7Y
                                                of s2#12_so81 { __DEFAULT ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ GHC.Types.Int
                                                       ipv13_snIm
                                                       s2#12_so81
                                                of _ [Occ=Dead]
                                                { (# ipv72_so83 [Occ=Once], ipv73_so84 #) ->
                                                let {
                                                  sat_so85 [Occ=Once]
                                                    :: (GHC.Types.Int, GHC.Types.Int)
                                                  [LclId, Str=DmdType]
                                                  sat_so85 = (ipv73_so84, ipv73_so84) } in
                                                case GHC.Prim.writeMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv11_snIj
                                                       sat_so85
                                                       ipv72_so83
                                                of s2#13_so86 { __DEFAULT ->
                                                a11_snSI s2#13_so86
                                                }
                                                }
                                                }
                                                };
                                              GHC.Types.True -> a19_so7x ipv68_so7U
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }; } in
                                      a19_so7x s2#9_so7w
                                      }
                                      }
                                      }
                                      }
                                      };
                                    : i2_so87 [Occ=Once] is2_so88 [Occ=Once] ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ [GHC.Types.Int]
                                             ipv3_snI7
                                             is2_so88
                                             ipv54_so6Y
                                      of s2#8_so89 { __DEFAULT ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv7_snId
                                             i2_so87
                                             s2#8_so89
                                      of s2#9_so8a { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv7_snId
                                             s2#9_so8a
                                      of _ [Occ=Dead] { (# ipv56_so8c [Occ=Once], ipv57_so8d #) ->
                                      let {
                                        sat_so8e [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_so8e = (ipv57_so8d, ipv57_so8d) } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv9_snIg
                                             sat_so8e
                                             ipv56_so8c
                                      of s2#10_so8f { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv11_snIj
                                             s2#10_so8f
                                      of _ [Occ=Dead]
                                      { (# ipv58_so8h [Occ=Once], ipv59_so8i [Occ=Once] #) ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv9_snIg
                                             ipv58_so8h
                                      of _ [Occ=Dead]
                                      { (# ipv60_so8k [Occ=Once*], ipv61_so8l [Occ=Once] #) ->
                                      case Automata4Coms.merge_a_le_pair
                                             @ GHC.Types.Int ipv59_so8i ipv61_so8l
                                      of _ [Occ=Dead] {
                                        GHC.Types.False ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv9_snIg
                                                 ipv60_so8k
                                          of _ [Occ=Dead]
                                          { (# ipv62_so8o [Occ=Once], ipv63_so8p #) ->
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_snIv
                                                 ipv63_so8p
                                                 ipv62_so8o
                                          of s2#11_so8q { __DEFAULT ->
                                          let {
                                            sat_so8K [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_so8K =
                                              let {
                                                sat_so8J [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_so8J =
                                                  case ipv63_so8p
                                                  of _ [Occ=Dead]
                                                  { (ww1_so8s [Occ=Once!], ww2_so8t [Occ=OnceL!]) ->
                                                  let {
                                                    sat_so8I [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId, Str=DmdType]
                                                    sat_so8I =
                                                      case ww1_so8s
                                                      of _ [Occ=Dead]
                                                      { GHC.Types.I# ww4_so8v [Occ=Once] ->
                                                      let {
                                                        sat_so8D [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_so8D =
                                                          let {
                                                            sat_so8C [Occ=Once]
                                                              :: GHC.Base.String -> GHC.Base.String
                                                            [LclId, Str=DmdType]
                                                            sat_so8C =
                                                              \ (w2_so8w [Occ=Once]
                                                                   :: GHC.Base.String) ->
                                                                case ww2_so8t
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww6_so8y [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0 ww6_so8y w2_so8w
                                                                of _ [Occ=Dead]
                                                                { (# ww8_so8A [Occ=Once], ww9_so8B [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww8_so8A ww9_so8B
                                                                }
                                                                } } in
                                                          GHC.List.foldr1_$sfoldr1
                                                            @ (GHC.Base.String -> GHC.Base.String)
                                                            GHC.Show.$fShow(,)1
                                                            sat_so8C
                                                            (GHC.Types.[] @ GHC.Show.ShowS)
                                                            lvl4_rger } in
                                                      let {
                                                        sat_so8E [Occ=Once] :: GHC.Base.String
                                                        [LclId, Str=DmdType]
                                                        sat_so8E =
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.showList__1
                                                            sat_so8D } in
                                                      case GHC.Show.$wshowSignedInt
                                                             0 ww4_so8v sat_so8E
                                                      of _ [Occ=Dead]
                                                      { (# ww6_so8G [Occ=Once], ww7_so8H [Occ=Once] #) ->
                                                      GHC.Types.: @ GHC.Types.Char ww6_so8G ww7_so8H
                                                      }
                                                      } } in
                                                  GHC.Types.:
                                                    @ GHC.Types.Char GHC.Show.shows13 sat_so8I
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "merg: "# sat_so8J } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_so8K
                                                 GHC.Types.True
                                                 s2#11_so8q
                                          of _ [Occ=Dead]
                                          { (# ipv64_so8M [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_snIv
                                                 ipv64_so8M
                                          of _ [Occ=Dead]
                                          { (# ipv66_so8P [Occ=Once], ipv67_so8Q [Occ=Once] #) ->
                                          let {
                                            sat_so8R [Occ=Once] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            sat_so8R =
                                              Data.Tuple.snd
                                                @ GHC.Types.Int @ GHC.Types.Int ipv67_so8Q } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv21_snIy
                                                 sat_so8R
                                                 ipv66_so8P
                                          of s2#12_so8S { __DEFAULT ->
                                          a17_so6q s2#12_so8S
                                          }
                                          }
                                          }
                                          }
                                          };
                                        GHC.Types.True ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv11_snIj
                                                 ipv60_so8k
                                          of _ [Occ=Dead]
                                          { (# ipv62_so8U [Occ=Once], ipv63_so8V #) ->
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_snIv
                                                 ipv63_so8V
                                                 ipv62_so8U
                                          of s2#11_so8W { __DEFAULT ->
                                          let {
                                            sat_so9g [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_so9g =
                                              let {
                                                sat_so9f [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_so9f =
                                                  case ipv63_so8V
                                                  of _ [Occ=Dead]
                                                  { (ww1_so8Y [Occ=Once!], ww2_so8Z [Occ=OnceL!]) ->
                                                  let {
                                                    sat_so9e [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId, Str=DmdType]
                                                    sat_so9e =
                                                      case ww1_so8Y
                                                      of _ [Occ=Dead]
                                                      { GHC.Types.I# ww4_so91 [Occ=Once] ->
                                                      let {
                                                        sat_so99 [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_so99 =
                                                          let {
                                                            sat_so98 [Occ=Once]
                                                              :: GHC.Base.String -> GHC.Base.String
                                                            [LclId, Str=DmdType]
                                                            sat_so98 =
                                                              \ (w2_so92 [Occ=Once]
                                                                   :: GHC.Base.String) ->
                                                                case ww2_so8Z
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww6_so94 [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0 ww6_so94 w2_so92
                                                                of _ [Occ=Dead]
                                                                { (# ww8_so96 [Occ=Once], ww9_so97 [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww8_so96 ww9_so97
                                                                }
                                                                } } in
                                                          GHC.List.foldr1_$sfoldr1
                                                            @ (GHC.Base.String -> GHC.Base.String)
                                                            GHC.Show.$fShow(,)1
                                                            sat_so98
                                                            (GHC.Types.[] @ GHC.Show.ShowS)
                                                            lvl4_rger } in
                                                      let {
                                                        sat_so9a [Occ=Once] :: GHC.Base.String
                                                        [LclId, Str=DmdType]
                                                        sat_so9a =
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.showList__1
                                                            sat_so99 } in
                                                      case GHC.Show.$wshowSignedInt
                                                             0 ww4_so91 sat_so9a
                                                      of _ [Occ=Dead]
                                                      { (# ww6_so9c [Occ=Once], ww7_so9d [Occ=Once] #) ->
                                                      GHC.Types.: @ GHC.Types.Char ww6_so9c ww7_so9d
                                                      }
                                                      } } in
                                                  GHC.Types.:
                                                    @ GHC.Types.Char GHC.Show.shows13 sat_so9e
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "merg: "# sat_so9f } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_so9g
                                                 GHC.Types.True
                                                 s2#11_so8W
                                          of _ [Occ=Dead]
                                          { (# ipv64_so9i [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv19_snIv
                                                 ipv64_so9i
                                          of _ [Occ=Dead]
                                          { (# ipv66_so9l [Occ=Once], ipv67_so9m [Occ=Once] #) ->
                                          let {
                                            sat_so9n [Occ=Once] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            sat_so9n =
                                              Data.Tuple.snd
                                                @ GHC.Types.Int @ GHC.Types.Int ipv67_so9m } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv21_snIy
                                                 sat_so9n
                                                 ipv66_so9l
                                          of s2#12_so9o { __DEFAULT ->
                                          letrec {
                                            a19_so9p [Occ=LoopBreaker]
                                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                            [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                            a19_so9p =
                                              \ (eta4_so9q [Occ=Once]
                                                   :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_snIN
                                                       eta4_so9q
                                                of _ [Occ=Dead]
                                                { (# ipv68_so9s [Occ=Once], ipv69_so9t [Occ=Once] #) ->
                                                let {
                                                  ix_so9u [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                  [LclId, Str=DmdType]
                                                  ix_so9u =
                                                    Automata4Coms.indices_a_get_ix ipv69_so9t } in
                                                case GHC.Prim.writeMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ GHC.Types.Int
                                                       ipv17_snIs
                                                       ix_so9u
                                                       ipv68_so9s
                                                of s2#13_so9v { __DEFAULT ->
                                                let {
                                                  sat_so9C [Occ=Once, Dmd=<L,1*U>]
                                                    :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_so9C =
                                                    let {
                                                      sat_so9B [Occ=Once] :: [GHC.Types.Char]
                                                      [LclId, Str=DmdType]
                                                      sat_so9B =
                                                        case ix_so9u
                                                        of _ [Occ=Dead]
                                                        { GHC.Types.I# ww3_so9x [Occ=Once] ->
                                                        case GHC.Show.$wshowSignedInt
                                                               0
                                                               ww3_so9x
                                                               (GHC.Types.[] @ GHC.Types.Char)
                                                        of _ [Occ=Dead]
                                                        { (# ww5_so9z [Occ=Once], ww6_so9A [Occ=Once] #) ->
                                                        GHC.Types.:
                                                          @ GHC.Types.Char ww5_so9z ww6_so9A
                                                        }
                                                        } } in
                                                    GHC.CString.unpackAppendCString#
                                                      "filtd:"# sat_so9B } in
                                                case GHC.IO.Handle.Text.hPutStr2
                                                       GHC.IO.Handle.FD.stdout
                                                       sat_so9C
                                                       GHC.Types.True
                                                       s2#13_so9v
                                                of _ [Occ=Dead]
                                                { (# ipv70_so9E [Occ=Once], _ [Occ=Dead] #) ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_snIN
                                                       ipv70_so9E
                                                of _ [Occ=Dead]
                                                { (# ipv72_so9H [Occ=Once], ipv73_so9I [Occ=Once] #) ->
                                                let {
                                                  sat_so9J [Occ=Once]
                                                    :: (GHC.Types.Int, GHC.Types.Int)
                                                  [LclId, Str=DmdType]
                                                  sat_so9J =
                                                    Automata4Coms.indices_a_inc_ix ipv73_so9I } in
                                                case GHC.Prim.writeMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_snIN
                                                       sat_so9J
                                                       ipv72_so9H
                                                of s2#14_so9K { __DEFAULT ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ (GHC.Types.Int, GHC.Types.Int)
                                                       ipv31_snIN
                                                       s2#14_so9K
                                                of _ [Occ=Dead]
                                                { (# ipv74_so9M [Occ=Once*], ipv75_so9N [Occ=Once] #) ->
                                                case Automata4Coms.indices_a_check ipv75_so9N
                                                of _ [Occ=Dead] {
                                                  GHC.Types.False ->
                                                    case GHC.Prim.readMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ GHC.Types.Int
                                                           ipv21_snIy
                                                           ipv74_so9M
                                                    of _ [Occ=Dead]
                                                    { (# ipv76_so9Q [Occ=Once], ipv77_so9R [Occ=Once] #) ->
                                                    let {
                                                      sat_so9S [Occ=Once]
                                                        :: (GHC.Types.Int, GHC.Types.Int)
                                                      [LclId, Str=DmdType]
                                                      sat_so9S =
                                                        Automata4Coms.indices_a_init ipv77_so9R } in
                                                    case GHC.Prim.writeMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ (GHC.Types.Int, GHC.Types.Int)
                                                           ipv31_snIN
                                                           sat_so9S
                                                           ipv76_so9Q
                                                    of s2#15_so9T { __DEFAULT ->
                                                    a15_snZq s2#15_so9T
                                                    }
                                                    };
                                                  GHC.Types.True -> a19_so9p ipv74_so9M
                                                }
                                                }
                                                }
                                                }
                                                }
                                                }
                                                }; } in
                                          a19_so9p s2#12_so9o
                                          }
                                          }
                                          }
                                          }
                                          }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                  }
                                  };
                              a17_so6q [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a17_so6q =
                                \ (eta3_so6s [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         eta3_so6s
                                  of _ [Occ=Dead]
                                  { (# ipv54_so6u [Occ=Once], ipv55_so6v [Occ=Once] #) ->
                                  let {
                                    ix_so6w [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_so6w = Automata4Coms.indices_a_get_ix ipv55_so6v } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_snIs
                                         ix_so6w
                                         ipv54_so6u
                                  of s2#8_so6x { __DEFAULT ->
                                  let {
                                    sat_so6E [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_so6E =
                                      let {
                                        sat_so6D [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_so6D =
                                          case ix_so6w
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_so6z [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_so6z (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_so6B [Occ=Once], ww6_so6C [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_so6B ww6_so6C
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_so6D } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_so6E GHC.Types.True s2#8_so6x
                                  of _ [Occ=Dead] { (# ipv56_so6G [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         ipv56_so6G
                                  of _ [Occ=Dead]
                                  { (# ipv58_so6J [Occ=Once], ipv59_so6K [Occ=Once] #) ->
                                  let {
                                    sat_so6L [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_so6L = Automata4Coms.indices_a_inc_ix ipv59_so6K } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         sat_so6L
                                         ipv58_so6J
                                  of s2#9_so6M { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         s2#9_so6M
                                  of _ [Occ=Dead]
                                  { (# ipv60_so6O [Occ=Once*], ipv61_so6P [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv61_so6P of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_snIy
                                             ipv60_so6O
                                      of _ [Occ=Dead]
                                      { (# ipv62_so6S [Occ=Once], ipv63_so6T [Occ=Once] #) ->
                                      let {
                                        sat_so6U [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_so6U = Automata4Coms.indices_a_init ipv63_so6T } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_snIN
                                             sat_so6U
                                             ipv62_so6S
                                      of s2#10_so6V { __DEFAULT ->
                                      a18_so6r s2#10_so6V
                                      }
                                      };
                                    GHC.Types.True -> a17_so6q ipv60_so6O
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a18_so6r eta2_so6p } in
                      let {
                        a17_so9U
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a17_so9U =
                          \ (eta2_so9V [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_snI7 eta2_so9V
                            of _ [Occ=Dead]
                            { (# ipv54_so9X [Occ=Once*], ipv55_so9Y [Occ=Once!] #) ->
                            case ipv55_so9Y of _ [Occ=Dead] {
                              [] ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_snIm ipv54_so9X
                                of _ [Occ=Dead] { (# ipv56_soa1 [Occ=Once], ipv57_soa2 #) ->
                                let {
                                  sat_soa3 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soa3 = (ipv57_soa2, ipv57_soa2) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       sat_soa3
                                       ipv56_soa1
                                of s2#8_soa4 { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       s2#8_soa4
                                of _ [Occ=Dead]
                                { (# ipv58_soa6 [Occ=Once], ipv59_soa7 [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       ipv58_soa6
                                of _ [Occ=Dead]
                                { (# ipv60_soa9 [Occ=Once*], ipv61_soaa [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv59_soa7 ipv61_soaa
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_snIg
                                           ipv60_soa9
                                    of _ [Occ=Dead] { (# ipv62_soad [Occ=Once], ipv63_soae #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv63_soae
                                           ipv62_soad
                                    of s2#9_soaf { __DEFAULT ->
                                    let {
                                      sat_soaz [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soaz =
                                        let {
                                          sat_soay [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soay =
                                            case ipv63_soae
                                            of _ [Occ=Dead]
                                            { (ww1_soah [Occ=Once!], ww2_soai [Occ=OnceL!]) ->
                                            let {
                                              sat_soax [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soax =
                                                case ww1_soah
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soak [Occ=Once] ->
                                                let {
                                                  sat_soas [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soas =
                                                    let {
                                                      sat_soar [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soar =
                                                        \ (w2_soal [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soai
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soan [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soan w2_soal
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soap [Occ=Once], ww9_soaq [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soap ww9_soaq
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soar
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soat [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soat =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soas } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soak sat_soat
                                                of _ [Occ=Dead]
                                                { (# ww6_soav [Occ=Once], ww7_soaw [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soav ww7_soaw
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soax
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soay } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout sat_soaz GHC.Types.True s2#9_soaf
                                    of _ [Occ=Dead] { (# ipv64_soaB [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv64_soaB
                                    of _ [Occ=Dead]
                                    { (# ipv66_soaE [Occ=Once], ipv67_soaF [Occ=Once] #) ->
                                    let {
                                      sat_soaG [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soaG =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_soaF } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soaG
                                           ipv66_soaE
                                    of s2#10_soaH { __DEFAULT ->
                                    letrec {
                                      a18_soaI [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a18_soaI =
                                        \ (eta3_soaJ [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 eta3_soaJ
                                          of _ [Occ=Dead]
                                          { (# ipv68_soaL [Occ=Once], ipv69_soaM [Occ=Once] #) ->
                                          let {
                                            ix_soaN [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_soaN = Automata4Coms.indices_a_get_ix ipv69_soaM } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_snIs
                                                 ix_soaN
                                                 ipv68_soaL
                                          of s2#11_soaO { __DEFAULT ->
                                          let {
                                            sat_soaV [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_soaV =
                                              let {
                                                sat_soaU [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_soaU =
                                                  case ix_soaN
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_soaQ [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_soaQ (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_soaS [Occ=Once], ww6_soaT [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_soaS ww6_soaT
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_soaU } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_soaV
                                                 GHC.Types.True
                                                 s2#11_soaO
                                          of _ [Occ=Dead]
                                          { (# ipv70_soaX [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 ipv70_soaX
                                          of _ [Occ=Dead]
                                          { (# ipv72_sob0 [Occ=Once], ipv73_sob1 [Occ=Once] #) ->
                                          let {
                                            sat_sob2 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sob2 =
                                              Automata4Coms.indices_a_inc_ix ipv73_sob1 } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 sat_sob2
                                                 ipv72_sob0
                                          of s2#12_sob3 { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 s2#12_sob3
                                          of _ [Occ=Dead]
                                          { (# ipv74_sob5 [Occ=Once*], ipv75_sob6 [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_sob6
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_snIy
                                                     ipv74_sob5
                                              of _ [Occ=Dead]
                                              { (# ipv76_sob9 [Occ=Once], ipv77_soba [Occ=Once] #) ->
                                              let {
                                                sat_sobb [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sobb =
                                                  Automata4Coms.indices_a_init ipv77_soba } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_snIN
                                                     sat_sobb
                                                     ipv76_sob9
                                              of s2#13_sobc { __DEFAULT ->
                                              a10_snRw s2#13_sobc
                                              }
                                              };
                                            GHC.Types.True -> a18_soaI ipv74_sob5
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a18_soaI s2#10_soaH
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_snIj
                                           ipv60_soa9
                                    of _ [Occ=Dead] { (# ipv62_sobe [Occ=Once], ipv63_sobf #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv63_sobf
                                           ipv62_sobe
                                    of s2#9_sobg { __DEFAULT ->
                                    let {
                                      sat_sobA [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sobA =
                                        let {
                                          sat_sobz [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sobz =
                                            case ipv63_sobf
                                            of _ [Occ=Dead]
                                            { (ww1_sobi [Occ=Once!], ww2_sobj [Occ=OnceL!]) ->
                                            let {
                                              sat_soby [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soby =
                                                case ww1_sobi
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sobl [Occ=Once] ->
                                                let {
                                                  sat_sobt [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sobt =
                                                    let {
                                                      sat_sobs [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sobs =
                                                        \ (w2_sobm [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sobj
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sobo [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sobo w2_sobm
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sobq [Occ=Once], ww9_sobr [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sobq ww9_sobr
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sobs
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sobu [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sobu =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sobt } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sobl sat_sobu
                                                of _ [Occ=Dead]
                                                { (# ww6_sobw [Occ=Once], ww7_sobx [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sobw ww7_sobx
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soby
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sobz } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout sat_sobA GHC.Types.True s2#9_sobg
                                    of _ [Occ=Dead] { (# ipv64_sobC [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv64_sobC
                                    of _ [Occ=Dead]
                                    { (# ipv66_sobF [Occ=Once], ipv67_sobG [Occ=Once] #) ->
                                    let {
                                      sat_sobH [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sobH =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_sobG } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_sobH
                                           ipv66_sobF
                                    of s2#10_sobI { __DEFAULT ->
                                    letrec {
                                      a18_sobJ [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a18_sobJ =
                                        \ (eta3_sobK [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 eta3_sobK
                                          of _ [Occ=Dead]
                                          { (# ipv68_sobM [Occ=Once], ipv69_sobN [Occ=Once] #) ->
                                          let {
                                            ix_sobO [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_sobO = Automata4Coms.indices_a_get_ix ipv69_sobN } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_snIs
                                                 ix_sobO
                                                 ipv68_sobM
                                          of s2#11_sobP { __DEFAULT ->
                                          let {
                                            sat_sobW [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sobW =
                                              let {
                                                sat_sobV [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sobV =
                                                  case ix_sobO
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_sobR [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_sobR (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_sobT [Occ=Once], ww6_sobU [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_sobT ww6_sobU
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_sobV } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sobW
                                                 GHC.Types.True
                                                 s2#11_sobP
                                          of _ [Occ=Dead]
                                          { (# ipv70_sobY [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 ipv70_sobY
                                          of _ [Occ=Dead]
                                          { (# ipv72_soc1 [Occ=Once], ipv73_soc2 [Occ=Once] #) ->
                                          let {
                                            sat_soc3 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_soc3 =
                                              Automata4Coms.indices_a_inc_ix ipv73_soc2 } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 sat_soc3
                                                 ipv72_soc1
                                          of s2#12_soc4 { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 s2#12_soc4
                                          of _ [Occ=Dead]
                                          { (# ipv74_soc6 [Occ=Once*], ipv75_soc7 [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_soc7
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_snIy
                                                     ipv74_soc6
                                              of _ [Occ=Dead]
                                              { (# ipv76_soca [Occ=Once], ipv77_socb [Occ=Once] #) ->
                                              let {
                                                sat_socc [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_socc =
                                                  Automata4Coms.indices_a_init ipv77_socb } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_snIN
                                                     sat_socc
                                                     ipv76_soca
                                              of s2#13_socd { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv15_snIp
                                                     s2#13_socd
                                              of _ [Occ=Dead]
                                              { (# ipv78_socf [Occ=Once], ipv79_socg [Occ=Once] #) ->
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv13_snIm
                                                     ipv79_socg
                                                     ipv78_socf
                                              of s2#14_soch { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv13_snIm
                                                     s2#14_soch
                                              of _ [Occ=Dead]
                                              { (# ipv80_socj [Occ=Once], ipv81_sock #) ->
                                              let {
                                                sat_socl [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_socl = (ipv81_sock, ipv81_sock) } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_snIj
                                                     sat_socl
                                                     ipv80_socj
                                              of s2#15_socm { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_snIj
                                                     s2#15_socm
                                              of _ [Occ=Dead]
                                              { (# ipv82_soco [Occ=Once], ipv83_socp [Occ=Once] #) ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_snIg
                                                     ipv82_soco
                                              of _ [Occ=Dead]
                                              { (# ipv84_socr [Occ=Once*], ipv85_socs [Occ=Once] #) ->
                                              case Automata4Coms.merge_a_le_pair
                                                     @ GHC.Types.Int ipv83_socp ipv85_socs
                                              of _ [Occ=Dead] {
                                                GHC.Types.False ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv9_snIg
                                                         ipv84_socr
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_socv [Occ=Once], ipv87_socw #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv87_socw
                                                         ipv86_socv
                                                  of s2#16_socx { __DEFAULT ->
                                                  let {
                                                    sat_socR [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_socR =
                                                      let {
                                                        sat_socQ [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_socQ =
                                                          case ipv87_socw
                                                          of _ [Occ=Dead]
                                                          { (ww1_socz [Occ=Once!], ww2_socA [Occ=OnceL!]) ->
                                                          let {
                                                            sat_socP [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_socP =
                                                              case ww1_socz
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_socC [Occ=Once] ->
                                                              let {
                                                                sat_socK [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_socK =
                                                                  let {
                                                                    sat_socJ [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_socJ =
                                                                      \ (w2_socD [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_socA
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_socF [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_socF w2_socD
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_socH [Occ=Once], ww9_socI [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_socH
                                                                          ww9_socI
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_socJ
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_socL [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_socL =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_socK } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_socC sat_socL
                                                              of _ [Occ=Dead]
                                                              { (# ww6_socN [Occ=Once], ww7_socO [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_socN ww7_socO
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_socP
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_socQ } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_socR
                                                         GHC.Types.True
                                                         s2#16_socx
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_socT [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv88_socT
                                                  of _ [Occ=Dead]
                                                  { (# ipv90_socW [Occ=Once], ipv91_socX [Occ=Once] #) ->
                                                  let {
                                                    sat_socY [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_socY =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv91_socX } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_snIy
                                                         sat_socY
                                                         ipv90_socW
                                                  of s2#17_socZ { __DEFAULT ->
                                                  letrec {
                                                    a19_sod0 [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a19_sod0 =
                                                      \ (eta4_sod1 [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               eta4_sod1
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_sod3 [Occ=Once], ipv93_sod4 [Occ=Once] #) ->
                                                        let {
                                                          ix1_sod5 [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_sod5 =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv93_sod4 } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_snIs
                                                               ix1_sod5
                                                               ipv92_sod3
                                                        of s2#18_sod6 { __DEFAULT ->
                                                        let {
                                                          sat_sodd [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_sodd =
                                                            let {
                                                              sat_sodc [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_sodc =
                                                                case ix1_sod5
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_sod8 [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_sod8
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_soda [Occ=Once], ww6_sodb [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_soda ww6_sodb
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_sodc } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_sodd
                                                               GHC.Types.True
                                                               s2#18_sod6
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_sodf [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               ipv94_sodf
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_sodi [Occ=Once], ipv97_sodj [Occ=Once] #) ->
                                                        let {
                                                          sat_sodk [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sodk =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv97_sodj } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               sat_sodk
                                                               ipv96_sodi
                                                        of s2#19_sodl { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               s2#19_sodl
                                                        of _ [Occ=Dead]
                                                        { (# ipv98_sodn [Occ=Once*], ipv99_sodo [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv99_sodo
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_snIy
                                                                   ipv98_sodn
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_sodr [Occ=Once], ipv101_sods [Occ=Once] #) ->
                                                            let {
                                                              sat_sodt [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_sodt =
                                                                Automata4Coms.indices_a_init
                                                                  ipv101_sods } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_snIN
                                                                   sat_sodt
                                                                   ipv100_sodr
                                                            of s2#20_sodu { __DEFAULT ->
                                                            a9_snQt s2#20_sodu
                                                            }
                                                            };
                                                          GHC.Types.True -> a19_sod0 ipv98_sodn
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a19_sod0 s2#17_socZ
                                                  }
                                                  }
                                                  }
                                                  }
                                                  };
                                                GHC.Types.True ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv11_snIj
                                                         ipv84_socr
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_sodw [Occ=Once], ipv87_sodx #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv87_sodx
                                                         ipv86_sodw
                                                  of s2#16_sody { __DEFAULT ->
                                                  let {
                                                    sat_sodS [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sodS =
                                                      let {
                                                        sat_sodR [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sodR =
                                                          case ipv87_sodx
                                                          of _ [Occ=Dead]
                                                          { (ww1_sodA [Occ=Once!], ww2_sodB [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sodQ [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sodQ =
                                                              case ww1_sodA
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sodD [Occ=Once] ->
                                                              let {
                                                                sat_sodL [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sodL =
                                                                  let {
                                                                    sat_sodK [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sodK =
                                                                      \ (w2_sodE [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_sodB
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_sodG [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_sodG w2_sodE
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sodI [Occ=Once], ww9_sodJ [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sodI
                                                                          ww9_sodJ
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_sodK
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sodM [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sodM =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sodL } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sodD sat_sodM
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sodO [Occ=Once], ww7_sodP [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sodO ww7_sodP
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sodQ
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sodR } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sodS
                                                         GHC.Types.True
                                                         s2#16_sody
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_sodU [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv88_sodU
                                                  of _ [Occ=Dead]
                                                  { (# ipv90_sodX [Occ=Once], ipv91_sodY [Occ=Once] #) ->
                                                  let {
                                                    sat_sodZ [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sodZ =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv91_sodY } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_snIy
                                                         sat_sodZ
                                                         ipv90_sodX
                                                  of s2#17_soe0 { __DEFAULT ->
                                                  letrec {
                                                    a19_soe1 [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a19_soe1 =
                                                      \ (eta4_soe2 [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               eta4_soe2
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_soe4 [Occ=Once], ipv93_soe5 [Occ=Once] #) ->
                                                        let {
                                                          ix1_soe6 [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_soe6 =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv93_soe5 } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_snIs
                                                               ix1_soe6
                                                               ipv92_soe4
                                                        of s2#18_soe7 { __DEFAULT ->
                                                        let {
                                                          sat_soee [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_soee =
                                                            let {
                                                              sat_soed [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_soed =
                                                                case ix1_soe6
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_soe9 [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_soe9
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_soeb [Occ=Once], ww6_soec [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_soeb ww6_soec
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_soed } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_soee
                                                               GHC.Types.True
                                                               s2#18_soe7
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_soeg [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               ipv94_soeg
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_soej [Occ=Once], ipv97_soek [Occ=Once] #) ->
                                                        let {
                                                          sat_soel [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_soel =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv97_soek } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               sat_soel
                                                               ipv96_soej
                                                        of s2#19_soem { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               s2#19_soem
                                                        of _ [Occ=Dead]
                                                        { (# ipv98_soeo [Occ=Once*], ipv99_soep [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv99_soep
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_snIy
                                                                   ipv98_soeo
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_soes [Occ=Once], ipv101_soet [Occ=Once] #) ->
                                                            let {
                                                              sat_soeu [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_soeu =
                                                                Automata4Coms.indices_a_init
                                                                  ipv101_soet } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_snIN
                                                                   sat_soeu
                                                                   ipv100_soes
                                                            of s2#20_soev { __DEFAULT ->
                                                            a13_snUO s2#20_soev
                                                            }
                                                            };
                                                          GHC.Types.True -> a19_soe1 ipv98_soeo
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a19_soe1 s2#17_soe0
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              };
                                            GHC.Types.True -> a18_sobJ ipv74_soc6
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a18_sobJ s2#10_sobI
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                };
                              : i2_soew [Occ=Once] is2_soex [Occ=Once] ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ [GHC.Types.Int]
                                       ipv3_snI7
                                       is2_soex
                                       ipv54_so9X
                                of s2#8_soey { __DEFAULT ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv7_snId
                                       i2_soew
                                       s2#8_soey
                                of s2#9_soez { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_snIm s2#9_soez
                                of _ [Occ=Dead] { (# ipv56_soeB [Occ=Once], ipv57_soeC #) ->
                                let {
                                  sat_soeD [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soeD = (ipv57_soeC, ipv57_soeC) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       sat_soeD
                                       ipv56_soeB
                                of s2#10_soeE { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       s2#10_soeE
                                of _ [Occ=Dead]
                                { (# ipv58_soeG [Occ=Once], ipv59_soeH [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       ipv58_soeG
                                of _ [Occ=Dead]
                                { (# ipv60_soeJ [Occ=Once*], ipv61_soeK [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv59_soeH ipv61_soeK
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_snIg
                                           ipv60_soeJ
                                    of _ [Occ=Dead] { (# ipv62_soeN [Occ=Once], ipv63_soeO #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv63_soeO
                                           ipv62_soeN
                                    of s2#11_soeP { __DEFAULT ->
                                    let {
                                      sat_sof9 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sof9 =
                                        let {
                                          sat_sof8 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sof8 =
                                            case ipv63_soeO
                                            of _ [Occ=Dead]
                                            { (ww1_soeR [Occ=Once!], ww2_soeS [Occ=OnceL!]) ->
                                            let {
                                              sat_sof7 [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sof7 =
                                                case ww1_soeR
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soeU [Occ=Once] ->
                                                let {
                                                  sat_sof2 [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sof2 =
                                                    let {
                                                      sat_sof1 [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sof1 =
                                                        \ (w2_soeV [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soeS
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soeX [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soeX w2_soeV
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soeZ [Occ=Once], ww9_sof0 [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soeZ ww9_sof0
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sof1
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sof3 [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sof3 =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sof2 } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soeU sat_sof3
                                                of _ [Occ=Dead]
                                                { (# ww6_sof5 [Occ=Once], ww7_sof6 [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sof5 ww7_sof6
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sof7
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sof8 } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_sof9
                                           GHC.Types.True
                                           s2#11_soeP
                                    of _ [Occ=Dead] { (# ipv64_sofb [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv64_sofb
                                    of _ [Occ=Dead]
                                    { (# ipv66_sofe [Occ=Once], ipv67_soff [Occ=Once] #) ->
                                    let {
                                      sat_sofg [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sofg =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_soff } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_sofg
                                           ipv66_sofe
                                    of s2#12_sofh { __DEFAULT ->
                                    letrec {
                                      a18_sofi [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a18_sofi =
                                        \ (eta3_sofj [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 eta3_sofj
                                          of _ [Occ=Dead]
                                          { (# ipv68_sofl [Occ=Once], ipv69_sofm [Occ=Once] #) ->
                                          let {
                                            ix_sofn [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_sofn = Automata4Coms.indices_a_get_ix ipv69_sofm } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_snIs
                                                 ix_sofn
                                                 ipv68_sofl
                                          of s2#13_sofo { __DEFAULT ->
                                          let {
                                            sat_sofv [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sofv =
                                              let {
                                                sat_sofu [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sofu =
                                                  case ix_sofn
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_sofq [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_sofq (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_sofs [Occ=Once], ww6_soft [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_sofs ww6_soft
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_sofu } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sofv
                                                 GHC.Types.True
                                                 s2#13_sofo
                                          of _ [Occ=Dead]
                                          { (# ipv70_sofx [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 ipv70_sofx
                                          of _ [Occ=Dead]
                                          { (# ipv72_sofA [Occ=Once], ipv73_sofB [Occ=Once] #) ->
                                          let {
                                            sat_sofC [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sofC =
                                              Automata4Coms.indices_a_inc_ix ipv73_sofB } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 sat_sofC
                                                 ipv72_sofA
                                          of s2#14_sofD { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 s2#14_sofD
                                          of _ [Occ=Dead]
                                          { (# ipv74_sofF [Occ=Once*], ipv75_sofG [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_sofG
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_snIy
                                                     ipv74_sofF
                                              of _ [Occ=Dead]
                                              { (# ipv76_sofJ [Occ=Once], ipv77_sofK [Occ=Once] #) ->
                                              let {
                                                sat_sofL [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sofL =
                                                  Automata4Coms.indices_a_init ipv77_sofK } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_snIN
                                                     sat_sofL
                                                     ipv76_sofJ
                                              of s2#15_sofM { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv7_snId
                                                     s2#15_sofM
                                              of _ [Occ=Dead]
                                              { (# ipv78_sofO [Occ=Once], ipv79_sofP #) ->
                                              let {
                                                sat_sofQ [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sofQ = (ipv79_sofP, ipv79_sofP) } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_snIg
                                                     sat_sofQ
                                                     ipv78_sofO
                                              of s2#16_sofR { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_snIj
                                                     s2#16_sofR
                                              of _ [Occ=Dead]
                                              { (# ipv80_sofT [Occ=Once], ipv81_sofU [Occ=Once] #) ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_snIg
                                                     ipv80_sofT
                                              of _ [Occ=Dead]
                                              { (# ipv82_sofW [Occ=Once*], ipv83_sofX [Occ=Once] #) ->
                                              case Automata4Coms.merge_a_le_pair
                                                     @ GHC.Types.Int ipv81_sofU ipv83_sofX
                                              of _ [Occ=Dead] {
                                                GHC.Types.False ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv9_snIg
                                                         ipv82_sofW
                                                  of _ [Occ=Dead]
                                                  { (# ipv84_sog0 [Occ=Once], ipv85_sog1 #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv85_sog1
                                                         ipv84_sog0
                                                  of s2#17_sog2 { __DEFAULT ->
                                                  let {
                                                    sat_sogm [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sogm =
                                                      let {
                                                        sat_sogl [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sogl =
                                                          case ipv85_sog1
                                                          of _ [Occ=Dead]
                                                          { (ww1_sog4 [Occ=Once!], ww2_sog5 [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sogk [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sogk =
                                                              case ww1_sog4
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sog7 [Occ=Once] ->
                                                              let {
                                                                sat_sogf [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sogf =
                                                                  let {
                                                                    sat_soge [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_soge =
                                                                      \ (w2_sog8 [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_sog5
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_soga [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_soga w2_sog8
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sogc [Occ=Once], ww9_sogd [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sogc
                                                                          ww9_sogd
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_soge
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sogg [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sogg =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sogf } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sog7 sat_sogg
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sogi [Occ=Once], ww7_sogj [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sogi ww7_sogj
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sogk
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sogl } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sogm
                                                         GHC.Types.True
                                                         s2#17_sog2
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_sogo [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv86_sogo
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_sogr [Occ=Once], ipv89_sogs [Occ=Once] #) ->
                                                  let {
                                                    sat_sogt [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sogt =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv89_sogs } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_snIy
                                                         sat_sogt
                                                         ipv88_sogr
                                                  of s2#18_sogu { __DEFAULT ->
                                                  letrec {
                                                    a19_sogv [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a19_sogv =
                                                      \ (eta4_sogw [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               eta4_sogw
                                                        of _ [Occ=Dead]
                                                        { (# ipv90_sogy [Occ=Once], ipv91_sogz [Occ=Once] #) ->
                                                        let {
                                                          ix1_sogA [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_sogA =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv91_sogz } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_snIs
                                                               ix1_sogA
                                                               ipv90_sogy
                                                        of s2#19_sogB { __DEFAULT ->
                                                        let {
                                                          sat_sogI [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_sogI =
                                                            let {
                                                              sat_sogH [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_sogH =
                                                                case ix1_sogA
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_sogD [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_sogD
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_sogF [Occ=Once], ww6_sogG [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_sogF ww6_sogG
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_sogH } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_sogI
                                                               GHC.Types.True
                                                               s2#19_sogB
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_sogK [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               ipv92_sogK
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_sogN [Occ=Once], ipv95_sogO [Occ=Once] #) ->
                                                        let {
                                                          sat_sogP [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sogP =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv95_sogO } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               sat_sogP
                                                               ipv94_sogN
                                                        of s2#20_sogQ { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               s2#20_sogQ
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_sogS [Occ=Once*], ipv97_sogT [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv97_sogT
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_snIy
                                                                   ipv96_sogS
                                                            of _ [Occ=Dead]
                                                            { (# ipv98_sogW [Occ=Once], ipv99_sogX [Occ=Once] #) ->
                                                            let {
                                                              sat_sogY [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_sogY =
                                                                Automata4Coms.indices_a_init
                                                                  ipv99_sogX } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_snIN
                                                                   sat_sogY
                                                                   ipv98_sogW
                                                            of s2#21_sogZ { __DEFAULT ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv15_snIp
                                                                   s2#21_sogZ
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_soh1 [Occ=Once], ipv101_soh2 [Occ=Once] #) ->
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv13_snIm
                                                                   ipv101_soh2
                                                                   ipv100_soh1
                                                            of s2#22_soh3 { __DEFAULT ->
                                                            a16_so6o s2#22_soh3
                                                            }
                                                            }
                                                            }
                                                            };
                                                          GHC.Types.True -> a19_sogv ipv96_sogS
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a19_sogv s2#18_sogu
                                                  }
                                                  }
                                                  }
                                                  }
                                                  };
                                                GHC.Types.True ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv11_snIj
                                                         ipv82_sofW
                                                  of _ [Occ=Dead]
                                                  { (# ipv84_soh5 [Occ=Once], ipv85_soh6 #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv85_soh6
                                                         ipv84_soh5
                                                  of s2#17_soh7 { __DEFAULT ->
                                                  let {
                                                    sat_sohr [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sohr =
                                                      let {
                                                        sat_sohq [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sohq =
                                                          case ipv85_soh6
                                                          of _ [Occ=Dead]
                                                          { (ww1_soh9 [Occ=Once!], ww2_soha [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sohp [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sohp =
                                                              case ww1_soh9
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sohc [Occ=Once] ->
                                                              let {
                                                                sat_sohk [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sohk =
                                                                  let {
                                                                    sat_sohj [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sohj =
                                                                      \ (w2_sohd [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_soha
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_sohf [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_sohf w2_sohd
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sohh [Occ=Once], ww9_sohi [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sohh
                                                                          ww9_sohi
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_sohj
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sohl [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sohl =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sohk } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sohc sat_sohl
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sohn [Occ=Once], ww7_soho [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sohn ww7_soho
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sohp
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sohq } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sohr
                                                         GHC.Types.True
                                                         s2#17_soh7
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_soht [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv86_soht
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_sohw [Occ=Once], ipv89_sohx [Occ=Once] #) ->
                                                  let {
                                                    sat_sohy [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sohy =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv89_sohx } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_snIy
                                                         sat_sohy
                                                         ipv88_sohw
                                                  of s2#18_sohz { __DEFAULT ->
                                                  letrec {
                                                    a19_sohA [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a19_sohA =
                                                      \ (eta4_sohB [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               eta4_sohB
                                                        of _ [Occ=Dead]
                                                        { (# ipv90_sohD [Occ=Once], ipv91_sohE [Occ=Once] #) ->
                                                        let {
                                                          ix1_sohF [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_sohF =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv91_sohE } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_snIs
                                                               ix1_sohF
                                                               ipv90_sohD
                                                        of s2#19_sohG { __DEFAULT ->
                                                        let {
                                                          sat_sohN [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_sohN =
                                                            let {
                                                              sat_sohM [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_sohM =
                                                                case ix1_sohF
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_sohI [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_sohI
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_sohK [Occ=Once], ww6_sohL [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_sohK ww6_sohL
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_sohM } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_sohN
                                                               GHC.Types.True
                                                               s2#19_sohG
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_sohP [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               ipv92_sohP
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_sohS [Occ=Once], ipv95_sohT [Occ=Once] #) ->
                                                        let {
                                                          sat_sohU [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sohU =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv95_sohT } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               sat_sohU
                                                               ipv94_sohS
                                                        of s2#20_sohV { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               s2#20_sohV
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_sohX [Occ=Once*], ipv97_sohY [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv97_sohY
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_snIy
                                                                   ipv96_sohX
                                                            of _ [Occ=Dead]
                                                            { (# ipv98_soi1 [Occ=Once], ipv99_soi2 [Occ=Once] #) ->
                                                            let {
                                                              sat_soi3 [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_soi3 =
                                                                Automata4Coms.indices_a_init
                                                                  ipv99_soi2 } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_snIN
                                                                   sat_soi3
                                                                   ipv98_soi1
                                                            of s2#21_soi4 { __DEFAULT ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv15_snIp
                                                                   s2#21_soi4
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_soi6 [Occ=Once], ipv101_soi7 [Occ=Once] #) ->
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv13_snIm
                                                                   ipv101_soi7
                                                                   ipv100_soi6
                                                            of s2#22_soi8 { __DEFAULT ->
                                                            a15_snZq s2#22_soi8
                                                            }
                                                            }
                                                            }
                                                            };
                                                          GHC.Types.True -> a19_sohA ipv96_sohX
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a19_sohA s2#18_sohz
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              };
                                            GHC.Types.True -> a18_sofi ipv74_sofF
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a18_sofi s2#12_sofh
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_snIj
                                           ipv60_soeJ
                                    of _ [Occ=Dead] { (# ipv62_soia [Occ=Once], ipv63_soib #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv63_soib
                                           ipv62_soia
                                    of s2#11_soic { __DEFAULT ->
                                    let {
                                      sat_soiw [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soiw =
                                        let {
                                          sat_soiv [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soiv =
                                            case ipv63_soib
                                            of _ [Occ=Dead]
                                            { (ww1_soie [Occ=Once!], ww2_soif [Occ=OnceL!]) ->
                                            let {
                                              sat_soiu [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soiu =
                                                case ww1_soie
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soih [Occ=Once] ->
                                                let {
                                                  sat_soip [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soip =
                                                    let {
                                                      sat_soio [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soio =
                                                        \ (w2_soii [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soif
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soik [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soik w2_soii
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soim [Occ=Once], ww9_soin [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soim ww9_soin
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soio
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soiq [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soiq =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soip } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soih sat_soiq
                                                of _ [Occ=Dead]
                                                { (# ww6_sois [Occ=Once], ww7_soit [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sois ww7_soit
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soiu
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soiv } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_soiw
                                           GHC.Types.True
                                           s2#11_soic
                                    of _ [Occ=Dead] { (# ipv64_soiy [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv64_soiy
                                    of _ [Occ=Dead]
                                    { (# ipv66_soiB [Occ=Once], ipv67_soiC [Occ=Once] #) ->
                                    let {
                                      sat_soiD [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soiD =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_soiC } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soiD
                                           ipv66_soiB
                                    of s2#12_soiE { __DEFAULT ->
                                    letrec {
                                      a18_soiF [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a18_soiF =
                                        \ (eta3_soiG [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 eta3_soiG
                                          of _ [Occ=Dead]
                                          { (# ipv68_soiI [Occ=Once], ipv69_soiJ [Occ=Once] #) ->
                                          let {
                                            ix_soiK [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_soiK = Automata4Coms.indices_a_get_ix ipv69_soiJ } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_snIs
                                                 ix_soiK
                                                 ipv68_soiI
                                          of s2#13_soiL { __DEFAULT ->
                                          let {
                                            sat_soiS [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_soiS =
                                              let {
                                                sat_soiR [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_soiR =
                                                  case ix_soiK
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_soiN [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_soiN (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_soiP [Occ=Once], ww6_soiQ [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_soiP ww6_soiQ
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_soiR } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_soiS
                                                 GHC.Types.True
                                                 s2#13_soiL
                                          of _ [Occ=Dead]
                                          { (# ipv70_soiU [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 ipv70_soiU
                                          of _ [Occ=Dead]
                                          { (# ipv72_soiX [Occ=Once], ipv73_soiY [Occ=Once] #) ->
                                          let {
                                            sat_soiZ [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_soiZ =
                                              Automata4Coms.indices_a_inc_ix ipv73_soiY } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 sat_soiZ
                                                 ipv72_soiX
                                          of s2#14_soj0 { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 s2#14_soj0
                                          of _ [Occ=Dead]
                                          { (# ipv74_soj2 [Occ=Once*], ipv75_soj3 [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_soj3
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_snIy
                                                     ipv74_soj2
                                              of _ [Occ=Dead]
                                              { (# ipv76_soj6 [Occ=Once], ipv77_soj7 [Occ=Once] #) ->
                                              let {
                                                sat_soj8 [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_soj8 =
                                                  Automata4Coms.indices_a_init ipv77_soj7 } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_snIN
                                                     sat_soj8
                                                     ipv76_soj6
                                              of s2#15_soj9 { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv15_snIp
                                                     s2#15_soj9
                                              of _ [Occ=Dead]
                                              { (# ipv78_sojb [Occ=Once], ipv79_sojc [Occ=Once] #) ->
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv13_snIm
                                                     ipv79_sojc
                                                     ipv78_sojb
                                              of s2#16_sojd { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv13_snIm
                                                     s2#16_sojd
                                              of _ [Occ=Dead]
                                              { (# ipv80_sojf [Occ=Once], ipv81_sojg #) ->
                                              let {
                                                sat_sojh [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_sojh = (ipv81_sojg, ipv81_sojg) } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_snIj
                                                     sat_sojh
                                                     ipv80_sojf
                                              of s2#17_soji { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_snIj
                                                     s2#17_soji
                                              of _ [Occ=Dead]
                                              { (# ipv82_sojk [Occ=Once], ipv83_sojl [Occ=Once] #) ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_snIg
                                                     ipv82_sojk
                                              of _ [Occ=Dead]
                                              { (# ipv84_sojn [Occ=Once*], ipv85_sojo [Occ=Once] #) ->
                                              case Automata4Coms.merge_a_le_pair
                                                     @ GHC.Types.Int ipv83_sojl ipv85_sojo
                                              of _ [Occ=Dead] {
                                                GHC.Types.False ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv9_snIg
                                                         ipv84_sojn
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_sojr [Occ=Once], ipv87_sojs #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv87_sojs
                                                         ipv86_sojr
                                                  of s2#18_sojt { __DEFAULT ->
                                                  let {
                                                    sat_sojN [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sojN =
                                                      let {
                                                        sat_sojM [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sojM =
                                                          case ipv87_sojs
                                                          of _ [Occ=Dead]
                                                          { (ww1_sojv [Occ=Once!], ww2_sojw [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sojL [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sojL =
                                                              case ww1_sojv
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sojy [Occ=Once] ->
                                                              let {
                                                                sat_sojG [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sojG =
                                                                  let {
                                                                    sat_sojF [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sojF =
                                                                      \ (w2_sojz [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_sojw
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_sojB [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_sojB w2_sojz
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sojD [Occ=Once], ww9_sojE [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sojD
                                                                          ww9_sojE
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_sojF
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sojH [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sojH =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sojG } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sojy sat_sojH
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sojJ [Occ=Once], ww7_sojK [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sojJ ww7_sojK
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sojL
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sojM } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sojN
                                                         GHC.Types.True
                                                         s2#18_sojt
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_sojP [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv88_sojP
                                                  of _ [Occ=Dead]
                                                  { (# ipv90_sojS [Occ=Once], ipv91_sojT [Occ=Once] #) ->
                                                  let {
                                                    sat_sojU [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sojU =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv91_sojT } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_snIy
                                                         sat_sojU
                                                         ipv90_sojS
                                                  of s2#19_sojV { __DEFAULT ->
                                                  letrec {
                                                    a19_sojW [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a19_sojW =
                                                      \ (eta4_sojX [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               eta4_sojX
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_sojZ [Occ=Once], ipv93_sok0 [Occ=Once] #) ->
                                                        let {
                                                          ix1_sok1 [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_sok1 =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv93_sok0 } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_snIs
                                                               ix1_sok1
                                                               ipv92_sojZ
                                                        of s2#20_sok2 { __DEFAULT ->
                                                        let {
                                                          sat_sok9 [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_sok9 =
                                                            let {
                                                              sat_sok8 [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_sok8 =
                                                                case ix1_sok1
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_sok4 [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_sok4
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_sok6 [Occ=Once], ww6_sok7 [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_sok6 ww6_sok7
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_sok8 } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_sok9
                                                               GHC.Types.True
                                                               s2#20_sok2
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_sokb [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               ipv94_sokb
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_soke [Occ=Once], ipv97_sokf [Occ=Once] #) ->
                                                        let {
                                                          sat_sokg [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sokg =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv97_sokf } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               sat_sokg
                                                               ipv96_soke
                                                        of s2#21_sokh { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               s2#21_sokh
                                                        of _ [Occ=Dead]
                                                        { (# ipv98_sokj [Occ=Once*], ipv99_sokk [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv99_sokk
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_snIy
                                                                   ipv98_sokj
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_sokn [Occ=Once], ipv101_soko [Occ=Once] #) ->
                                                            let {
                                                              sat_sokp [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_sokp =
                                                                Automata4Coms.indices_a_init
                                                                  ipv101_soko } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_snIN
                                                                   sat_sokp
                                                                   ipv100_sokn
                                                            of s2#22_sokq { __DEFAULT ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv7_snId
                                                                   s2#22_sokq
                                                            of _ [Occ=Dead]
                                                            { (# ipv102_soks [Occ=Once], ipv103_sokt #) ->
                                                            let {
                                                              sat_soku [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_soku =
                                                                (ipv103_sokt, ipv103_sokt) } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv9_snIg
                                                                   sat_soku
                                                                   ipv102_soks
                                                            of s2#23_sokv { __DEFAULT ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv11_snIj
                                                                   s2#23_sokv
                                                            of _ [Occ=Dead]
                                                            { (# ipv104_sokx [Occ=Once], ipv105_soky [Occ=Once] #) ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv9_snIg
                                                                   ipv104_sokx
                                                            of _ [Occ=Dead]
                                                            { (# ipv106_sokA [Occ=Once*], ipv107_sokB [Occ=Once] #) ->
                                                            case Automata4Coms.merge_a_le_pair
                                                                   @ GHC.Types.Int
                                                                   ipv105_soky
                                                                   ipv107_sokB
                                                            of _ [Occ=Dead] {
                                                              GHC.Types.False ->
                                                                case GHC.Prim.readMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ (GHC.Types.Int,
                                                                          GHC.Types.Int)
                                                                       ipv9_snIg
                                                                       ipv106_sokA
                                                                of _ [Occ=Dead]
                                                                { (# ipv108_sokE [Occ=Once], ipv109_sokF #) ->
                                                                case GHC.Prim.writeMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ (GHC.Types.Int,
                                                                          GHC.Types.Int)
                                                                       ipv19_snIv
                                                                       ipv109_sokF
                                                                       ipv108_sokE
                                                                of s2#24_sokG { __DEFAULT ->
                                                                let {
                                                                  sat_sol0 [Occ=Once, Dmd=<L,1*U>]
                                                                    :: GHC.Base.String
                                                                  [LclId, Str=DmdType]
                                                                  sat_sol0 =
                                                                    let {
                                                                      sat_sokZ [Occ=Once]
                                                                        :: [GHC.Types.Char]
                                                                      [LclId, Str=DmdType]
                                                                      sat_sokZ =
                                                                        case ipv109_sokF
                                                                        of _ [Occ=Dead]
                                                                        { (ww1_sokI [Occ=Once!], ww2_sokJ [Occ=OnceL!]) ->
                                                                        let {
                                                                          sat_sokY [Occ=Once]
                                                                            :: [GHC.Types.Char]
                                                                          [LclId, Str=DmdType]
                                                                          sat_sokY =
                                                                            case ww1_sokI
                                                                            of _ [Occ=Dead]
                                                                            { GHC.Types.I# ww4_sokL [Occ=Once] ->
                                                                            let {
                                                                              sat_sokT [Occ=Once]
                                                                                :: [GHC.Types.Char]
                                                                              [LclId, Str=DmdType]
                                                                              sat_sokT =
                                                                                let {
                                                                                  sat_sokS [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                       -> GHC.Base.String
                                                                                  [LclId,
                                                                                   Str=DmdType]
                                                                                  sat_sokS =
                                                                                    \ (w2_sokM [Occ=Once]
                                                                                         :: GHC.Base.String) ->
                                                                                      case ww2_sokJ
                                                                                      of _ [Occ=Dead]
                                                                                      { GHC.Types.I# ww6_sokO [Occ=Once] ->
                                                                                      case GHC.Show.$wshowSignedInt
                                                                                             0
                                                                                             ww6_sokO
                                                                                             w2_sokM
                                                                                      of _ [Occ=Dead]
                                                                                      { (# ww8_sokQ [Occ=Once], ww9_sokR [Occ=Once] #) ->
                                                                                      GHC.Types.:
                                                                                        @ GHC.Types.Char
                                                                                        ww8_sokQ
                                                                                        ww9_sokR
                                                                                      }
                                                                                      } } in
                                                                                GHC.List.foldr1_$sfoldr1
                                                                                  @ (GHC.Base.String
                                                                                     -> GHC.Base.String)
                                                                                  GHC.Show.$fShow(,)1
                                                                                  sat_sokS
                                                                                  (GHC.Types.[]
                                                                                     @ GHC.Show.ShowS)
                                                                                  lvl4_rger } in
                                                                            let {
                                                                              sat_sokU [Occ=Once]
                                                                                :: GHC.Base.String
                                                                              [LclId, Str=DmdType]
                                                                              sat_sokU =
                                                                                GHC.Types.:
                                                                                  @ GHC.Types.Char
                                                                                  GHC.Show.showList__1
                                                                                  sat_sokT } in
                                                                            case GHC.Show.$wshowSignedInt
                                                                                   0
                                                                                   ww4_sokL
                                                                                   sat_sokU
                                                                            of _ [Occ=Dead]
                                                                            { (# ww6_sokW [Occ=Once], ww7_sokX [Occ=Once] #) ->
                                                                            GHC.Types.:
                                                                              @ GHC.Types.Char
                                                                              ww6_sokW
                                                                              ww7_sokX
                                                                            }
                                                                            } } in
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          GHC.Show.shows13
                                                                          sat_sokY
                                                                        } } in
                                                                    GHC.CString.unpackAppendCString#
                                                                      "merg: "# sat_sokZ } in
                                                                case GHC.IO.Handle.Text.hPutStr2
                                                                       GHC.IO.Handle.FD.stdout
                                                                       sat_sol0
                                                                       GHC.Types.True
                                                                       s2#24_sokG
                                                                of _ [Occ=Dead]
                                                                { (# ipv110_sol2 [Occ=Once], _ [Occ=Dead] #) ->
                                                                case GHC.Prim.readMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ (GHC.Types.Int,
                                                                          GHC.Types.Int)
                                                                       ipv19_snIv
                                                                       ipv110_sol2
                                                                of _ [Occ=Dead]
                                                                { (# ipv112_sol5 [Occ=Once], ipv113_sol6 [Occ=Once] #) ->
                                                                let {
                                                                  sat_sol7 [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId, Str=DmdType]
                                                                  sat_sol7 =
                                                                    Data.Tuple.snd
                                                                      @ GHC.Types.Int
                                                                      @ GHC.Types.Int
                                                                      ipv113_sol6 } in
                                                                case GHC.Prim.writeMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ GHC.Types.Int
                                                                       ipv21_snIy
                                                                       sat_sol7
                                                                       ipv112_sol5
                                                                of s2#25_sol8 { __DEFAULT ->
                                                                letrec {
                                                                  a20_sol9 [Occ=LoopBreaker]
                                                                    :: GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             () #)
                                                                  [LclId,
                                                                   Arity=1,
                                                                   Str=DmdType <L,U>,
                                                                   Unf=OtherCon []]
                                                                  a20_sol9 =
                                                                    \ (eta5_sola [Occ=Once]
                                                                         :: GHC.Prim.State#
                                                                              GHC.Prim.RealWorld) ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_snIN
                                                                             eta5_sola
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv114_solc [Occ=Once], ipv115_sold [Occ=Once] #) ->
                                                                      let {
                                                                        ix2_sole [Dmd=<L,U(U)>]
                                                                          :: GHC.Types.Int
                                                                        [LclId, Str=DmdType]
                                                                        ix2_sole =
                                                                          Automata4Coms.indices_a_get_ix
                                                                            ipv115_sold } in
                                                                      case GHC.Prim.writeMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ GHC.Types.Int
                                                                             ipv17_snIs
                                                                             ix2_sole
                                                                             ipv114_solc
                                                                      of s2#26_solf { __DEFAULT ->
                                                                      let {
                                                                        sat_solm [Occ=Once,
                                                                                  Dmd=<L,1*U>]
                                                                          :: GHC.Base.String
                                                                        [LclId, Str=DmdType]
                                                                        sat_solm =
                                                                          let {
                                                                            sat_soll [Occ=Once]
                                                                              :: [GHC.Types.Char]
                                                                            [LclId, Str=DmdType]
                                                                            sat_soll =
                                                                              case ix2_sole
                                                                              of _ [Occ=Dead]
                                                                              { GHC.Types.I# ww3_solh [Occ=Once] ->
                                                                              case GHC.Show.$wshowSignedInt
                                                                                     0
                                                                                     ww3_solh
                                                                                     (GHC.Types.[]
                                                                                        @ GHC.Types.Char)
                                                                              of _ [Occ=Dead]
                                                                              { (# ww5_solj [Occ=Once], ww6_solk [Occ=Once] #) ->
                                                                              GHC.Types.:
                                                                                @ GHC.Types.Char
                                                                                ww5_solj
                                                                                ww6_solk
                                                                              }
                                                                              } } in
                                                                          GHC.CString.unpackAppendCString#
                                                                            "filtd:"# sat_soll } in
                                                                      case GHC.IO.Handle.Text.hPutStr2
                                                                             GHC.IO.Handle.FD.stdout
                                                                             sat_solm
                                                                             GHC.Types.True
                                                                             s2#26_solf
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv116_solo [Occ=Once], _ [Occ=Dead] #) ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_snIN
                                                                             ipv116_solo
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv118_solr [Occ=Once], ipv119_sols [Occ=Once] #) ->
                                                                      let {
                                                                        sat_solt [Occ=Once]
                                                                          :: (GHC.Types.Int,
                                                                              GHC.Types.Int)
                                                                        [LclId, Str=DmdType]
                                                                        sat_solt =
                                                                          Automata4Coms.indices_a_inc_ix
                                                                            ipv119_sols } in
                                                                      case GHC.Prim.writeMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_snIN
                                                                             sat_solt
                                                                             ipv118_solr
                                                                      of s2#27_solu { __DEFAULT ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_snIN
                                                                             s2#27_solu
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv120_solw [Occ=Once*], ipv121_solx [Occ=Once] #) ->
                                                                      case Automata4Coms.indices_a_check
                                                                             ipv121_solx
                                                                      of _ [Occ=Dead] {
                                                                        GHC.Types.False ->
                                                                          case GHC.Prim.readMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ GHC.Types.Int
                                                                                 ipv21_snIy
                                                                                 ipv120_solw
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv122_solA [Occ=Once], ipv123_solB [Occ=Once] #) ->
                                                                          let {
                                                                            sat_solC [Occ=Once]
                                                                              :: (GHC.Types.Int,
                                                                                  GHC.Types.Int)
                                                                            [LclId, Str=DmdType]
                                                                            sat_solC =
                                                                              Automata4Coms.indices_a_init
                                                                                ipv123_solB } in
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv31_snIN
                                                                                 sat_solC
                                                                                 ipv122_solA
                                                                          of s2#28_solD
                                                                          { __DEFAULT ->
                                                                          a14_snVR s2#28_solD
                                                                          }
                                                                          };
                                                                        GHC.Types.True ->
                                                                          a20_sol9 ipv120_solw
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }; } in
                                                                a20_sol9 s2#25_sol8
                                                                }
                                                                }
                                                                }
                                                                }
                                                                };
                                                              GHC.Types.True ->
                                                                case GHC.Prim.readMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ (GHC.Types.Int,
                                                                          GHC.Types.Int)
                                                                       ipv11_snIj
                                                                       ipv106_sokA
                                                                of _ [Occ=Dead]
                                                                { (# ipv108_solF [Occ=Once], ipv109_solG #) ->
                                                                case GHC.Prim.writeMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ (GHC.Types.Int,
                                                                          GHC.Types.Int)
                                                                       ipv19_snIv
                                                                       ipv109_solG
                                                                       ipv108_solF
                                                                of s2#24_solH { __DEFAULT ->
                                                                let {
                                                                  sat_som1 [Occ=Once, Dmd=<L,1*U>]
                                                                    :: GHC.Base.String
                                                                  [LclId, Str=DmdType]
                                                                  sat_som1 =
                                                                    let {
                                                                      sat_som0 [Occ=Once]
                                                                        :: [GHC.Types.Char]
                                                                      [LclId, Str=DmdType]
                                                                      sat_som0 =
                                                                        case ipv109_solG
                                                                        of _ [Occ=Dead]
                                                                        { (ww1_solJ [Occ=Once!], ww2_solK [Occ=OnceL!]) ->
                                                                        let {
                                                                          sat_solZ [Occ=Once]
                                                                            :: [GHC.Types.Char]
                                                                          [LclId, Str=DmdType]
                                                                          sat_solZ =
                                                                            case ww1_solJ
                                                                            of _ [Occ=Dead]
                                                                            { GHC.Types.I# ww4_solM [Occ=Once] ->
                                                                            let {
                                                                              sat_solU [Occ=Once]
                                                                                :: [GHC.Types.Char]
                                                                              [LclId, Str=DmdType]
                                                                              sat_solU =
                                                                                let {
                                                                                  sat_solT [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                       -> GHC.Base.String
                                                                                  [LclId,
                                                                                   Str=DmdType]
                                                                                  sat_solT =
                                                                                    \ (w2_solN [Occ=Once]
                                                                                         :: GHC.Base.String) ->
                                                                                      case ww2_solK
                                                                                      of _ [Occ=Dead]
                                                                                      { GHC.Types.I# ww6_solP [Occ=Once] ->
                                                                                      case GHC.Show.$wshowSignedInt
                                                                                             0
                                                                                             ww6_solP
                                                                                             w2_solN
                                                                                      of _ [Occ=Dead]
                                                                                      { (# ww8_solR [Occ=Once], ww9_solS [Occ=Once] #) ->
                                                                                      GHC.Types.:
                                                                                        @ GHC.Types.Char
                                                                                        ww8_solR
                                                                                        ww9_solS
                                                                                      }
                                                                                      } } in
                                                                                GHC.List.foldr1_$sfoldr1
                                                                                  @ (GHC.Base.String
                                                                                     -> GHC.Base.String)
                                                                                  GHC.Show.$fShow(,)1
                                                                                  sat_solT
                                                                                  (GHC.Types.[]
                                                                                     @ GHC.Show.ShowS)
                                                                                  lvl4_rger } in
                                                                            let {
                                                                              sat_solV [Occ=Once]
                                                                                :: GHC.Base.String
                                                                              [LclId, Str=DmdType]
                                                                              sat_solV =
                                                                                GHC.Types.:
                                                                                  @ GHC.Types.Char
                                                                                  GHC.Show.showList__1
                                                                                  sat_solU } in
                                                                            case GHC.Show.$wshowSignedInt
                                                                                   0
                                                                                   ww4_solM
                                                                                   sat_solV
                                                                            of _ [Occ=Dead]
                                                                            { (# ww6_solX [Occ=Once], ww7_solY [Occ=Once] #) ->
                                                                            GHC.Types.:
                                                                              @ GHC.Types.Char
                                                                              ww6_solX
                                                                              ww7_solY
                                                                            }
                                                                            } } in
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          GHC.Show.shows13
                                                                          sat_solZ
                                                                        } } in
                                                                    GHC.CString.unpackAppendCString#
                                                                      "merg: "# sat_som0 } in
                                                                case GHC.IO.Handle.Text.hPutStr2
                                                                       GHC.IO.Handle.FD.stdout
                                                                       sat_som1
                                                                       GHC.Types.True
                                                                       s2#24_solH
                                                                of _ [Occ=Dead]
                                                                { (# ipv110_som3 [Occ=Once], _ [Occ=Dead] #) ->
                                                                case GHC.Prim.readMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ (GHC.Types.Int,
                                                                          GHC.Types.Int)
                                                                       ipv19_snIv
                                                                       ipv110_som3
                                                                of _ [Occ=Dead]
                                                                { (# ipv112_som6 [Occ=Once], ipv113_som7 [Occ=Once] #) ->
                                                                let {
                                                                  sat_som8 [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId, Str=DmdType]
                                                                  sat_som8 =
                                                                    Data.Tuple.snd
                                                                      @ GHC.Types.Int
                                                                      @ GHC.Types.Int
                                                                      ipv113_som7 } in
                                                                case GHC.Prim.writeMutVar#
                                                                       @ GHC.Prim.RealWorld
                                                                       @ GHC.Types.Int
                                                                       ipv21_snIy
                                                                       sat_som8
                                                                       ipv112_som6
                                                                of s2#25_som9 { __DEFAULT ->
                                                                letrec {
                                                                  a20_soma [Occ=LoopBreaker]
                                                                    :: GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             () #)
                                                                  [LclId,
                                                                   Arity=1,
                                                                   Str=DmdType <L,U>,
                                                                   Unf=OtherCon []]
                                                                  a20_soma =
                                                                    \ (eta5_somb [Occ=Once]
                                                                         :: GHC.Prim.State#
                                                                              GHC.Prim.RealWorld) ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_snIN
                                                                             eta5_somb
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv114_somd [Occ=Once], ipv115_some [Occ=Once] #) ->
                                                                      let {
                                                                        ix2_somf [Dmd=<L,U(U)>]
                                                                          :: GHC.Types.Int
                                                                        [LclId, Str=DmdType]
                                                                        ix2_somf =
                                                                          Automata4Coms.indices_a_get_ix
                                                                            ipv115_some } in
                                                                      case GHC.Prim.writeMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ GHC.Types.Int
                                                                             ipv17_snIs
                                                                             ix2_somf
                                                                             ipv114_somd
                                                                      of s2#26_somg { __DEFAULT ->
                                                                      let {
                                                                        sat_somn [Occ=Once,
                                                                                  Dmd=<L,1*U>]
                                                                          :: GHC.Base.String
                                                                        [LclId, Str=DmdType]
                                                                        sat_somn =
                                                                          let {
                                                                            sat_somm [Occ=Once]
                                                                              :: [GHC.Types.Char]
                                                                            [LclId, Str=DmdType]
                                                                            sat_somm =
                                                                              case ix2_somf
                                                                              of _ [Occ=Dead]
                                                                              { GHC.Types.I# ww3_somi [Occ=Once] ->
                                                                              case GHC.Show.$wshowSignedInt
                                                                                     0
                                                                                     ww3_somi
                                                                                     (GHC.Types.[]
                                                                                        @ GHC.Types.Char)
                                                                              of _ [Occ=Dead]
                                                                              { (# ww5_somk [Occ=Once], ww6_soml [Occ=Once] #) ->
                                                                              GHC.Types.:
                                                                                @ GHC.Types.Char
                                                                                ww5_somk
                                                                                ww6_soml
                                                                              }
                                                                              } } in
                                                                          GHC.CString.unpackAppendCString#
                                                                            "filtd:"# sat_somm } in
                                                                      case GHC.IO.Handle.Text.hPutStr2
                                                                             GHC.IO.Handle.FD.stdout
                                                                             sat_somn
                                                                             GHC.Types.True
                                                                             s2#26_somg
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv116_somp [Occ=Once], _ [Occ=Dead] #) ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_snIN
                                                                             ipv116_somp
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv118_soms [Occ=Once], ipv119_somt [Occ=Once] #) ->
                                                                      let {
                                                                        sat_somu [Occ=Once]
                                                                          :: (GHC.Types.Int,
                                                                              GHC.Types.Int)
                                                                        [LclId, Str=DmdType]
                                                                        sat_somu =
                                                                          Automata4Coms.indices_a_inc_ix
                                                                            ipv119_somt } in
                                                                      case GHC.Prim.writeMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_snIN
                                                                             sat_somu
                                                                             ipv118_soms
                                                                      of s2#27_somv { __DEFAULT ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_snIN
                                                                             s2#27_somv
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv120_somx [Occ=Once*], ipv121_somy [Occ=Once] #) ->
                                                                      case Automata4Coms.indices_a_check
                                                                             ipv121_somy
                                                                      of _ [Occ=Dead] {
                                                                        GHC.Types.False ->
                                                                          case GHC.Prim.readMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ GHC.Types.Int
                                                                                 ipv21_snIy
                                                                                 ipv120_somx
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv122_somB [Occ=Once], ipv123_somC [Occ=Once] #) ->
                                                                          let {
                                                                            sat_somD [Occ=Once]
                                                                              :: (GHC.Types.Int,
                                                                                  GHC.Types.Int)
                                                                            [LclId, Str=DmdType]
                                                                            sat_somD =
                                                                              Automata4Coms.indices_a_init
                                                                                ipv123_somC } in
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv31_snIN
                                                                                 sat_somD
                                                                                 ipv122_somB
                                                                          of s2#28_somE
                                                                          { __DEFAULT ->
                                                                          case GHC.Prim.readMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ [GHC.Types.Int]
                                                                                 ipv3_snI7
                                                                                 s2#28_somE
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv124_somG [Occ=Once*], ipv125_somH [Occ=Once!] #) ->
                                                                          case ipv125_somH
                                                                          of _ [Occ=Dead] {
                                                                            [] ->
                                                                              a13_snUO ipv124_somG;
                                                                            : i3_somJ [Occ=Once]
                                                                              is3_somK [Occ=Once] ->
                                                                              case GHC.Prim.writeMutVar#
                                                                                     @ GHC.Prim.RealWorld
                                                                                     @ [GHC.Types.Int]
                                                                                     ipv3_snI7
                                                                                     is3_somK
                                                                                     ipv124_somG
                                                                              of s2#29_somL
                                                                              { __DEFAULT ->
                                                                              case GHC.Prim.writeMutVar#
                                                                                     @ GHC.Prim.RealWorld
                                                                                     @ GHC.Types.Int
                                                                                     ipv7_snId
                                                                                     i3_somJ
                                                                                     s2#29_somL
                                                                              of s2#30_somM
                                                                              { __DEFAULT ->
                                                                              a12_snTL s2#30_somM
                                                                              }
                                                                              }
                                                                          }
                                                                          }
                                                                          }
                                                                          };
                                                                        GHC.Types.True ->
                                                                          a20_soma ipv120_somx
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }; } in
                                                                a20_soma s2#25_som9
                                                                }
                                                                }
                                                                }
                                                                }
                                                                }
                                                            }
                                                            }
                                                            }
                                                            }
                                                            }
                                                            }
                                                            };
                                                          GHC.Types.True -> a19_sojW ipv98_sokj
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a19_sojW s2#19_sojV
                                                  }
                                                  }
                                                  }
                                                  }
                                                  };
                                                GHC.Types.True ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv11_snIj
                                                         ipv84_sojn
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_somO [Occ=Once], ipv87_somP #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv87_somP
                                                         ipv86_somO
                                                  of s2#18_somQ { __DEFAULT ->
                                                  let {
                                                    sat_sona [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sona =
                                                      let {
                                                        sat_son9 [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_son9 =
                                                          case ipv87_somP
                                                          of _ [Occ=Dead]
                                                          { (ww1_somS [Occ=Once!], ww2_somT [Occ=OnceL!]) ->
                                                          let {
                                                            sat_son8 [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_son8 =
                                                              case ww1_somS
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_somV [Occ=Once] ->
                                                              let {
                                                                sat_son3 [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_son3 =
                                                                  let {
                                                                    sat_son2 [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_son2 =
                                                                      \ (w2_somW [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_somT
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_somY [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_somY w2_somW
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_son0 [Occ=Once], ww9_son1 [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_son0
                                                                          ww9_son1
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_son2
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_son4 [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_son4 =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_son3 } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_somV sat_son4
                                                              of _ [Occ=Dead]
                                                              { (# ww6_son6 [Occ=Once], ww7_son7 [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_son6 ww7_son7
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_son8
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_son9 } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sona
                                                         GHC.Types.True
                                                         s2#18_somQ
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_sonc [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv88_sonc
                                                  of _ [Occ=Dead]
                                                  { (# ipv90_sonf [Occ=Once], ipv91_song [Occ=Once] #) ->
                                                  let {
                                                    sat_sonh [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sonh =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv91_song } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_snIy
                                                         sat_sonh
                                                         ipv90_sonf
                                                  of s2#19_soni { __DEFAULT ->
                                                  letrec {
                                                    a19_sonj [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a19_sonj =
                                                      \ (eta4_sonk [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               eta4_sonk
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_sonm [Occ=Once], ipv93_sonn [Occ=Once] #) ->
                                                        let {
                                                          ix1_sono [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_sono =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv93_sonn } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_snIs
                                                               ix1_sono
                                                               ipv92_sonm
                                                        of s2#20_sonp { __DEFAULT ->
                                                        let {
                                                          sat_sonw [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_sonw =
                                                            let {
                                                              sat_sonv [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_sonv =
                                                                case ix1_sono
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_sonr [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_sonr
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_sont [Occ=Once], ww6_sonu [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_sont ww6_sonu
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_sonv } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_sonw
                                                               GHC.Types.True
                                                               s2#20_sonp
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_sony [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               ipv94_sony
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_sonB [Occ=Once], ipv97_sonC [Occ=Once] #) ->
                                                        let {
                                                          sat_sonD [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_sonD =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv97_sonC } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               sat_sonD
                                                               ipv96_sonB
                                                        of s2#21_sonE { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               s2#21_sonE
                                                        of _ [Occ=Dead]
                                                        { (# ipv98_sonG [Occ=Once*], ipv99_sonH [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv99_sonH
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_snIy
                                                                   ipv98_sonG
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_sonK [Occ=Once], ipv101_sonL [Occ=Once] #) ->
                                                            let {
                                                              sat_sonM [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_sonM =
                                                                Automata4Coms.indices_a_init
                                                                  ipv101_sonL } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_snIN
                                                                   sat_sonM
                                                                   ipv100_sonK
                                                            of s2#22_sonN { __DEFAULT ->
                                                            a12_snTL s2#22_sonN
                                                            }
                                                            };
                                                          GHC.Types.True -> a19_sonj ipv98_sonG
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a19_sonj s2#19_soni
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              };
                                            GHC.Types.True -> a18_soiF ipv74_soj2
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a18_soiF s2#12_soiE
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                            }
                            } } in
                      let {
                        a18_sonO
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a18_sonO =
                          \ (eta2_sonP [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv11_snIj
                                   eta2_sonP
                            of _ [Occ=Dead] { (# ipv54_sonR [Occ=Once], ipv55_sonS #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv55_sonS
                                   ipv54_sonR
                            of s2#8_sonT { __DEFAULT ->
                            let {
                              sat_sood [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sood =
                                let {
                                  sat_sooc [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sooc =
                                    case ipv55_sonS
                                    of _ [Occ=Dead]
                                    { (ww1_sonV [Occ=Once!], ww2_sonW [Occ=OnceL!]) ->
                                    let {
                                      sat_soob [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_soob =
                                        case ww1_sonV
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_sonY [Occ=Once] ->
                                        let {
                                          sat_soo6 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soo6 =
                                            let {
                                              sat_soo5 [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_soo5 =
                                                \ (w2_sonZ [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_sonW
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_soo1 [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_soo1 w2_sonZ
                                                  of _ [Occ=Dead]
                                                  { (# ww8_soo3 [Occ=Once], ww9_soo4 [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_soo3 ww9_soo4
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_soo5
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_soo7 [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_soo7 =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_soo6 } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_sonY sat_soo7
                                        of _ [Occ=Dead]
                                        { (# ww6_soo9 [Occ=Once], ww7_sooa [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_soo9 ww7_sooa
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soob
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_sooc } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sood GHC.Types.True s2#8_sonT
                            of _ [Occ=Dead] { (# ipv56_soof [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv56_soof
                            of _ [Occ=Dead]
                            { (# ipv58_sooi [Occ=Once], ipv59_sooj [Occ=Once] #) ->
                            let {
                              sat_sook [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sook =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_sooj } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_snIy
                                   sat_sook
                                   ipv58_sooi
                            of s2#9_sool { __DEFAULT ->
                            letrec {
                              a19_soom [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a19_soom =
                                \ (eta3_soon [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         eta3_soon
                                  of _ [Occ=Dead]
                                  { (# ipv60_soop [Occ=Once], ipv61_sooq [Occ=Once] #) ->
                                  let {
                                    ix_soor [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_soor = Automata4Coms.indices_a_get_ix ipv61_sooq } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_snIs
                                         ix_soor
                                         ipv60_soop
                                  of s2#10_soos { __DEFAULT ->
                                  let {
                                    sat_sooz [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_sooz =
                                      let {
                                        sat_sooy [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_sooy =
                                          case ix_soor
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_soou [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_soou (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_soow [Occ=Once], ww6_soox [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_soow ww6_soox
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_sooy } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_sooz GHC.Types.True s2#10_soos
                                  of _ [Occ=Dead] { (# ipv62_sooB [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         ipv62_sooB
                                  of _ [Occ=Dead]
                                  { (# ipv64_sooE [Occ=Once], ipv65_sooF [Occ=Once] #) ->
                                  let {
                                    sat_sooG [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_sooG = Automata4Coms.indices_a_inc_ix ipv65_sooF } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         sat_sooG
                                         ipv64_sooE
                                  of s2#11_sooH { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         s2#11_sooH
                                  of _ [Occ=Dead]
                                  { (# ipv66_sooJ [Occ=Once*], ipv67_sooK [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv67_sooK of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_snIy
                                             ipv66_sooJ
                                      of _ [Occ=Dead]
                                      { (# ipv68_sooN [Occ=Once], ipv69_sooO [Occ=Once] #) ->
                                      let {
                                        sat_sooP [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sooP = Automata4Coms.indices_a_init ipv69_sooO } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_snIN
                                             sat_sooP
                                             ipv68_sooN
                                      of s2#12_sooQ { __DEFAULT ->
                                      a7_snOC s2#12_sooQ
                                      }
                                      };
                                    GHC.Types.True -> a19_soom ipv66_sooJ
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a19_soom s2#9_sool
                            }
                            }
                            }
                            }
                            } } in
                      let {
                        a19_sooR
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a19_sooR =
                          \ (eta2_sooS [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv11_snIj
                                   eta2_sooS
                            of _ [Occ=Dead] { (# ipv54_sooU [Occ=Once], ipv55_sooV #) ->
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv55_sooV
                                   ipv54_sooU
                            of s2#8_sooW { __DEFAULT ->
                            let {
                              sat_sopg [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sopg =
                                let {
                                  sat_sopf [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sopf =
                                    case ipv55_sooV
                                    of _ [Occ=Dead]
                                    { (ww1_sooY [Occ=Once!], ww2_sooZ [Occ=OnceL!]) ->
                                    let {
                                      sat_sope [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_sope =
                                        case ww1_sooY
                                        of _ [Occ=Dead] { GHC.Types.I# ww4_sop1 [Occ=Once] ->
                                        let {
                                          sat_sop9 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sop9 =
                                            let {
                                              sat_sop8 [Occ=Once]
                                                :: GHC.Base.String -> GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_sop8 =
                                                \ (w2_sop2 [Occ=Once] :: GHC.Base.String) ->
                                                  case ww2_sooZ
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww6_sop4 [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt 0 ww6_sop4 w2_sop2
                                                  of _ [Occ=Dead]
                                                  { (# ww8_sop6 [Occ=Once], ww9_sop7 [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww8_sop6 ww9_sop7
                                                  }
                                                  } } in
                                            GHC.List.foldr1_$sfoldr1
                                              @ (GHC.Base.String -> GHC.Base.String)
                                              GHC.Show.$fShow(,)1
                                              sat_sop8
                                              (GHC.Types.[] @ GHC.Show.ShowS)
                                              lvl4_rger } in
                                        let {
                                          sat_sopa [Occ=Once] :: GHC.Base.String
                                          [LclId, Str=DmdType]
                                          sat_sopa =
                                            GHC.Types.:
                                              @ GHC.Types.Char GHC.Show.showList__1 sat_sop9 } in
                                        case GHC.Show.$wshowSignedInt 0 ww4_sop1 sat_sopa
                                        of _ [Occ=Dead]
                                        { (# ww6_sopc [Occ=Once], ww7_sopd [Occ=Once] #) ->
                                        GHC.Types.: @ GHC.Types.Char ww6_sopc ww7_sopd
                                        }
                                        } } in
                                    GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sope
                                    } } in
                                GHC.CString.unpackAppendCString# "merg: "# sat_sopf } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sopg GHC.Types.True s2#8_sooW
                            of _ [Occ=Dead] { (# ipv56_sopi [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv19_snIv
                                   ipv56_sopi
                            of _ [Occ=Dead]
                            { (# ipv58_sopl [Occ=Once], ipv59_sopm [Occ=Once] #) ->
                            let {
                              sat_sopn [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sopn =
                                Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_sopm } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv21_snIy
                                   sat_sopn
                                   ipv58_sopl
                            of s2#9_sopo { __DEFAULT ->
                            letrec {
                              a20_sopp [Occ=LoopBreaker]
                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                              a20_sopp =
                                \ (eta3_sopq [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         eta3_sopq
                                  of _ [Occ=Dead]
                                  { (# ipv60_sops [Occ=Once], ipv61_sopt [Occ=Once] #) ->
                                  let {
                                    ix_sopu [Dmd=<L,U(U)>] :: GHC.Types.Int
                                    [LclId, Str=DmdType]
                                    ix_sopu = Automata4Coms.indices_a_get_ix ipv61_sopt } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ GHC.Types.Int
                                         ipv17_snIs
                                         ix_sopu
                                         ipv60_sops
                                  of s2#10_sopv { __DEFAULT ->
                                  let {
                                    sat_sopC [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                    [LclId, Str=DmdType]
                                    sat_sopC =
                                      let {
                                        sat_sopB [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_sopB =
                                          case ix_sopu
                                          of _ [Occ=Dead] { GHC.Types.I# ww3_sopx [Occ=Once] ->
                                          case GHC.Show.$wshowSignedInt
                                                 0 ww3_sopx (GHC.Types.[] @ GHC.Types.Char)
                                          of _ [Occ=Dead]
                                          { (# ww5_sopz [Occ=Once], ww6_sopA [Occ=Once] #) ->
                                          GHC.Types.: @ GHC.Types.Char ww5_sopz ww6_sopA
                                          }
                                          } } in
                                      GHC.CString.unpackAppendCString# "filtd:"# sat_sopB } in
                                  case GHC.IO.Handle.Text.hPutStr2
                                         GHC.IO.Handle.FD.stdout sat_sopC GHC.Types.True s2#10_sopv
                                  of _ [Occ=Dead] { (# ipv62_sopE [Occ=Once], _ [Occ=Dead] #) ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         ipv62_sopE
                                  of _ [Occ=Dead]
                                  { (# ipv64_sopH [Occ=Once], ipv65_sopI [Occ=Once] #) ->
                                  let {
                                    sat_sopJ [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                    [LclId, Str=DmdType]
                                    sat_sopJ = Automata4Coms.indices_a_inc_ix ipv65_sopI } in
                                  case GHC.Prim.writeMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         sat_sopJ
                                         ipv64_sopH
                                  of s2#11_sopK { __DEFAULT ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         ipv31_snIN
                                         s2#11_sopK
                                  of _ [Occ=Dead]
                                  { (# ipv66_sopM [Occ=Once*], ipv67_sopN [Occ=Once] #) ->
                                  case Automata4Coms.indices_a_check ipv67_sopN of _ [Occ=Dead] {
                                    GHC.Types.False ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv21_snIy
                                             ipv66_sopM
                                      of _ [Occ=Dead]
                                      { (# ipv68_sopQ [Occ=Once], ipv69_sopR [Occ=Once] #) ->
                                      let {
                                        sat_sopS [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_sopS = Automata4Coms.indices_a_init ipv69_sopR } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_snIN
                                             sat_sopS
                                             ipv68_sopQ
                                      of s2#12_sopT { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv15_snIp
                                             s2#12_sopT
                                      of _ [Occ=Dead]
                                      { (# ipv70_sopV [Occ=Once], ipv71_sopW [Occ=Once] #) ->
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv13_snIm
                                             ipv71_sopW
                                             ipv70_sopV
                                      of s2#13_sopX { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv13_snIm
                                             s2#13_sopX
                                      of _ [Occ=Dead] { (# ipv72_sopZ [Occ=Once], ipv73_soq0 #) ->
                                      let {
                                        sat_soq1 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_soq1 = (ipv73_soq0, ipv73_soq0) } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv11_snIj
                                             sat_soq1
                                             ipv72_sopZ
                                      of s2#14_soq2 { __DEFAULT ->
                                      a18_sonO s2#14_soq2
                                      }
                                      }
                                      }
                                      }
                                      }
                                      };
                                    GHC.Types.True -> a20_sopp ipv66_sopM
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }
                                  }; } in
                            a20_sopp s2#9_sopo
                            }
                            }
                            }
                            }
                            } } in
                      letrec {
                        a25_soq8 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a25_soq8 =
                          \ (eta2_sosw [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_sosw
                            of _ [Occ=Dead]
                            { (# ipv54_sosy [Occ=Once], ipv55_sosz [Occ=Once] #) ->
                            let {
                              ix_sosA [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_sosA = Automata4Coms.indices_a_get_ix ipv55_sosz } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_sosA
                                   ipv54_sosy
                            of s2#8_sosB { __DEFAULT ->
                            let {
                              sat_sosI [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sosI =
                                let {
                                  sat_sosH [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sosH =
                                    case ix_sosA
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_sosD [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_sosD (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_sosF [Occ=Once], ww6_sosG [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_sosF ww6_sosG
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_sosH } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sosI GHC.Types.True s2#8_sosB
                            of _ [Occ=Dead] { (# ipv56_sosK [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv56_sosK
                            of _ [Occ=Dead]
                            { (# ipv58_sosN [Occ=Once], ipv59_sosO [Occ=Once] #) ->
                            let {
                              sat_sosP [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_sosP = Automata4Coms.indices_a_inc_ix ipv59_sosO } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_sosP
                                   ipv58_sosN
                            of s2#9_sosQ { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#9_sosQ
                            of _ [Occ=Dead]
                            { (# ipv60_sosS [Occ=Once*], ipv61_sosT [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_sosT of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv60_sosS
                                of _ [Occ=Dead]
                                { (# ipv62_sosW [Occ=Once], ipv63_sosX [Occ=Once] #) ->
                                let {
                                  sat_sosY [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sosY = Automata4Coms.indices_a_init ipv63_sosX } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_sosY
                                       ipv62_sosW
                                of s2#10_sosZ { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp s2#10_sosZ
                                of _ [Occ=Dead]
                                { (# ipv64_sot1 [Occ=Once], ipv65_sot2 [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_snIm
                                       ipv65_sot2
                                       ipv64_sot1
                                of s2#11_sot3 { __DEFAULT ->
                                a20_soq3 s2#11_sot3
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a25_soq8 ipv60_sosS
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a22_soq5
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a22_soq5 =
                          \ (eta2_sor9 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_snIa eta2_sor9
                            of _ [Occ=Dead]
                            { (# ipv54_sorb [Occ=Once], ipv55_sorc [Occ=Once] #) ->
                            let {
                              sat_sord [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_sord = inc_rgem ipv55_sorc } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv15_snIp
                                   sat_sord
                                   ipv54_sorb
                            of s2#8_sore { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp s2#8_sore
                            of _ [Occ=Dead]
                            { (# ipv56_sorg [Occ=Once*], ipv57_sorh [Occ=Once!] #) ->
                            case ipv57_sorh
                            of _ [Occ=Dead] { GHC.Types.I# x1_sorj [Occ=Once] ->
                            case GHC.Prim.># x1_sorj 10 of sat_sork { __DEFAULT ->
                            case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_sork
                            of _ [Occ=Dead] {
                              GHC.Types.False -> a21_soq4 ipv56_sorg;
                              GHC.Types.True ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp ipv56_sorg
                                of _ [Occ=Dead]
                                { (# ipv58_sorn [Occ=Once], ipv59_soro [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_snIm
                                       ipv59_soro
                                       ipv58_sorn
                                of s2#9_sorp { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 s2#9_sorp
                                of _ [Occ=Dead]
                                { (# ipv60_sorr [Occ=Once*], ipv61_sors [Occ=Once!] #) ->
                                case ipv61_sors of _ [Occ=Dead] {
                                  [] -> a15_snZq ipv60_sorr;
                                  : i2_soru [Occ=Once] is2_sorv [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_snI4
                                           is2_sorv
                                           ipv60_sorr
                                    of s2#10_sorw { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_snIa
                                           i2_soru
                                           s2#10_sorw
                                    of s2#11_sorx { __DEFAULT ->
                                    a20_soq3 s2#11_sorx
                                    }
                                    }
                                }
                                }
                                }
                                }
                            }
                            }
                            }
                            }
                            }
                            };
                        a21_soq4 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a21_soq4 =
                          \ (eta2_soqS [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 eta2_soqS
                            of _ [Occ=Dead]
                            { (# ipv54_soqU [Occ=Once*], ipv55_soqV [Occ=Once!] #) ->
                            case ipv55_soqV of _ [Occ=Dead] {
                              [] ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_snI7 ipv54_soqU
                                of _ [Occ=Dead]
                                { (# ipv56_soqY [Occ=Once*], ipv57_soqZ [Occ=Once!] #) ->
                                case ipv57_soqZ of _ [Occ=Dead] {
                                  [] -> a13_snUO ipv56_soqY;
                                  : i2_sor1 [Occ=Once] is2_sor2 [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv3_snI7
                                           is2_sor2
                                           ipv56_soqY
                                    of s2#8_sor3 { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv7_snId
                                           i2_sor1
                                           s2#8_sor3
                                    of s2#9_sor4 { __DEFAULT ->
                                    a12_snTL s2#9_sor4
                                    }
                                    }
                                }
                                };
                              : i2_sor5 [Occ=Once] is2_sor6 [Occ=Once] ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ [GHC.Types.Int]
                                       ipv1_snI4
                                       is2_sor6
                                       ipv54_soqU
                                of s2#8_sor7 { __DEFAULT ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv5_snIa
                                       i2_sor5
                                       s2#8_sor7
                                of s2#9_sor8 { __DEFAULT ->
                                a22_soq5 s2#9_sor8
                                }
                                }
                            }
                            };
                        a24_soq7 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a24_soq7 =
                          \ (eta2_sos2 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_sos2
                            of _ [Occ=Dead]
                            { (# ipv54_sos4 [Occ=Once], ipv55_sos5 [Occ=Once] #) ->
                            let {
                              ix_sos6 [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_sos6 = Automata4Coms.indices_a_get_ix ipv55_sos5 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_sos6
                                   ipv54_sos4
                            of s2#8_sos7 { __DEFAULT ->
                            let {
                              sat_sose [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sose =
                                let {
                                  sat_sosd [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sosd =
                                    case ix_sos6
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_sos9 [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_sos9 (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_sosb [Occ=Once], ww6_sosc [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_sosb ww6_sosc
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_sosd } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sose GHC.Types.True s2#8_sos7
                            of _ [Occ=Dead] { (# ipv56_sosg [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv56_sosg
                            of _ [Occ=Dead]
                            { (# ipv58_sosj [Occ=Once], ipv59_sosk [Occ=Once] #) ->
                            let {
                              sat_sosl [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_sosl = Automata4Coms.indices_a_inc_ix ipv59_sosk } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_sosl
                                   ipv58_sosj
                            of s2#9_sosm { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#9_sosm
                            of _ [Occ=Dead]
                            { (# ipv60_soso [Occ=Once*], ipv61_sosp [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_sosp of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv60_soso
                                of _ [Occ=Dead]
                                { (# ipv62_soss [Occ=Once], ipv63_sost [Occ=Once] #) ->
                                let {
                                  sat_sosu [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sosu = Automata4Coms.indices_a_init ipv63_sost } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_sosu
                                       ipv62_soss
                                of s2#10_sosv { __DEFAULT ->
                                a22_soq5 s2#10_sosv
                                }
                                };
                              GHC.Types.True -> a24_soq7 ipv60_soso
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a23_soq6 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a23_soq6 =
                          \ (eta2_sory [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_sory
                            of _ [Occ=Dead]
                            { (# ipv54_sorA [Occ=Once], ipv55_sorB [Occ=Once] #) ->
                            let {
                              ix_sorC [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_sorC = Automata4Coms.indices_a_get_ix ipv55_sorB } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_sorC
                                   ipv54_sorA
                            of s2#8_sorD { __DEFAULT ->
                            let {
                              sat_sorK [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sorK =
                                let {
                                  sat_sorJ [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sorJ =
                                    case ix_sorC
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_sorF [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_sorF (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_sorH [Occ=Once], ww6_sorI [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_sorH ww6_sorI
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_sorJ } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sorK GHC.Types.True s2#8_sorD
                            of _ [Occ=Dead] { (# ipv56_sorM [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv56_sorM
                            of _ [Occ=Dead]
                            { (# ipv58_sorP [Occ=Once], ipv59_sorQ [Occ=Once] #) ->
                            let {
                              sat_sorR [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_sorR = Automata4Coms.indices_a_inc_ix ipv59_sorQ } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_sorR
                                   ipv58_sorP
                            of s2#9_sorS { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#9_sorS
                            of _ [Occ=Dead]
                            { (# ipv60_sorU [Occ=Once*], ipv61_sorV [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_sorV of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv60_sorU
                                of _ [Occ=Dead]
                                { (# ipv62_sorY [Occ=Once], ipv63_sorZ [Occ=Once] #) ->
                                let {
                                  sat_sos0 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sos0 = Automata4Coms.indices_a_init ipv63_sorZ } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_sos0
                                       ipv62_sorY
                                of s2#10_sos1 { __DEFAULT ->
                                a21_soq4 s2#10_sos1
                                }
                                };
                              GHC.Types.True -> a23_soq6 ipv60_sorU
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a34_soqh [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a34_soqh =
                          \ (eta2_soE0 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_snIa eta2_soE0
                            of _ [Occ=Dead]
                            { (# ipv54_soE2 [Occ=Once], ipv55_soE3 [Occ=Once] #) ->
                            let {
                              sat_soE4 [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_soE4 = inc_rgem ipv55_soE3 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv15_snIp
                                   sat_soE4
                                   ipv54_soE2
                            of s2#8_soE5 { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp s2#8_soE5
                            of _ [Occ=Dead]
                            { (# ipv56_soE7 [Occ=Once*], ipv57_soE8 [Occ=Once!] #) ->
                            case ipv57_soE8
                            of _ [Occ=Dead] { GHC.Types.I# x1_soEa [Occ=Once] ->
                            case GHC.Prim.># x1_soEa 10 of sat_soEb { __DEFAULT ->
                            case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_soEb
                            of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 ipv56_soE7
                                of _ [Occ=Dead]
                                { (# ipv58_soEe [Occ=Once*], ipv59_soEf [Occ=Once!] #) ->
                                case ipv59_soEf of _ [Occ=Dead] {
                                  [] -> a12_snTL ipv58_soEe;
                                  : i2_soEh [Occ=Once] is2_soEi [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_snI4
                                           is2_soEi
                                           ipv58_soEe
                                    of s2#9_soEj { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_snIa
                                           i2_soEh
                                           s2#9_soEj
                                    of s2#10_soEk { __DEFAULT ->
                                    a34_soqh s2#10_soEk
                                    }
                                    }
                                }
                                };
                              GHC.Types.True ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp ipv56_soE7
                                of _ [Occ=Dead]
                                { (# ipv58_soEm [Occ=Once], ipv59_soEn [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_snIm
                                       ipv59_soEn
                                       ipv58_soEm
                                of s2#9_soEo { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_snIm s2#9_soEo
                                of _ [Occ=Dead] { (# ipv60_soEq [Occ=Once], ipv61_soEr #) ->
                                let {
                                  sat_soEs [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soEs = (ipv61_soEr, ipv61_soEr) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       sat_soEs
                                       ipv60_soEq
                                of s2#10_soEt { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       s2#10_soEt
                                of _ [Occ=Dead]
                                { (# ipv62_soEv [Occ=Once], ipv63_soEw [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       ipv62_soEv
                                of _ [Occ=Dead]
                                { (# ipv64_soEy [Occ=Once*], ipv65_soEz [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv63_soEw ipv65_soEz
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_snIg
                                           ipv64_soEy
                                    of _ [Occ=Dead] { (# ipv66_soEC [Occ=Once], ipv67_soED #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv67_soED
                                           ipv66_soEC
                                    of s2#11_soEE { __DEFAULT ->
                                    let {
                                      sat_soEY [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soEY =
                                        let {
                                          sat_soEX [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soEX =
                                            case ipv67_soED
                                            of _ [Occ=Dead]
                                            { (ww1_soEG [Occ=Once!], ww2_soEH [Occ=OnceL!]) ->
                                            let {
                                              sat_soEW [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soEW =
                                                case ww1_soEG
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soEJ [Occ=Once] ->
                                                let {
                                                  sat_soER [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soER =
                                                    let {
                                                      sat_soEQ [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soEQ =
                                                        \ (w2_soEK [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soEH
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soEM [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soEM w2_soEK
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soEO [Occ=Once], ww9_soEP [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soEO ww9_soEP
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soEQ
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soES [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soES =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soER } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soEJ sat_soES
                                                of _ [Occ=Dead]
                                                { (# ww6_soEU [Occ=Once], ww7_soEV [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soEU ww7_soEV
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soEW
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soEX } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_soEY
                                           GHC.Types.True
                                           s2#11_soEE
                                    of _ [Occ=Dead] { (# ipv68_soF0 [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv68_soF0
                                    of _ [Occ=Dead]
                                    { (# ipv70_soF3 [Occ=Once], ipv71_soF4 [Occ=Once] #) ->
                                    let {
                                      sat_soF5 [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soF5 =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv71_soF4 } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soF5
                                           ipv70_soF3
                                    of s2#12_soF6 { __DEFAULT ->
                                    a32_soqf s2#12_soF6
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_snIj
                                           ipv64_soEy
                                    of _ [Occ=Dead] { (# ipv66_soF8 [Occ=Once], ipv67_soF9 #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv67_soF9
                                           ipv66_soF8
                                    of s2#11_soFa { __DEFAULT ->
                                    let {
                                      sat_soFu [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soFu =
                                        let {
                                          sat_soFt [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soFt =
                                            case ipv67_soF9
                                            of _ [Occ=Dead]
                                            { (ww1_soFc [Occ=Once!], ww2_soFd [Occ=OnceL!]) ->
                                            let {
                                              sat_soFs [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soFs =
                                                case ww1_soFc
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soFf [Occ=Once] ->
                                                let {
                                                  sat_soFn [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soFn =
                                                    let {
                                                      sat_soFm [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soFm =
                                                        \ (w2_soFg [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soFd
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soFi [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soFi w2_soFg
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soFk [Occ=Once], ww9_soFl [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soFk ww9_soFl
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soFm
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soFo [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soFo =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soFn } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soFf sat_soFo
                                                of _ [Occ=Dead]
                                                { (# ww6_soFq [Occ=Once], ww7_soFr [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soFq ww7_soFr
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soFs
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soFt } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_soFu
                                           GHC.Types.True
                                           s2#11_soFa
                                    of _ [Occ=Dead] { (# ipv68_soFw [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv68_soFw
                                    of _ [Occ=Dead]
                                    { (# ipv70_soFz [Occ=Once], ipv71_soFA [Occ=Once] #) ->
                                    let {
                                      sat_soFB [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soFB =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv71_soFA } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soFB
                                           ipv70_soFz
                                    of s2#12_soFC { __DEFAULT ->
                                    a33_soqg s2#12_soFC
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                            }
                            }
                            }
                            }
                            }
                            };
                        a33_soqg [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a33_soqg =
                          \ (eta2_soDo [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_soDo
                            of _ [Occ=Dead]
                            { (# ipv54_soDq [Occ=Once], ipv55_soDr [Occ=Once] #) ->
                            let {
                              ix_soDs [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_soDs = Automata4Coms.indices_a_get_ix ipv55_soDr } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_soDs
                                   ipv54_soDq
                            of s2#8_soDt { __DEFAULT ->
                            let {
                              sat_soDA [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_soDA =
                                let {
                                  sat_soDz [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_soDz =
                                    case ix_soDs
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_soDv [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_soDv (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_soDx [Occ=Once], ww6_soDy [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_soDx ww6_soDy
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_soDz } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_soDA GHC.Types.True s2#8_soDt
                            of _ [Occ=Dead] { (# ipv56_soDC [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv56_soDC
                            of _ [Occ=Dead]
                            { (# ipv58_soDF [Occ=Once], ipv59_soDG [Occ=Once] #) ->
                            let {
                              sat_soDH [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_soDH = Automata4Coms.indices_a_inc_ix ipv59_soDG } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_soDH
                                   ipv58_soDF
                            of s2#9_soDI { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#9_soDI
                            of _ [Occ=Dead]
                            { (# ipv60_soDK [Occ=Once*], ipv61_soDL [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_soDL of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv60_soDK
                                of _ [Occ=Dead]
                                { (# ipv62_soDO [Occ=Once], ipv63_soDP [Occ=Once] #) ->
                                let {
                                  sat_soDQ [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soDQ = Automata4Coms.indices_a_init ipv63_soDP } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_soDQ
                                       ipv62_soDO
                                of s2#10_soDR { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 s2#10_soDR
                                of _ [Occ=Dead]
                                { (# ipv64_soDT [Occ=Once*], ipv65_soDU [Occ=Once!] #) ->
                                case ipv65_soDU of _ [Occ=Dead] {
                                  [] -> a12_snTL ipv64_soDT;
                                  : i2_soDW [Occ=Once] is2_soDX [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_snI4
                                           is2_soDX
                                           ipv64_soDT
                                    of s2#11_soDY { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_snIa
                                           i2_soDW
                                           s2#11_soDY
                                    of s2#12_soDZ { __DEFAULT ->
                                    a34_soqh s2#12_soDZ
                                    }
                                    }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a33_soqg ipv60_soDK
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a35_soqi [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a35_soqi =
                          \ (eta2_soFD [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_soFD
                            of _ [Occ=Dead]
                            { (# ipv54_soFF [Occ=Once], ipv55_soFG [Occ=Once] #) ->
                            let {
                              ix_soFH [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_soFH = Automata4Coms.indices_a_get_ix ipv55_soFG } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_soFH
                                   ipv54_soFF
                            of s2#8_soFI { __DEFAULT ->
                            let {
                              sat_soFP [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_soFP =
                                let {
                                  sat_soFO [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_soFO =
                                    case ix_soFH
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_soFK [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_soFK (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_soFM [Occ=Once], ww6_soFN [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_soFM ww6_soFN
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_soFO } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_soFP GHC.Types.True s2#8_soFI
                            of _ [Occ=Dead] { (# ipv56_soFR [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv56_soFR
                            of _ [Occ=Dead]
                            { (# ipv58_soFU [Occ=Once], ipv59_soFV [Occ=Once] #) ->
                            let {
                              sat_soFW [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_soFW = Automata4Coms.indices_a_inc_ix ipv59_soFV } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_soFW
                                   ipv58_soFU
                            of s2#9_soFX { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#9_soFX
                            of _ [Occ=Dead]
                            { (# ipv60_soFZ [Occ=Once*], ipv61_soG0 [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_soG0 of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv60_soFZ
                                of _ [Occ=Dead]
                                { (# ipv62_soG3 [Occ=Once], ipv63_soG4 [Occ=Once] #) ->
                                let {
                                  sat_soG5 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soG5 = Automata4Coms.indices_a_init ipv63_soG4 } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_soG5
                                       ipv62_soG3
                                of s2#10_soG6 { __DEFAULT ->
                                a34_soqh s2#10_soG6
                                }
                                };
                              GHC.Types.True -> a35_soqi ipv60_soFZ
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a39_soqm [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a39_soqm =
                          \ (eta2_soK5 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_soK5
                            of _ [Occ=Dead]
                            { (# ipv54_soK7 [Occ=Once], ipv55_soK8 [Occ=Once] #) ->
                            let {
                              ix_soK9 [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_soK9 = Automata4Coms.indices_a_get_ix ipv55_soK8 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_soK9
                                   ipv54_soK7
                            of s2#8_soKa { __DEFAULT ->
                            let {
                              sat_soKh [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_soKh =
                                let {
                                  sat_soKg [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_soKg =
                                    case ix_soK9
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_soKc [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_soKc (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_soKe [Occ=Once], ww6_soKf [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_soKe ww6_soKf
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_soKg } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_soKh GHC.Types.True s2#8_soKa
                            of _ [Occ=Dead] { (# ipv56_soKj [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv56_soKj
                            of _ [Occ=Dead]
                            { (# ipv58_soKm [Occ=Once], ipv59_soKn [Occ=Once] #) ->
                            let {
                              sat_soKo [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_soKo = Automata4Coms.indices_a_inc_ix ipv59_soKn } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_soKo
                                   ipv58_soKm
                            of s2#9_soKp { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#9_soKp
                            of _ [Occ=Dead]
                            { (# ipv60_soKr [Occ=Once*], ipv61_soKs [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_soKs of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv60_soKr
                                of _ [Occ=Dead]
                                { (# ipv62_soKv [Occ=Once], ipv63_soKw [Occ=Once] #) ->
                                let {
                                  sat_soKx [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soKx = Automata4Coms.indices_a_init ipv63_soKw } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_soKx
                                       ipv62_soKv
                                of s2#10_soKy { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp s2#10_soKy
                                of _ [Occ=Dead]
                                { (# ipv64_soKA [Occ=Once], ipv65_soKB [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_snIm
                                       ipv65_soKB
                                       ipv64_soKA
                                of s2#11_soKC { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_snIa s2#11_soKC
                                of _ [Occ=Dead]
                                { (# ipv66_soKE [Occ=Once], ipv67_soKF [Occ=Once] #) ->
                                let {
                                  sat_soKG [Occ=Once] :: GHC.Types.Int
                                  [LclId, Str=DmdType]
                                  sat_soKG = inc_rgem ipv67_soKF } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv15_snIp
                                       sat_soKG
                                       ipv66_soKE
                                of s2#12_soKH { __DEFAULT ->
                                a29_soqc s2#12_soKH
                                }
                                }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a39_soqm ipv60_soKr
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a40_soqn [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a40_soqn =
                          \ (eta2_soKI [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_soKI
                            of _ [Occ=Dead]
                            { (# ipv54_soKK [Occ=Once], ipv55_soKL [Occ=Once] #) ->
                            let {
                              ix_soKM [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_soKM = Automata4Coms.indices_a_get_ix ipv55_soKL } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_soKM
                                   ipv54_soKK
                            of s2#8_soKN { __DEFAULT ->
                            let {
                              sat_soKU [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_soKU =
                                let {
                                  sat_soKT [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_soKT =
                                    case ix_soKM
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_soKP [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_soKP (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_soKR [Occ=Once], ww6_soKS [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_soKR ww6_soKS
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_soKT } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_soKU GHC.Types.True s2#8_soKN
                            of _ [Occ=Dead] { (# ipv56_soKW [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv56_soKW
                            of _ [Occ=Dead]
                            { (# ipv58_soKZ [Occ=Once], ipv59_soL0 [Occ=Once] #) ->
                            let {
                              sat_soL1 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_soL1 = Automata4Coms.indices_a_inc_ix ipv59_soL0 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_soL1
                                   ipv58_soKZ
                            of s2#9_soL2 { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#9_soL2
                            of _ [Occ=Dead]
                            { (# ipv60_soL4 [Occ=Once*], ipv61_soL5 [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_soL5 of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv60_soL4
                                of _ [Occ=Dead]
                                { (# ipv62_soL8 [Occ=Once], ipv63_soL9 [Occ=Once] #) ->
                                let {
                                  sat_soLa [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soLa = Automata4Coms.indices_a_init ipv63_soL9 } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_soLa
                                       ipv62_soL8
                                of s2#10_soLb { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_snId s2#10_soLb
                                of _ [Occ=Dead] { (# ipv64_soLd [Occ=Once], ipv65_soLe #) ->
                                let {
                                  sat_soLf [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soLf = (ipv65_soLe, ipv65_soLe) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       sat_soLf
                                       ipv64_soLd
                                of s2#11_soLg { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       s2#11_soLg
                                of _ [Occ=Dead]
                                { (# ipv66_soLi [Occ=Once], ipv67_soLj [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       ipv66_soLi
                                of _ [Occ=Dead]
                                { (# ipv68_soLl [Occ=Once*], ipv69_soLm [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv67_soLj ipv69_soLm
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_snIg
                                           ipv68_soLl
                                    of _ [Occ=Dead] { (# ipv70_soLp [Occ=Once], ipv71_soLq #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv71_soLq
                                           ipv70_soLp
                                    of s2#12_soLr { __DEFAULT ->
                                    let {
                                      sat_soLL [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soLL =
                                        let {
                                          sat_soLK [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soLK =
                                            case ipv71_soLq
                                            of _ [Occ=Dead]
                                            { (ww1_soLt [Occ=Once!], ww2_soLu [Occ=OnceL!]) ->
                                            let {
                                              sat_soLJ [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soLJ =
                                                case ww1_soLt
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soLw [Occ=Once] ->
                                                let {
                                                  sat_soLE [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soLE =
                                                    let {
                                                      sat_soLD [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soLD =
                                                        \ (w2_soLx [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soLu
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soLz [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soLz w2_soLx
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soLB [Occ=Once], ww9_soLC [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soLB ww9_soLC
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soLD
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soLF [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soLF =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soLE } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soLw sat_soLF
                                                of _ [Occ=Dead]
                                                { (# ww6_soLH [Occ=Once], ww7_soLI [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soLH ww7_soLI
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soLJ
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soLK } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_soLL
                                           GHC.Types.True
                                           s2#12_soLr
                                    of _ [Occ=Dead] { (# ipv72_soLN [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv72_soLN
                                    of _ [Occ=Dead]
                                    { (# ipv74_soLQ [Occ=Once], ipv75_soLR [Occ=Once] #) ->
                                    let {
                                      sat_soLS [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soLS =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv75_soLR } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soLS
                                           ipv74_soLQ
                                    of s2#13_soLT { __DEFAULT ->
                                    a39_soqm s2#13_soLT
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_snIj
                                           ipv68_soLl
                                    of _ [Occ=Dead] { (# ipv70_soLV [Occ=Once], ipv71_soLW #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv71_soLW
                                           ipv70_soLV
                                    of s2#12_soLX { __DEFAULT ->
                                    let {
                                      sat_soMh [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soMh =
                                        let {
                                          sat_soMg [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soMg =
                                            case ipv71_soLW
                                            of _ [Occ=Dead]
                                            { (ww1_soLZ [Occ=Once!], ww2_soM0 [Occ=OnceL!]) ->
                                            let {
                                              sat_soMf [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soMf =
                                                case ww1_soLZ
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soM2 [Occ=Once] ->
                                                let {
                                                  sat_soMa [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soMa =
                                                    let {
                                                      sat_soM9 [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soM9 =
                                                        \ (w2_soM3 [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soM0
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soM5 [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soM5 w2_soM3
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soM7 [Occ=Once], ww9_soM8 [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soM7 ww9_soM8
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soM9
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soMb [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soMb =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soMa } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soM2 sat_soMb
                                                of _ [Occ=Dead]
                                                { (# ww6_soMd [Occ=Once], ww7_soMe [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soMd ww7_soMe
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soMf
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soMg } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_soMh
                                           GHC.Types.True
                                           s2#12_soLX
                                    of _ [Occ=Dead] { (# ipv72_soMj [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv72_soMj
                                    of _ [Occ=Dead]
                                    { (# ipv74_soMm [Occ=Once], ipv75_soMn [Occ=Once] #) ->
                                    let {
                                      sat_soMo [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soMo =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv75_soMn } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soMo
                                           ipv74_soMm
                                    of s2#13_soMp { __DEFAULT ->
                                    a25_soq8 s2#13_soMp
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a40_soqn ipv60_soL4
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a27_soqa [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a27_soqa =
                          \ (eta2_soty [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_soty
                            of _ [Occ=Dead]
                            { (# ipv54_sotA [Occ=Once], ipv55_sotB [Occ=Once] #) ->
                            let {
                              ix_sotC [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_sotC = Automata4Coms.indices_a_get_ix ipv55_sotB } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_sotC
                                   ipv54_sotA
                            of s2#8_sotD { __DEFAULT ->
                            let {
                              sat_sotK [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sotK =
                                let {
                                  sat_sotJ [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sotJ =
                                    case ix_sotC
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_sotF [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_sotF (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_sotH [Occ=Once], ww6_sotI [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_sotH ww6_sotI
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_sotJ } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sotK GHC.Types.True s2#8_sotD
                            of _ [Occ=Dead] { (# ipv56_sotM [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv56_sotM
                            of _ [Occ=Dead]
                            { (# ipv58_sotP [Occ=Once], ipv59_sotQ [Occ=Once] #) ->
                            let {
                              sat_sotR [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_sotR = Automata4Coms.indices_a_inc_ix ipv59_sotQ } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_sotR
                                   ipv58_sotP
                            of s2#9_sotS { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#9_sotS
                            of _ [Occ=Dead]
                            { (# ipv60_sotU [Occ=Once*], ipv61_sotV [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_sotV of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv60_sotU
                                of _ [Occ=Dead]
                                { (# ipv62_sotY [Occ=Once], ipv63_sotZ [Occ=Once] #) ->
                                let {
                                  sat_sou0 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sou0 = Automata4Coms.indices_a_init ipv63_sotZ } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_sou0
                                       ipv62_sotY
                                of s2#10_sou1 { __DEFAULT ->
                                a28_soqb s2#10_sou1
                                }
                                };
                              GHC.Types.True -> a27_soqa ipv60_sotU
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a28_soqb [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a28_soqb =
                          \ (eta2_sou2 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_snI7 eta2_sou2
                            of _ [Occ=Dead]
                            { (# ipv54_sou4 [Occ=Once*], ipv55_sou5 [Occ=Once!] #) ->
                            case ipv55_sou5 of _ [Occ=Dead] {
                              [] ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       ipv54_sou4
                                of _ [Occ=Dead] { (# ipv56_sou8 [Occ=Once], ipv57_sou9 #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv19_snIv
                                       ipv57_sou9
                                       ipv56_sou8
                                of s2#8_soua { __DEFAULT ->
                                let {
                                  sat_souu [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                  [LclId, Str=DmdType]
                                  sat_souu =
                                    let {
                                      sat_sout [Occ=Once] :: [GHC.Types.Char]
                                      [LclId, Str=DmdType]
                                      sat_sout =
                                        case ipv57_sou9
                                        of _ [Occ=Dead]
                                        { (ww1_souc [Occ=Once!], ww2_soud [Occ=OnceL!]) ->
                                        let {
                                          sat_sous [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sous =
                                            case ww1_souc
                                            of _ [Occ=Dead] { GHC.Types.I# ww4_souf [Occ=Once] ->
                                            let {
                                              sat_soun [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soun =
                                                let {
                                                  sat_soum [Occ=Once]
                                                    :: GHC.Base.String -> GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soum =
                                                    \ (w2_soug [Occ=Once] :: GHC.Base.String) ->
                                                      case ww2_soud
                                                      of _ [Occ=Dead]
                                                      { GHC.Types.I# ww6_soui [Occ=Once] ->
                                                      case GHC.Show.$wshowSignedInt
                                                             0 ww6_soui w2_soug
                                                      of _ [Occ=Dead]
                                                      { (# ww8_souk [Occ=Once], ww9_soul [Occ=Once] #) ->
                                                      GHC.Types.: @ GHC.Types.Char ww8_souk ww9_soul
                                                      }
                                                      } } in
                                                GHC.List.foldr1_$sfoldr1
                                                  @ (GHC.Base.String -> GHC.Base.String)
                                                  GHC.Show.$fShow(,)1
                                                  sat_soum
                                                  (GHC.Types.[] @ GHC.Show.ShowS)
                                                  lvl4_rger } in
                                            let {
                                              sat_souo [Occ=Once] :: GHC.Base.String
                                              [LclId, Str=DmdType]
                                              sat_souo =
                                                GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.showList__1
                                                  sat_soun } in
                                            case GHC.Show.$wshowSignedInt 0 ww4_souf sat_souo
                                            of _ [Occ=Dead]
                                            { (# ww6_souq [Occ=Once], ww7_sour [Occ=Once] #) ->
                                            GHC.Types.: @ GHC.Types.Char ww6_souq ww7_sour
                                            }
                                            } } in
                                        GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sous
                                        } } in
                                    GHC.CString.unpackAppendCString# "merg: "# sat_sout } in
                                case GHC.IO.Handle.Text.hPutStr2
                                       GHC.IO.Handle.FD.stdout sat_souu GHC.Types.True s2#8_soua
                                of _ [Occ=Dead] { (# ipv58_souw [Occ=Once], _ [Occ=Dead] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv19_snIv
                                       ipv58_souw
                                of _ [Occ=Dead]
                                { (# ipv60_souz [Occ=Once], ipv61_souA [Occ=Once] #) ->
                                let {
                                  sat_souB [Occ=Once] :: GHC.Types.Int
                                  [LclId, Str=DmdType]
                                  sat_souB =
                                    Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv61_souA } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv21_snIy
                                       sat_souB
                                       ipv60_souz
                                of s2#9_souC { __DEFAULT ->
                                letrec {
                                  a42_souD [Occ=LoopBreaker]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                  [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                  a42_souD =
                                    \ (eta3_souE [Occ=Once]
                                         :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_snIN
                                             eta3_souE
                                      of _ [Occ=Dead]
                                      { (# ipv62_souG [Occ=Once], ipv63_souH [Occ=Once] #) ->
                                      let {
                                        ix_souI [Dmd=<L,U(U)>] :: GHC.Types.Int
                                        [LclId, Str=DmdType]
                                        ix_souI = Automata4Coms.indices_a_get_ix ipv63_souH } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ GHC.Types.Int
                                             ipv17_snIs
                                             ix_souI
                                             ipv62_souG
                                      of s2#10_souJ { __DEFAULT ->
                                      let {
                                        sat_souQ [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                        [LclId, Str=DmdType]
                                        sat_souQ =
                                          let {
                                            sat_souP [Occ=Once] :: [GHC.Types.Char]
                                            [LclId, Str=DmdType]
                                            sat_souP =
                                              case ix_souI
                                              of _ [Occ=Dead] { GHC.Types.I# ww3_souL [Occ=Once] ->
                                              case GHC.Show.$wshowSignedInt
                                                     0 ww3_souL (GHC.Types.[] @ GHC.Types.Char)
                                              of _ [Occ=Dead]
                                              { (# ww5_souN [Occ=Once], ww6_souO [Occ=Once] #) ->
                                              GHC.Types.: @ GHC.Types.Char ww5_souN ww6_souO
                                              }
                                              } } in
                                          GHC.CString.unpackAppendCString# "filtd:"# sat_souP } in
                                      case GHC.IO.Handle.Text.hPutStr2
                                             GHC.IO.Handle.FD.stdout
                                             sat_souQ
                                             GHC.Types.True
                                             s2#10_souJ
                                      of _ [Occ=Dead] { (# ipv64_souS [Occ=Once], _ [Occ=Dead] #) ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_snIN
                                             ipv64_souS
                                      of _ [Occ=Dead]
                                      { (# ipv66_souV [Occ=Once], ipv67_souW [Occ=Once] #) ->
                                      let {
                                        sat_souX [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                        [LclId, Str=DmdType]
                                        sat_souX = Automata4Coms.indices_a_inc_ix ipv67_souW } in
                                      case GHC.Prim.writeMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_snIN
                                             sat_souX
                                             ipv66_souV
                                      of s2#11_souY { __DEFAULT ->
                                      case GHC.Prim.readMutVar#
                                             @ GHC.Prim.RealWorld
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             ipv31_snIN
                                             s2#11_souY
                                      of _ [Occ=Dead]
                                      { (# ipv68_sov0 [Occ=Once*], ipv69_sov1 [Occ=Once] #) ->
                                      case Automata4Coms.indices_a_check ipv69_sov1
                                      of _ [Occ=Dead] {
                                        GHC.Types.False ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv21_snIy
                                                 ipv68_sov0
                                          of _ [Occ=Dead]
                                          { (# ipv70_sov4 [Occ=Once], ipv71_sov5 [Occ=Once] #) ->
                                          let {
                                            sat_sov6 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sov6 = Automata4Coms.indices_a_init ipv71_sov5 } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 sat_sov6
                                                 ipv70_sov4
                                          of s2#12_sov7 { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv13_snIm
                                                 s2#12_sov7
                                          of _ [Occ=Dead]
                                          { (# ipv72_sov9 [Occ=Once], ipv73_sova #) ->
                                          let {
                                            sat_sovb [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_sovb = (ipv73_sova, ipv73_sova) } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv11_snIj
                                                 sat_sovb
                                                 ipv72_sov9
                                          of s2#13_sovc { __DEFAULT ->
                                          a19_sooR s2#13_sovc
                                          }
                                          }
                                          }
                                          };
                                        GHC.Types.True -> a42_souD ipv68_sov0
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }; } in
                                a42_souD s2#9_souC
                                }
                                }
                                }
                                }
                                };
                              : i2_sovd [Occ=Once] is2_sove [Occ=Once] ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ [GHC.Types.Int]
                                       ipv3_snI7
                                       is2_sove
                                       ipv54_sou4
                                of s2#8_sovf { __DEFAULT ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv7_snId
                                       i2_sovd
                                       s2#8_sovf
                                of s2#9_sovg { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_snId s2#9_sovg
                                of _ [Occ=Dead] { (# ipv56_sovi [Occ=Once], ipv57_sovj #) ->
                                let {
                                  sat_sovk [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sovk = (ipv57_sovj, ipv57_sovj) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       sat_sovk
                                       ipv56_sovi
                                of s2#10_sovl { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       s2#10_sovl
                                of _ [Occ=Dead]
                                { (# ipv58_sovn [Occ=Once], ipv59_sovo [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       ipv58_sovn
                                of _ [Occ=Dead]
                                { (# ipv60_sovq [Occ=Once*], ipv61_sovr [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv59_sovo ipv61_sovr
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_snIg
                                           ipv60_sovq
                                    of _ [Occ=Dead] { (# ipv62_sovu [Occ=Once], ipv63_sovv #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv63_sovv
                                           ipv62_sovu
                                    of s2#11_sovw { __DEFAULT ->
                                    let {
                                      sat_sovQ [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sovQ =
                                        let {
                                          sat_sovP [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sovP =
                                            case ipv63_sovv
                                            of _ [Occ=Dead]
                                            { (ww1_sovy [Occ=Once!], ww2_sovz [Occ=OnceL!]) ->
                                            let {
                                              sat_sovO [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sovO =
                                                case ww1_sovy
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sovB [Occ=Once] ->
                                                let {
                                                  sat_sovJ [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sovJ =
                                                    let {
                                                      sat_sovI [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sovI =
                                                        \ (w2_sovC [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sovz
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sovE [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sovE w2_sovC
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sovG [Occ=Once], ww9_sovH [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sovG ww9_sovH
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sovI
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sovK [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sovK =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sovJ } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sovB sat_sovK
                                                of _ [Occ=Dead]
                                                { (# ww6_sovM [Occ=Once], ww7_sovN [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sovM ww7_sovN
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sovO
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sovP } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_sovQ
                                           GHC.Types.True
                                           s2#11_sovw
                                    of _ [Occ=Dead] { (# ipv64_sovS [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv64_sovS
                                    of _ [Occ=Dead]
                                    { (# ipv66_sovV [Occ=Once], ipv67_sovW [Occ=Once] #) ->
                                    let {
                                      sat_sovX [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sovX =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_sovW } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_sovX
                                           ipv66_sovV
                                    of s2#12_sovY { __DEFAULT ->
                                    a27_soqa s2#12_sovY
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_snIj
                                           ipv60_sovq
                                    of _ [Occ=Dead] { (# ipv62_sow0 [Occ=Once], ipv63_sow1 #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv63_sow1
                                           ipv62_sow0
                                    of s2#11_sow2 { __DEFAULT ->
                                    let {
                                      sat_sowm [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_sowm =
                                        let {
                                          sat_sowl [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_sowl =
                                            case ipv63_sow1
                                            of _ [Occ=Dead]
                                            { (ww1_sow4 [Occ=Once!], ww2_sow5 [Occ=OnceL!]) ->
                                            let {
                                              sat_sowk [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_sowk =
                                                case ww1_sow4
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_sow7 [Occ=Once] ->
                                                let {
                                                  sat_sowf [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_sowf =
                                                    let {
                                                      sat_sowe [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_sowe =
                                                        \ (w2_sow8 [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_sow5
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_sowa [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_sowa w2_sow8
                                                          of _ [Occ=Dead]
                                                          { (# ww8_sowc [Occ=Once], ww9_sowd [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_sowc ww9_sowd
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_sowe
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_sowg [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_sowg =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_sowf } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_sow7 sat_sowg
                                                of _ [Occ=Dead]
                                                { (# ww6_sowi [Occ=Once], ww7_sowj [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_sowi ww7_sowj
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_sowk
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_sowl } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_sowm
                                           GHC.Types.True
                                           s2#11_sow2
                                    of _ [Occ=Dead] { (# ipv64_sowo [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv64_sowo
                                    of _ [Occ=Dead]
                                    { (# ipv66_sowr [Occ=Once], ipv67_sows [Occ=Once] #) ->
                                    let {
                                      sat_sowt [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sowt =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_sows } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_sowt
                                           ipv66_sowr
                                    of s2#12_sowu { __DEFAULT ->
                                    a26_soq9 s2#12_sowu
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                            }
                            };
                        a29_soqc [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a29_soqc =
                          \ (eta2_sowv [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp eta2_sowv
                            of _ [Occ=Dead]
                            { (# ipv54_sowx [Occ=Once*], ipv55_sowy [Occ=Once!] #) ->
                            case ipv55_sowy
                            of _ [Occ=Dead] { GHC.Types.I# x1_sowA [Occ=Once] ->
                            case GHC.Prim.># x1_sowA 10 of sat_sowB { __DEFAULT ->
                            case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_sowB
                            of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 ipv54_sowx
                                of _ [Occ=Dead]
                                { (# ipv56_sowE [Occ=Once*], ipv57_sowF [Occ=Once!] #) ->
                                case ipv57_sowF of _ [Occ=Dead] {
                                  [] -> a16_so6o ipv56_sowE;
                                  : i2_sowH [Occ=Once] is2_sowI [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_snI4
                                           is2_sowI
                                           ipv56_sowE
                                    of s2#8_sowJ { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_snIa
                                           i2_sowH
                                           s2#8_sowJ
                                    of s2#9_sowK { __DEFAULT ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_snIa s2#9_sowK
                                    of _ [Occ=Dead]
                                    { (# ipv58_sowM [Occ=Once], ipv59_sowN [Occ=Once] #) ->
                                    let {
                                      sat_sowO [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_sowO = inc_rgem ipv59_sowN } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv15_snIp
                                           sat_sowO
                                           ipv58_sowM
                                    of s2#10_sowP { __DEFAULT ->
                                    a29_soqc s2#10_sowP
                                    }
                                    }
                                    }
                                    }
                                }
                                };
                              GHC.Types.True ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 ipv54_sowx
                                of _ [Occ=Dead]
                                { (# ipv56_sowR [Occ=Once*], ipv57_sowS [Occ=Once!] #) ->
                                case ipv57_sowS of _ [Occ=Dead] {
                                  [] ->
                                    letrec {
                                      a43_sowV
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a43_sowV =
                                        \ (eta3_soxq [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ [GHC.Types.Int]
                                                 ipv3_snI7
                                                 eta3_soxq
                                          of _ [Occ=Dead]
                                          { (# ipv58_soxs [Occ=Once*], ipv59_soxt [Occ=Once!] #) ->
                                          case ipv59_soxt of _ [Occ=Dead] {
                                            [] ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_snIj
                                                     ipv58_soxs
                                              of _ [Occ=Dead]
                                              { (# ipv60_soxw [Occ=Once], ipv61_soxx #) ->
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv19_snIv
                                                     ipv61_soxx
                                                     ipv60_soxw
                                              of s2#8_soxy { __DEFAULT ->
                                              let {
                                                sat_soxS [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                                [LclId, Str=DmdType]
                                                sat_soxS =
                                                  let {
                                                    sat_soxR [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId, Str=DmdType]
                                                    sat_soxR =
                                                      case ipv61_soxx
                                                      of _ [Occ=Dead]
                                                      { (ww1_soxA [Occ=Once!], ww2_soxB [Occ=OnceL!]) ->
                                                      let {
                                                        sat_soxQ [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_soxQ =
                                                          case ww1_soxA
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww4_soxD [Occ=Once] ->
                                                          let {
                                                            sat_soxL [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_soxL =
                                                              let {
                                                                sat_soxK [Occ=Once]
                                                                  :: GHC.Base.String
                                                                     -> GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_soxK =
                                                                  \ (w2_soxE [Occ=Once]
                                                                       :: GHC.Base.String) ->
                                                                    case ww2_soxB
                                                                    of _ [Occ=Dead]
                                                                    { GHC.Types.I# ww6_soxG [Occ=Once] ->
                                                                    case GHC.Show.$wshowSignedInt
                                                                           0 ww6_soxG w2_soxE
                                                                    of _ [Occ=Dead]
                                                                    { (# ww8_soxI [Occ=Once], ww9_soxJ [Occ=Once] #) ->
                                                                    GHC.Types.:
                                                                      @ GHC.Types.Char
                                                                      ww8_soxI
                                                                      ww9_soxJ
                                                                    }
                                                                    } } in
                                                              GHC.List.foldr1_$sfoldr1
                                                                @ (GHC.Base.String
                                                                   -> GHC.Base.String)
                                                                GHC.Show.$fShow(,)1
                                                                sat_soxK
                                                                (GHC.Types.[] @ GHC.Show.ShowS)
                                                                lvl4_rger } in
                                                          let {
                                                            sat_soxM [Occ=Once] :: GHC.Base.String
                                                            [LclId, Str=DmdType]
                                                            sat_soxM =
                                                              GHC.Types.:
                                                                @ GHC.Types.Char
                                                                GHC.Show.showList__1
                                                                sat_soxL } in
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww4_soxD sat_soxM
                                                          of _ [Occ=Dead]
                                                          { (# ww6_soxO [Occ=Once], ww7_soxP [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww6_soxO ww7_soxP
                                                          }
                                                          } } in
                                                      GHC.Types.:
                                                        @ GHC.Types.Char GHC.Show.shows13 sat_soxQ
                                                      } } in
                                                  GHC.CString.unpackAppendCString#
                                                    "merg: "# sat_soxR } in
                                              case GHC.IO.Handle.Text.hPutStr2
                                                     GHC.IO.Handle.FD.stdout
                                                     sat_soxS
                                                     GHC.Types.True
                                                     s2#8_soxy
                                              of _ [Occ=Dead]
                                              { (# ipv62_soxU [Occ=Once], _ [Occ=Dead] #) ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv19_snIv
                                                     ipv62_soxU
                                              of _ [Occ=Dead]
                                              { (# ipv64_soxX [Occ=Once], ipv65_soxY [Occ=Once] #) ->
                                              let {
                                                sat_soxZ [Occ=Once] :: GHC.Types.Int
                                                [LclId, Str=DmdType]
                                                sat_soxZ =
                                                  Data.Tuple.snd
                                                    @ GHC.Types.Int @ GHC.Types.Int ipv65_soxY } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_snIy
                                                     sat_soxZ
                                                     ipv64_soxX
                                              of s2#9_soy0 { __DEFAULT ->
                                              letrec {
                                                a44_soy1 [Occ=LoopBreaker]
                                                  :: GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                                [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                                a44_soy1 =
                                                  \ (eta4_soy2 [Occ=Once]
                                                       :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                    case GHC.Prim.readMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ (GHC.Types.Int, GHC.Types.Int)
                                                           ipv31_snIN
                                                           eta4_soy2
                                                    of _ [Occ=Dead]
                                                    { (# ipv66_soy4 [Occ=Once], ipv67_soy5 [Occ=Once] #) ->
                                                    let {
                                                      ix_soy6 [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                      [LclId, Str=DmdType]
                                                      ix_soy6 =
                                                        Automata4Coms.indices_a_get_ix
                                                          ipv67_soy5 } in
                                                    case GHC.Prim.writeMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ GHC.Types.Int
                                                           ipv17_snIs
                                                           ix_soy6
                                                           ipv66_soy4
                                                    of s2#10_soy7 { __DEFAULT ->
                                                    let {
                                                      sat_soye [Occ=Once, Dmd=<L,1*U>]
                                                        :: GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soye =
                                                        let {
                                                          sat_soyd [Occ=Once] :: [GHC.Types.Char]
                                                          [LclId, Str=DmdType]
                                                          sat_soyd =
                                                            case ix_soy6
                                                            of _ [Occ=Dead]
                                                            { GHC.Types.I# ww3_soy9 [Occ=Once] ->
                                                            case GHC.Show.$wshowSignedInt
                                                                   0
                                                                   ww3_soy9
                                                                   (GHC.Types.[] @ GHC.Types.Char)
                                                            of _ [Occ=Dead]
                                                            { (# ww5_soyb [Occ=Once], ww6_soyc [Occ=Once] #) ->
                                                            GHC.Types.:
                                                              @ GHC.Types.Char ww5_soyb ww6_soyc
                                                            }
                                                            } } in
                                                        GHC.CString.unpackAppendCString#
                                                          "filtd:"# sat_soyd } in
                                                    case GHC.IO.Handle.Text.hPutStr2
                                                           GHC.IO.Handle.FD.stdout
                                                           sat_soye
                                                           GHC.Types.True
                                                           s2#10_soy7
                                                    of _ [Occ=Dead]
                                                    { (# ipv68_soyg [Occ=Once], _ [Occ=Dead] #) ->
                                                    case GHC.Prim.readMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ (GHC.Types.Int, GHC.Types.Int)
                                                           ipv31_snIN
                                                           ipv68_soyg
                                                    of _ [Occ=Dead]
                                                    { (# ipv70_soyj [Occ=Once], ipv71_soyk [Occ=Once] #) ->
                                                    let {
                                                      sat_soyl [Occ=Once]
                                                        :: (GHC.Types.Int, GHC.Types.Int)
                                                      [LclId, Str=DmdType]
                                                      sat_soyl =
                                                        Automata4Coms.indices_a_inc_ix
                                                          ipv71_soyk } in
                                                    case GHC.Prim.writeMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ (GHC.Types.Int, GHC.Types.Int)
                                                           ipv31_snIN
                                                           sat_soyl
                                                           ipv70_soyj
                                                    of s2#11_soym { __DEFAULT ->
                                                    case GHC.Prim.readMutVar#
                                                           @ GHC.Prim.RealWorld
                                                           @ (GHC.Types.Int, GHC.Types.Int)
                                                           ipv31_snIN
                                                           s2#11_soym
                                                    of _ [Occ=Dead]
                                                    { (# ipv72_soyo [Occ=Once*], ipv73_soyp [Occ=Once] #) ->
                                                    case Automata4Coms.indices_a_check ipv73_soyp
                                                    of _ [Occ=Dead] {
                                                      GHC.Types.False ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv21_snIy
                                                               ipv72_soyo
                                                        of _ [Occ=Dead]
                                                        { (# ipv74_soys [Occ=Once], ipv75_soyt [Occ=Once] #) ->
                                                        let {
                                                          sat_soyu [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_soyu =
                                                            Automata4Coms.indices_a_init
                                                              ipv75_soyt } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               sat_soyu
                                                               ipv74_soys
                                                        of s2#12_soyv { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv13_snIm
                                                               s2#12_soyv
                                                        of _ [Occ=Dead]
                                                        { (# ipv76_soyx [Occ=Once], ipv77_soyy #) ->
                                                        let {
                                                          sat_soyz [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_soyz = (ipv77_soyy, ipv77_soyy) } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv11_snIj
                                                               sat_soyz
                                                               ipv76_soyx
                                                        of s2#13_soyA { __DEFAULT ->
                                                        a10_snRw s2#13_soyA
                                                        }
                                                        }
                                                        }
                                                        };
                                                      GHC.Types.True -> a44_soy1 ipv72_soyo
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }; } in
                                              a44_soy1 s2#9_soy0
                                              }
                                              }
                                              }
                                              }
                                              };
                                            : i2_soyB [Occ=Once] is2_soyC [Occ=Once] ->
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ [GHC.Types.Int]
                                                     ipv3_snI7
                                                     is2_soyC
                                                     ipv58_soxs
                                              of s2#8_soyD { __DEFAULT ->
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv7_snId
                                                     i2_soyB
                                                     s2#8_soyD
                                              of s2#9_soyE { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv7_snId
                                                     s2#9_soyE
                                              of _ [Occ=Dead]
                                              { (# ipv60_soyG [Occ=Once], ipv61_soyH #) ->
                                              let {
                                                sat_soyI [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_soyI = (ipv61_soyH, ipv61_soyH) } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_snIg
                                                     sat_soyI
                                                     ipv60_soyG
                                              of s2#10_soyJ { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_snIj
                                                     s2#10_soyJ
                                              of _ [Occ=Dead]
                                              { (# ipv62_soyL [Occ=Once], ipv63_soyM [Occ=Once] #) ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_snIg
                                                     ipv62_soyL
                                              of _ [Occ=Dead]
                                              { (# ipv64_soyO [Occ=Once*], ipv65_soyP [Occ=Once] #) ->
                                              case Automata4Coms.merge_a_le_pair
                                                     @ GHC.Types.Int ipv63_soyM ipv65_soyP
                                              of _ [Occ=Dead] {
                                                GHC.Types.False ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv9_snIg
                                                         ipv64_soyO
                                                  of _ [Occ=Dead]
                                                  { (# ipv66_soyS [Occ=Once], ipv67_soyT #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv67_soyT
                                                         ipv66_soyS
                                                  of s2#11_soyU { __DEFAULT ->
                                                  let {
                                                    sat_soze [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_soze =
                                                      let {
                                                        sat_sozd [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sozd =
                                                          case ipv67_soyT
                                                          of _ [Occ=Dead]
                                                          { (ww1_soyW [Occ=Once!], ww2_soyX [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sozc [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sozc =
                                                              case ww1_soyW
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_soyZ [Occ=Once] ->
                                                              let {
                                                                sat_soz7 [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_soz7 =
                                                                  let {
                                                                    sat_soz6 [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_soz6 =
                                                                      \ (w2_soz0 [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_soyX
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_soz2 [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_soz2 w2_soz0
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_soz4 [Occ=Once], ww9_soz5 [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_soz4
                                                                          ww9_soz5
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_soz6
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_soz8 [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_soz8 =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_soz7 } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_soyZ sat_soz8
                                                              of _ [Occ=Dead]
                                                              { (# ww6_soza [Occ=Once], ww7_sozb [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_soza ww7_sozb
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sozc
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sozd } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_soze
                                                         GHC.Types.True
                                                         s2#11_soyU
                                                  of _ [Occ=Dead]
                                                  { (# ipv68_sozg [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv68_sozg
                                                  of _ [Occ=Dead]
                                                  { (# ipv70_sozj [Occ=Once], ipv71_sozk [Occ=Once] #) ->
                                                  let {
                                                    sat_sozl [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sozl =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv71_sozk } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_snIy
                                                         sat_sozl
                                                         ipv70_sozj
                                                  of s2#12_sozm { __DEFAULT ->
                                                  a42_sowU s2#12_sozm
                                                  }
                                                  }
                                                  }
                                                  }
                                                  };
                                                GHC.Types.True ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv11_snIj
                                                         ipv64_soyO
                                                  of _ [Occ=Dead]
                                                  { (# ipv66_sozo [Occ=Once], ipv67_sozp #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv67_sozp
                                                         ipv66_sozo
                                                  of s2#11_sozq { __DEFAULT ->
                                                  let {
                                                    sat_sozK [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_sozK =
                                                      let {
                                                        sat_sozJ [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_sozJ =
                                                          case ipv67_sozp
                                                          of _ [Occ=Dead]
                                                          { (ww1_sozs [Occ=Once!], ww2_sozt [Occ=OnceL!]) ->
                                                          let {
                                                            sat_sozI [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_sozI =
                                                              case ww1_sozs
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_sozv [Occ=Once] ->
                                                              let {
                                                                sat_sozD [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_sozD =
                                                                  let {
                                                                    sat_sozC [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_sozC =
                                                                      \ (w2_sozw [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_sozt
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_sozy [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_sozy w2_sozw
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_sozA [Occ=Once], ww9_sozB [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_sozA
                                                                          ww9_sozB
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_sozC
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_sozE [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_sozE =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_sozD } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_sozv sat_sozE
                                                              of _ [Occ=Dead]
                                                              { (# ww6_sozG [Occ=Once], ww7_sozH [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_sozG ww7_sozH
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_sozI
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_sozJ } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_sozK
                                                         GHC.Types.True
                                                         s2#11_sozq
                                                  of _ [Occ=Dead]
                                                  { (# ipv68_sozM [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv68_sozM
                                                  of _ [Occ=Dead]
                                                  { (# ipv70_sozP [Occ=Once], ipv71_sozQ [Occ=Once] #) ->
                                                  let {
                                                    sat_sozR [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_sozR =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv71_sozQ } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_snIy
                                                         sat_sozR
                                                         ipv70_sozP
                                                  of s2#12_sozS { __DEFAULT ->
                                                  letrec {
                                                    a44_sozT [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a44_sozT =
                                                      \ (eta4_sozU [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               eta4_sozU
                                                        of _ [Occ=Dead]
                                                        { (# ipv72_sozW [Occ=Once], ipv73_sozX [Occ=Once] #) ->
                                                        let {
                                                          ix_sozY [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix_sozY =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv73_sozX } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_snIs
                                                               ix_sozY
                                                               ipv72_sozW
                                                        of s2#13_sozZ { __DEFAULT ->
                                                        let {
                                                          sat_soA6 [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_soA6 =
                                                            let {
                                                              sat_soA5 [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_soA5 =
                                                                case ix_sozY
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_soA1 [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_soA1
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_soA3 [Occ=Once], ww6_soA4 [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_soA3 ww6_soA4
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_soA5 } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_soA6
                                                               GHC.Types.True
                                                               s2#13_sozZ
                                                        of _ [Occ=Dead]
                                                        { (# ipv74_soA8 [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               ipv74_soA8
                                                        of _ [Occ=Dead]
                                                        { (# ipv76_soAb [Occ=Once], ipv77_soAc [Occ=Once] #) ->
                                                        let {
                                                          sat_soAd [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_soAd =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv77_soAc } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               sat_soAd
                                                               ipv76_soAb
                                                        of s2#14_soAe { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               s2#14_soAe
                                                        of _ [Occ=Dead]
                                                        { (# ipv78_soAg [Occ=Once*], ipv79_soAh [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv79_soAh
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_snIy
                                                                   ipv78_soAg
                                                            of _ [Occ=Dead]
                                                            { (# ipv80_soAk [Occ=Once], ipv81_soAl [Occ=Once] #) ->
                                                            let {
                                                              sat_soAm [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_soAm =
                                                                Automata4Coms.indices_a_init
                                                                  ipv81_soAl } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_snIN
                                                                   sat_soAm
                                                                   ipv80_soAk
                                                            of s2#15_soAn { __DEFAULT ->
                                                            a17_so9U s2#15_soAn
                                                            }
                                                            };
                                                          GHC.Types.True -> a44_sozT ipv78_soAg
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a44_sozT s2#12_sozS
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                          }
                                          };
                                      a42_sowU [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a42_sowU =
                                        \ (eta3_sowW [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 eta3_sowW
                                          of _ [Occ=Dead]
                                          { (# ipv58_sowY [Occ=Once], ipv59_sowZ [Occ=Once] #) ->
                                          let {
                                            ix_sox0 [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_sox0 = Automata4Coms.indices_a_get_ix ipv59_sowZ } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_snIs
                                                 ix_sox0
                                                 ipv58_sowY
                                          of s2#8_sox1 { __DEFAULT ->
                                          let {
                                            sat_sox8 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_sox8 =
                                              let {
                                                sat_sox7 [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_sox7 =
                                                  case ix_sox0
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_sox3 [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_sox3 (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_sox5 [Occ=Once], ww6_sox6 [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_sox5 ww6_sox6
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_sox7 } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_sox8
                                                 GHC.Types.True
                                                 s2#8_sox1
                                          of _ [Occ=Dead]
                                          { (# ipv60_soxa [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 ipv60_soxa
                                          of _ [Occ=Dead]
                                          { (# ipv62_soxd [Occ=Once], ipv63_soxe [Occ=Once] #) ->
                                          let {
                                            sat_soxf [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_soxf =
                                              Automata4Coms.indices_a_inc_ix ipv63_soxe } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 sat_soxf
                                                 ipv62_soxd
                                          of s2#9_soxg { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 s2#9_soxg
                                          of _ [Occ=Dead]
                                          { (# ipv64_soxi [Occ=Once*], ipv65_soxj [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv65_soxj
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_snIy
                                                     ipv64_soxi
                                              of _ [Occ=Dead]
                                              { (# ipv66_soxm [Occ=Once], ipv67_soxn [Occ=Once] #) ->
                                              let {
                                                sat_soxo [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_soxo =
                                                  Automata4Coms.indices_a_init ipv67_soxn } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_snIN
                                                     sat_soxo
                                                     ipv66_soxm
                                              of s2#10_soxp { __DEFAULT ->
                                              a43_sowV s2#10_soxp
                                              }
                                              };
                                            GHC.Types.True -> a42_sowU ipv64_soxi
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a43_sowV ipv56_sowR;
                                  : i2_soAo [Occ=Once] is2_soAp [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_snI4
                                           is2_soAp
                                           ipv56_sowR
                                    of s2#8_soAq { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_snIa
                                           i2_soAo
                                           s2#8_soAq
                                    of s2#9_soAr { __DEFAULT ->
                                    a28_soqb s2#9_soAr
                                    }
                                    }
                                }
                                }
                            }
                            }
                            }
                            };
                        a30_soqd [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a30_soqd =
                          \ (eta2_soAs [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_snIa eta2_soAs
                            of _ [Occ=Dead]
                            { (# ipv54_soAu [Occ=Once], ipv55_soAv [Occ=Once] #) ->
                            let {
                              sat_soAw [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_soAw = inc_rgem ipv55_soAv } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv15_snIp
                                   sat_soAw
                                   ipv54_soAu
                            of s2#8_soAx { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp s2#8_soAx
                            of _ [Occ=Dead]
                            { (# ipv56_soAz [Occ=Once*], ipv57_soAA [Occ=Once!] #) ->
                            case ipv57_soAA
                            of _ [Occ=Dead] { GHC.Types.I# x1_soAC [Occ=Once] ->
                            case GHC.Prim.># x1_soAC 10 of sat_soAD { __DEFAULT ->
                            case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_soAD
                            of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 ipv56_soAz
                                of _ [Occ=Dead]
                                { (# ipv58_soAG [Occ=Once*], ipv59_soAH [Occ=Once!] #) ->
                                case ipv59_soAH of _ [Occ=Dead] {
                                  [] -> a14_snVR ipv58_soAG;
                                  : i2_soAJ [Occ=Once] is2_soAK [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_snI4
                                           is2_soAK
                                           ipv58_soAG
                                    of s2#9_soAL { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_snIa
                                           i2_soAJ
                                           s2#9_soAL
                                    of s2#10_soAM { __DEFAULT ->
                                    a30_soqd s2#10_soAM
                                    }
                                    }
                                }
                                };
                              GHC.Types.True ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp ipv56_soAz
                                of _ [Occ=Dead]
                                { (# ipv58_soAO [Occ=Once], ipv59_soAP [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_snIm
                                       ipv59_soAP
                                       ipv58_soAO
                                of s2#9_soAQ { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 s2#9_soAQ
                                of _ [Occ=Dead]
                                { (# ipv60_soAS [Occ=Once*], ipv61_soAT [Occ=Once!] #) ->
                                case ipv61_soAT of _ [Occ=Dead] {
                                  [] -> a16_so6o ipv60_soAS;
                                  : i2_soAV [Occ=Once] is2_soAW [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_snI4
                                           is2_soAW
                                           ipv60_soAS
                                    of s2#10_soAX { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_snIa
                                           i2_soAV
                                           s2#10_soAX
                                    of s2#11_soAY { __DEFAULT ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_snIa s2#11_soAY
                                    of _ [Occ=Dead]
                                    { (# ipv62_soB0 [Occ=Once], ipv63_soB1 [Occ=Once] #) ->
                                    let {
                                      sat_soB2 [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soB2 = inc_rgem ipv63_soB1 } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv15_snIp
                                           sat_soB2
                                           ipv62_soB0
                                    of s2#12_soB3 { __DEFAULT ->
                                    a29_soqc s2#12_soB3
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                            }
                            }
                            }
                            }
                            }
                            };
                        a36_soqj [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a36_soqj =
                          \ (eta2_soG7 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_soG7
                            of _ [Occ=Dead]
                            { (# ipv54_soG9 [Occ=Once], ipv55_soGa [Occ=Once] #) ->
                            let {
                              ix_soGb [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_soGb = Automata4Coms.indices_a_get_ix ipv55_soGa } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_soGb
                                   ipv54_soG9
                            of s2#8_soGc { __DEFAULT ->
                            let {
                              sat_soGj [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_soGj =
                                let {
                                  sat_soGi [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_soGi =
                                    case ix_soGb
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_soGe [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_soGe (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_soGg [Occ=Once], ww6_soGh [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_soGg ww6_soGh
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_soGi } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_soGj GHC.Types.True s2#8_soGc
                            of _ [Occ=Dead] { (# ipv56_soGl [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv56_soGl
                            of _ [Occ=Dead]
                            { (# ipv58_soGo [Occ=Once], ipv59_soGp [Occ=Once] #) ->
                            let {
                              sat_soGq [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_soGq = Automata4Coms.indices_a_inc_ix ipv59_soGp } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_soGq
                                   ipv58_soGo
                            of s2#9_soGr { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#9_soGr
                            of _ [Occ=Dead]
                            { (# ipv60_soGt [Occ=Once*], ipv61_soGu [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_soGu of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv60_soGt
                                of _ [Occ=Dead]
                                { (# ipv62_soGx [Occ=Once], ipv63_soGy [Occ=Once] #) ->
                                let {
                                  sat_soGz [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soGz = Automata4Coms.indices_a_init ipv63_soGy } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_soGz
                                       ipv62_soGx
                                of s2#10_soGA { __DEFAULT ->
                                a30_soqd s2#10_soGA
                                }
                                };
                              GHC.Types.True -> a36_soqj ipv60_soGt
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a37_soqk [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a37_soqk =
                          \ (eta2_soGB [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_soGB
                            of _ [Occ=Dead]
                            { (# ipv54_soGD [Occ=Once], ipv55_soGE [Occ=Once] #) ->
                            let {
                              ix_soGF [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_soGF = Automata4Coms.indices_a_get_ix ipv55_soGE } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_soGF
                                   ipv54_soGD
                            of s2#8_soGG { __DEFAULT ->
                            let {
                              sat_soGN [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_soGN =
                                let {
                                  sat_soGM [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_soGM =
                                    case ix_soGF
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_soGI [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_soGI (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_soGK [Occ=Once], ww6_soGL [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_soGK ww6_soGL
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_soGM } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_soGN GHC.Types.True s2#8_soGG
                            of _ [Occ=Dead] { (# ipv56_soGP [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv56_soGP
                            of _ [Occ=Dead]
                            { (# ipv58_soGS [Occ=Once], ipv59_soGT [Occ=Once] #) ->
                            let {
                              sat_soGU [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_soGU = Automata4Coms.indices_a_inc_ix ipv59_soGT } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_soGU
                                   ipv58_soGS
                            of s2#9_soGV { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#9_soGV
                            of _ [Occ=Dead]
                            { (# ipv60_soGX [Occ=Once*], ipv61_soGY [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_soGY of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv60_soGX
                                of _ [Occ=Dead]
                                { (# ipv62_soH1 [Occ=Once], ipv63_soH2 [Occ=Once] #) ->
                                let {
                                  sat_soH3 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soH3 = Automata4Coms.indices_a_init ipv63_soH2 } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_soH3
                                       ipv62_soH1
                                of s2#10_soH4 { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_snId s2#10_soH4
                                of _ [Occ=Dead] { (# ipv64_soH6 [Occ=Once], ipv65_soH7 #) ->
                                let {
                                  sat_soH8 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soH8 = (ipv65_soH7, ipv65_soH7) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       sat_soH8
                                       ipv64_soH6
                                of s2#11_soH9 { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       s2#11_soH9
                                of _ [Occ=Dead]
                                { (# ipv66_soHb [Occ=Once], ipv67_soHc [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       ipv66_soHb
                                of _ [Occ=Dead]
                                { (# ipv68_soHe [Occ=Once*], ipv69_soHf [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv67_soHc ipv69_soHf
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_snIg
                                           ipv68_soHe
                                    of _ [Occ=Dead] { (# ipv70_soHi [Occ=Once], ipv71_soHj #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv71_soHj
                                           ipv70_soHi
                                    of s2#12_soHk { __DEFAULT ->
                                    let {
                                      sat_soHE [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soHE =
                                        let {
                                          sat_soHD [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soHD =
                                            case ipv71_soHj
                                            of _ [Occ=Dead]
                                            { (ww1_soHm [Occ=Once!], ww2_soHn [Occ=OnceL!]) ->
                                            let {
                                              sat_soHC [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soHC =
                                                case ww1_soHm
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soHp [Occ=Once] ->
                                                let {
                                                  sat_soHx [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soHx =
                                                    let {
                                                      sat_soHw [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soHw =
                                                        \ (w2_soHq [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soHn
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soHs [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soHs w2_soHq
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soHu [Occ=Once], ww9_soHv [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soHu ww9_soHv
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soHw
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soHy [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soHy =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soHx } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soHp sat_soHy
                                                of _ [Occ=Dead]
                                                { (# ww6_soHA [Occ=Once], ww7_soHB [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soHA ww7_soHB
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soHC
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soHD } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_soHE
                                           GHC.Types.True
                                           s2#12_soHk
                                    of _ [Occ=Dead] { (# ipv72_soHG [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv72_soHG
                                    of _ [Occ=Dead]
                                    { (# ipv74_soHJ [Occ=Once], ipv75_soHK [Occ=Once] #) ->
                                    let {
                                      sat_soHL [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soHL =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv75_soHK } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soHL
                                           ipv74_soHJ
                                    of s2#13_soHM { __DEFAULT ->
                                    a36_soqj s2#13_soHM
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_snIj
                                           ipv68_soHe
                                    of _ [Occ=Dead] { (# ipv70_soHO [Occ=Once], ipv71_soHP #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv71_soHP
                                           ipv70_soHO
                                    of s2#12_soHQ { __DEFAULT ->
                                    let {
                                      sat_soIa [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soIa =
                                        let {
                                          sat_soI9 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soI9 =
                                            case ipv71_soHP
                                            of _ [Occ=Dead]
                                            { (ww1_soHS [Occ=Once!], ww2_soHT [Occ=OnceL!]) ->
                                            let {
                                              sat_soI8 [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soI8 =
                                                case ww1_soHS
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soHV [Occ=Once] ->
                                                let {
                                                  sat_soI3 [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soI3 =
                                                    let {
                                                      sat_soI2 [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soI2 =
                                                        \ (w2_soHW [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soHT
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soHY [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soHY w2_soHW
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soI0 [Occ=Once], ww9_soI1 [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soI0 ww9_soI1
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soI2
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soI4 [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soI4 =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soI3 } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soHV sat_soI4
                                                of _ [Occ=Dead]
                                                { (# ww6_soI6 [Occ=Once], ww7_soI7 [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soI6 ww7_soI7
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soI8
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soI9 } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_soIa
                                           GHC.Types.True
                                           s2#12_soHQ
                                    of _ [Occ=Dead] { (# ipv72_soIc [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv72_soIc
                                    of _ [Occ=Dead]
                                    { (# ipv74_soIf [Occ=Once], ipv75_soIg [Occ=Once] #) ->
                                    let {
                                      sat_soIh [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soIh =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv75_soIg } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soIh
                                           ipv74_soIf
                                    of s2#13_soIi { __DEFAULT ->
                                    a24_soq7 s2#13_soIi
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a37_soqk ipv60_soGX
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a38_soql [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a38_soql =
                          \ (eta2_soIj [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_soIj
                            of _ [Occ=Dead]
                            { (# ipv54_soIl [Occ=Once], ipv55_soIm [Occ=Once] #) ->
                            let {
                              ix_soIn [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_soIn = Automata4Coms.indices_a_get_ix ipv55_soIm } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_soIn
                                   ipv54_soIl
                            of s2#8_soIo { __DEFAULT ->
                            let {
                              sat_soIv [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_soIv =
                                let {
                                  sat_soIu [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_soIu =
                                    case ix_soIn
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_soIq [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_soIq (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_soIs [Occ=Once], ww6_soIt [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_soIs ww6_soIt
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_soIu } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_soIv GHC.Types.True s2#8_soIo
                            of _ [Occ=Dead] { (# ipv56_soIx [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv56_soIx
                            of _ [Occ=Dead]
                            { (# ipv58_soIA [Occ=Once], ipv59_soIB [Occ=Once] #) ->
                            let {
                              sat_soIC [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_soIC = Automata4Coms.indices_a_inc_ix ipv59_soIB } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_soIC
                                   ipv58_soIA
                            of s2#9_soID { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#9_soID
                            of _ [Occ=Dead]
                            { (# ipv60_soIF [Occ=Once*], ipv61_soIG [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_soIG of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv60_soIF
                                of _ [Occ=Dead]
                                { (# ipv62_soIJ [Occ=Once], ipv63_soIK [Occ=Once] #) ->
                                let {
                                  sat_soIL [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soIL = Automata4Coms.indices_a_init ipv63_soIK } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_soIL
                                       ipv62_soIJ
                                of s2#10_soIM { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp s2#10_soIM
                                of _ [Occ=Dead]
                                { (# ipv64_soIO [Occ=Once], ipv65_soIP [Occ=Once] #) ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv13_snIm
                                       ipv65_soIP
                                       ipv64_soIO
                                of s2#11_soIQ { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_snIm s2#11_soIQ
                                of _ [Occ=Dead] { (# ipv66_soIS [Occ=Once], ipv67_soIT #) ->
                                let {
                                  sat_soIU [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soIU = (ipv67_soIT, ipv67_soIT) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       sat_soIU
                                       ipv66_soIS
                                of s2#12_soIV { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       s2#12_soIV
                                of _ [Occ=Dead]
                                { (# ipv68_soIX [Occ=Once], ipv69_soIY [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       ipv68_soIX
                                of _ [Occ=Dead]
                                { (# ipv70_soJ0 [Occ=Once*], ipv71_soJ1 [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv69_soIY ipv71_soJ1
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_snIg
                                           ipv70_soJ0
                                    of _ [Occ=Dead] { (# ipv72_soJ4 [Occ=Once], ipv73_soJ5 #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv73_soJ5
                                           ipv72_soJ4
                                    of s2#13_soJ6 { __DEFAULT ->
                                    let {
                                      sat_soJq [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soJq =
                                        let {
                                          sat_soJp [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soJp =
                                            case ipv73_soJ5
                                            of _ [Occ=Dead]
                                            { (ww1_soJ8 [Occ=Once!], ww2_soJ9 [Occ=OnceL!]) ->
                                            let {
                                              sat_soJo [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soJo =
                                                case ww1_soJ8
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soJb [Occ=Once] ->
                                                let {
                                                  sat_soJj [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soJj =
                                                    let {
                                                      sat_soJi [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soJi =
                                                        \ (w2_soJc [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soJ9
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soJe [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soJe w2_soJc
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soJg [Occ=Once], ww9_soJh [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soJg ww9_soJh
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soJi
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soJk [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soJk =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soJj } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soJb sat_soJk
                                                of _ [Occ=Dead]
                                                { (# ww6_soJm [Occ=Once], ww7_soJn [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soJm ww7_soJn
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soJo
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soJp } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_soJq
                                           GHC.Types.True
                                           s2#13_soJ6
                                    of _ [Occ=Dead] { (# ipv74_soJs [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv74_soJs
                                    of _ [Occ=Dead]
                                    { (# ipv76_soJv [Occ=Once], ipv77_soJw [Occ=Once] #) ->
                                    let {
                                      sat_soJx [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soJx =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv77_soJw } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soJx
                                           ipv76_soJv
                                    of s2#14_soJy { __DEFAULT ->
                                    a37_soqk s2#14_soJy
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_snIj
                                           ipv70_soJ0
                                    of _ [Occ=Dead] { (# ipv72_soJA [Occ=Once], ipv73_soJB #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv73_soJB
                                           ipv72_soJA
                                    of s2#13_soJC { __DEFAULT ->
                                    let {
                                      sat_soJW [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soJW =
                                        let {
                                          sat_soJV [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soJV =
                                            case ipv73_soJB
                                            of _ [Occ=Dead]
                                            { (ww1_soJE [Occ=Once!], ww2_soJF [Occ=OnceL!]) ->
                                            let {
                                              sat_soJU [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soJU =
                                                case ww1_soJE
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soJH [Occ=Once] ->
                                                let {
                                                  sat_soJP [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soJP =
                                                    let {
                                                      sat_soJO [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soJO =
                                                        \ (w2_soJI [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soJF
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soJK [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soJK w2_soJI
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soJM [Occ=Once], ww9_soJN [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soJM ww9_soJN
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soJO
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soJQ [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soJQ =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soJP } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soJH sat_soJQ
                                                of _ [Occ=Dead]
                                                { (# ww6_soJS [Occ=Once], ww7_soJT [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soJS ww7_soJT
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soJU
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soJV } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_soJW
                                           GHC.Types.True
                                           s2#13_soJC
                                    of _ [Occ=Dead] { (# ipv74_soJY [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv74_soJY
                                    of _ [Occ=Dead]
                                    { (# ipv76_soK1 [Occ=Once], ipv77_soK2 [Occ=Once] #) ->
                                    let {
                                      sat_soK3 [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soK3 =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv77_soK2 } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soK3
                                           ipv76_soK1
                                    of s2#14_soK4 { __DEFAULT ->
                                    a35_soqi s2#14_soK4
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a38_soql ipv60_soIF
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a41_soqo [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a41_soqo =
                          \ (eta2_soMq [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv3_snI7 eta2_soMq
                            of _ [Occ=Dead]
                            { (# ipv54_soMs [Occ=Once*], ipv55_soMt [Occ=Once!] #) ->
                            case ipv55_soMt of _ [Occ=Dead] {
                              [] ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_snIm ipv54_soMs
                                of _ [Occ=Dead] { (# ipv56_soMw [Occ=Once], ipv57_soMx #) ->
                                let {
                                  sat_soMy [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soMy = (ipv57_soMx, ipv57_soMx) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       sat_soMy
                                       ipv56_soMw
                                of s2#8_soMz { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       s2#8_soMz
                                of _ [Occ=Dead]
                                { (# ipv58_soMB [Occ=Once], ipv59_soMC [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       ipv58_soMB
                                of _ [Occ=Dead]
                                { (# ipv60_soME [Occ=Once*], ipv61_soMF [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv59_soMC ipv61_soMF
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_snIg
                                           ipv60_soME
                                    of _ [Occ=Dead] { (# ipv62_soMI [Occ=Once], ipv63_soMJ #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv63_soMJ
                                           ipv62_soMI
                                    of s2#9_soMK { __DEFAULT ->
                                    let {
                                      sat_soN4 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soN4 =
                                        let {
                                          sat_soN3 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soN3 =
                                            case ipv63_soMJ
                                            of _ [Occ=Dead]
                                            { (ww1_soMM [Occ=Once!], ww2_soMN [Occ=OnceL!]) ->
                                            let {
                                              sat_soN2 [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soN2 =
                                                case ww1_soMM
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soMP [Occ=Once] ->
                                                let {
                                                  sat_soMX [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soMX =
                                                    let {
                                                      sat_soMW [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soMW =
                                                        \ (w2_soMQ [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soMN
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soMS [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soMS w2_soMQ
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soMU [Occ=Once], ww9_soMV [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soMU ww9_soMV
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soMW
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soMY [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soMY =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soMX } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soMP sat_soMY
                                                of _ [Occ=Dead]
                                                { (# ww6_soN0 [Occ=Once], ww7_soN1 [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soN0 ww7_soN1
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soN2
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soN3 } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout sat_soN4 GHC.Types.True s2#9_soMK
                                    of _ [Occ=Dead] { (# ipv64_soN6 [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv64_soN6
                                    of _ [Occ=Dead]
                                    { (# ipv66_soN9 [Occ=Once], ipv67_soNa [Occ=Once] #) ->
                                    let {
                                      sat_soNb [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soNb =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_soNa } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soNb
                                           ipv66_soN9
                                    of s2#10_soNc { __DEFAULT ->
                                    letrec {
                                      a42_soNd [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a42_soNd =
                                        \ (eta3_soNe [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 eta3_soNe
                                          of _ [Occ=Dead]
                                          { (# ipv68_soNg [Occ=Once], ipv69_soNh [Occ=Once] #) ->
                                          let {
                                            ix_soNi [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_soNi = Automata4Coms.indices_a_get_ix ipv69_soNh } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_snIs
                                                 ix_soNi
                                                 ipv68_soNg
                                          of s2#11_soNj { __DEFAULT ->
                                          let {
                                            sat_soNq [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_soNq =
                                              let {
                                                sat_soNp [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_soNp =
                                                  case ix_soNi
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_soNl [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_soNl (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_soNn [Occ=Once], ww6_soNo [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_soNn ww6_soNo
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_soNp } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_soNq
                                                 GHC.Types.True
                                                 s2#11_soNj
                                          of _ [Occ=Dead]
                                          { (# ipv70_soNs [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 ipv70_soNs
                                          of _ [Occ=Dead]
                                          { (# ipv72_soNv [Occ=Once], ipv73_soNw [Occ=Once] #) ->
                                          let {
                                            sat_soNx [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_soNx =
                                              Automata4Coms.indices_a_inc_ix ipv73_soNw } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 sat_soNx
                                                 ipv72_soNv
                                          of s2#12_soNy { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 s2#12_soNy
                                          of _ [Occ=Dead]
                                          { (# ipv74_soNA [Occ=Once*], ipv75_soNB [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_soNB
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_snIy
                                                     ipv74_soNA
                                              of _ [Occ=Dead]
                                              { (# ipv76_soNE [Occ=Once], ipv77_soNF [Occ=Once] #) ->
                                              let {
                                                sat_soNG [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_soNG =
                                                  Automata4Coms.indices_a_init ipv77_soNF } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_snIN
                                                     sat_soNG
                                                     ipv76_soNE
                                              of s2#13_soNH { __DEFAULT ->
                                              a19_sooR s2#13_soNH
                                              }
                                              };
                                            GHC.Types.True -> a42_soNd ipv74_soNA
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a42_soNd s2#10_soNc
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_snIj
                                           ipv60_soME
                                    of _ [Occ=Dead] { (# ipv62_soNJ [Occ=Once], ipv63_soNK #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv63_soNK
                                           ipv62_soNJ
                                    of s2#9_soNL { __DEFAULT ->
                                    let {
                                      sat_soO5 [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soO5 =
                                        let {
                                          sat_soO4 [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soO4 =
                                            case ipv63_soNK
                                            of _ [Occ=Dead]
                                            { (ww1_soNN [Occ=Once!], ww2_soNO [Occ=OnceL!]) ->
                                            let {
                                              sat_soO3 [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soO3 =
                                                case ww1_soNN
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soNQ [Occ=Once] ->
                                                let {
                                                  sat_soNY [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soNY =
                                                    let {
                                                      sat_soNX [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soNX =
                                                        \ (w2_soNR [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soNO
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soNT [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soNT w2_soNR
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soNV [Occ=Once], ww9_soNW [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soNV ww9_soNW
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soNX
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soNZ [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soNZ =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soNY } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soNQ sat_soNZ
                                                of _ [Occ=Dead]
                                                { (# ww6_soO1 [Occ=Once], ww7_soO2 [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soO1 ww7_soO2
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soO3
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soO4 } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout sat_soO5 GHC.Types.True s2#9_soNL
                                    of _ [Occ=Dead] { (# ipv64_soO7 [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv64_soO7
                                    of _ [Occ=Dead]
                                    { (# ipv66_soOa [Occ=Once], ipv67_soOb [Occ=Once] #) ->
                                    let {
                                      sat_soOc [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soOc =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_soOb } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soOc
                                           ipv66_soOa
                                    of s2#10_soOd { __DEFAULT ->
                                    letrec {
                                      a42_soOe [Occ=LoopBreaker]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                                      a42_soOe =
                                        \ (eta3_soOf [Occ=Once]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 eta3_soOf
                                          of _ [Occ=Dead]
                                          { (# ipv68_soOh [Occ=Once], ipv69_soOi [Occ=Once] #) ->
                                          let {
                                            ix_soOj [Dmd=<L,U(U)>] :: GHC.Types.Int
                                            [LclId, Str=DmdType]
                                            ix_soOj = Automata4Coms.indices_a_get_ix ipv69_soOi } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ GHC.Types.Int
                                                 ipv17_snIs
                                                 ix_soOj
                                                 ipv68_soOh
                                          of s2#11_soOk { __DEFAULT ->
                                          let {
                                            sat_soOr [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_soOr =
                                              let {
                                                sat_soOq [Occ=Once] :: [GHC.Types.Char]
                                                [LclId, Str=DmdType]
                                                sat_soOq =
                                                  case ix_soOj
                                                  of _ [Occ=Dead]
                                                  { GHC.Types.I# ww3_soOm [Occ=Once] ->
                                                  case GHC.Show.$wshowSignedInt
                                                         0 ww3_soOm (GHC.Types.[] @ GHC.Types.Char)
                                                  of _ [Occ=Dead]
                                                  { (# ww5_soOo [Occ=Once], ww6_soOp [Occ=Once] #) ->
                                                  GHC.Types.: @ GHC.Types.Char ww5_soOo ww6_soOp
                                                  }
                                                  } } in
                                              GHC.CString.unpackAppendCString#
                                                "filtd:"# sat_soOq } in
                                          case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 sat_soOr
                                                 GHC.Types.True
                                                 s2#11_soOk
                                          of _ [Occ=Dead]
                                          { (# ipv70_soOt [Occ=Once], _ [Occ=Dead] #) ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 ipv70_soOt
                                          of _ [Occ=Dead]
                                          { (# ipv72_soOw [Occ=Once], ipv73_soOx [Occ=Once] #) ->
                                          let {
                                            sat_soOy [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                            [LclId, Str=DmdType]
                                            sat_soOy =
                                              Automata4Coms.indices_a_inc_ix ipv73_soOx } in
                                          case GHC.Prim.writeMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 sat_soOy
                                                 ipv72_soOw
                                          of s2#12_soOz { __DEFAULT ->
                                          case GHC.Prim.readMutVar#
                                                 @ GHC.Prim.RealWorld
                                                 @ (GHC.Types.Int, GHC.Types.Int)
                                                 ipv31_snIN
                                                 s2#12_soOz
                                          of _ [Occ=Dead]
                                          { (# ipv74_soOB [Occ=Once*], ipv75_soOC [Occ=Once] #) ->
                                          case Automata4Coms.indices_a_check ipv75_soOC
                                          of _ [Occ=Dead] {
                                            GHC.Types.False ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv21_snIy
                                                     ipv74_soOB
                                              of _ [Occ=Dead]
                                              { (# ipv76_soOF [Occ=Once], ipv77_soOG [Occ=Once] #) ->
                                              let {
                                                sat_soOH [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_soOH =
                                                  Automata4Coms.indices_a_init ipv77_soOG } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv31_snIN
                                                     sat_soOH
                                                     ipv76_soOF
                                              of s2#13_soOI { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv15_snIp
                                                     s2#13_soOI
                                              of _ [Occ=Dead]
                                              { (# ipv78_soOK [Occ=Once], ipv79_soOL [Occ=Once] #) ->
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv13_snIm
                                                     ipv79_soOL
                                                     ipv78_soOK
                                              of s2#14_soOM { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ GHC.Types.Int
                                                     ipv13_snIm
                                                     s2#14_soOM
                                              of _ [Occ=Dead]
                                              { (# ipv80_soOO [Occ=Once], ipv81_soOP #) ->
                                              let {
                                                sat_soOQ [Occ=Once]
                                                  :: (GHC.Types.Int, GHC.Types.Int)
                                                [LclId, Str=DmdType]
                                                sat_soOQ = (ipv81_soOP, ipv81_soOP) } in
                                              case GHC.Prim.writeMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_snIj
                                                     sat_soOQ
                                                     ipv80_soOO
                                              of s2#15_soOR { __DEFAULT ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv11_snIj
                                                     s2#15_soOR
                                              of _ [Occ=Dead]
                                              { (# ipv82_soOT [Occ=Once], ipv83_soOU [Occ=Once] #) ->
                                              case GHC.Prim.readMutVar#
                                                     @ GHC.Prim.RealWorld
                                                     @ (GHC.Types.Int, GHC.Types.Int)
                                                     ipv9_snIg
                                                     ipv82_soOT
                                              of _ [Occ=Dead]
                                              { (# ipv84_soOW [Occ=Once*], ipv85_soOX [Occ=Once] #) ->
                                              case Automata4Coms.merge_a_le_pair
                                                     @ GHC.Types.Int ipv83_soOU ipv85_soOX
                                              of _ [Occ=Dead] {
                                                GHC.Types.False ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv9_snIg
                                                         ipv84_soOW
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_soP0 [Occ=Once], ipv87_soP1 #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv87_soP1
                                                         ipv86_soP0
                                                  of s2#16_soP2 { __DEFAULT ->
                                                  let {
                                                    sat_soPm [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_soPm =
                                                      let {
                                                        sat_soPl [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_soPl =
                                                          case ipv87_soP1
                                                          of _ [Occ=Dead]
                                                          { (ww1_soP4 [Occ=Once!], ww2_soP5 [Occ=OnceL!]) ->
                                                          let {
                                                            sat_soPk [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_soPk =
                                                              case ww1_soP4
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_soP7 [Occ=Once] ->
                                                              let {
                                                                sat_soPf [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_soPf =
                                                                  let {
                                                                    sat_soPe [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_soPe =
                                                                      \ (w2_soP8 [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_soP5
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_soPa [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_soPa w2_soP8
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_soPc [Occ=Once], ww9_soPd [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_soPc
                                                                          ww9_soPd
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_soPe
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_soPg [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_soPg =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_soPf } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_soP7 sat_soPg
                                                              of _ [Occ=Dead]
                                                              { (# ww6_soPi [Occ=Once], ww7_soPj [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_soPi ww7_soPj
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_soPk
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_soPl } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_soPm
                                                         GHC.Types.True
                                                         s2#16_soP2
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_soPo [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv88_soPo
                                                  of _ [Occ=Dead]
                                                  { (# ipv90_soPr [Occ=Once], ipv91_soPs [Occ=Once] #) ->
                                                  let {
                                                    sat_soPt [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_soPt =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv91_soPs } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_snIy
                                                         sat_soPt
                                                         ipv90_soPr
                                                  of s2#17_soPu { __DEFAULT ->
                                                  letrec {
                                                    a43_soPv [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a43_soPv =
                                                      \ (eta4_soPw [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               eta4_soPw
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_soPy [Occ=Once], ipv93_soPz [Occ=Once] #) ->
                                                        let {
                                                          ix1_soPA [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_soPA =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv93_soPz } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_snIs
                                                               ix1_soPA
                                                               ipv92_soPy
                                                        of s2#18_soPB { __DEFAULT ->
                                                        let {
                                                          sat_soPI [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_soPI =
                                                            let {
                                                              sat_soPH [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_soPH =
                                                                case ix1_soPA
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_soPD [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_soPD
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_soPF [Occ=Once], ww6_soPG [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_soPF ww6_soPG
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_soPH } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_soPI
                                                               GHC.Types.True
                                                               s2#18_soPB
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_soPK [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               ipv94_soPK
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_soPN [Occ=Once], ipv97_soPO [Occ=Once] #) ->
                                                        let {
                                                          sat_soPP [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_soPP =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv97_soPO } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               sat_soPP
                                                               ipv96_soPN
                                                        of s2#19_soPQ { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               s2#19_soPQ
                                                        of _ [Occ=Dead]
                                                        { (# ipv98_soPS [Occ=Once*], ipv99_soPT [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv99_soPT
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_snIy
                                                                   ipv98_soPS
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_soPW [Occ=Once], ipv101_soPX [Occ=Once] #) ->
                                                            let {
                                                              sat_soPY [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_soPY =
                                                                Automata4Coms.indices_a_init
                                                                  ipv101_soPX } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_snIN
                                                                   sat_soPY
                                                                   ipv100_soPW
                                                            of s2#20_soPZ { __DEFAULT ->
                                                            a18_sonO s2#20_soPZ
                                                            }
                                                            };
                                                          GHC.Types.True -> a43_soPv ipv98_soPS
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a43_soPv s2#17_soPu
                                                  }
                                                  }
                                                  }
                                                  }
                                                  };
                                                GHC.Types.True ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv11_snIj
                                                         ipv84_soOW
                                                  of _ [Occ=Dead]
                                                  { (# ipv86_soQ1 [Occ=Once], ipv87_soQ2 #) ->
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv87_soQ2
                                                         ipv86_soQ1
                                                  of s2#16_soQ3 { __DEFAULT ->
                                                  let {
                                                    sat_soQn [Occ=Once, Dmd=<L,1*U>]
                                                      :: GHC.Base.String
                                                    [LclId, Str=DmdType]
                                                    sat_soQn =
                                                      let {
                                                        sat_soQm [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId, Str=DmdType]
                                                        sat_soQm =
                                                          case ipv87_soQ2
                                                          of _ [Occ=Dead]
                                                          { (ww1_soQ5 [Occ=Once!], ww2_soQ6 [Occ=OnceL!]) ->
                                                          let {
                                                            sat_soQl [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId, Str=DmdType]
                                                            sat_soQl =
                                                              case ww1_soQ5
                                                              of _ [Occ=Dead]
                                                              { GHC.Types.I# ww4_soQ8 [Occ=Once] ->
                                                              let {
                                                                sat_soQg [Occ=Once]
                                                                  :: [GHC.Types.Char]
                                                                [LclId, Str=DmdType]
                                                                sat_soQg =
                                                                  let {
                                                                    sat_soQf [Occ=Once]
                                                                      :: GHC.Base.String
                                                                         -> GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_soQf =
                                                                      \ (w2_soQ9 [Occ=Once]
                                                                           :: GHC.Base.String) ->
                                                                        case ww2_soQ6
                                                                        of _ [Occ=Dead]
                                                                        { GHC.Types.I# ww6_soQb [Occ=Once] ->
                                                                        case GHC.Show.$wshowSignedInt
                                                                               0 ww6_soQb w2_soQ9
                                                                        of _ [Occ=Dead]
                                                                        { (# ww8_soQd [Occ=Once], ww9_soQe [Occ=Once] #) ->
                                                                        GHC.Types.:
                                                                          @ GHC.Types.Char
                                                                          ww8_soQd
                                                                          ww9_soQe
                                                                        }
                                                                        } } in
                                                                  GHC.List.foldr1_$sfoldr1
                                                                    @ (GHC.Base.String
                                                                       -> GHC.Base.String)
                                                                    GHC.Show.$fShow(,)1
                                                                    sat_soQf
                                                                    (GHC.Types.[] @ GHC.Show.ShowS)
                                                                    lvl4_rger } in
                                                              let {
                                                                sat_soQh [Occ=Once]
                                                                  :: GHC.Base.String
                                                                [LclId, Str=DmdType]
                                                                sat_soQh =
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.showList__1
                                                                    sat_soQg } in
                                                              case GHC.Show.$wshowSignedInt
                                                                     0 ww4_soQ8 sat_soQh
                                                              of _ [Occ=Dead]
                                                              { (# ww6_soQj [Occ=Once], ww7_soQk [Occ=Once] #) ->
                                                              GHC.Types.:
                                                                @ GHC.Types.Char ww6_soQj ww7_soQk
                                                              }
                                                              } } in
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.shows13
                                                            sat_soQl
                                                          } } in
                                                      GHC.CString.unpackAppendCString#
                                                        "merg: "# sat_soQm } in
                                                  case GHC.IO.Handle.Text.hPutStr2
                                                         GHC.IO.Handle.FD.stdout
                                                         sat_soQn
                                                         GHC.Types.True
                                                         s2#16_soQ3
                                                  of _ [Occ=Dead]
                                                  { (# ipv88_soQp [Occ=Once], _ [Occ=Dead] #) ->
                                                  case GHC.Prim.readMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ (GHC.Types.Int, GHC.Types.Int)
                                                         ipv19_snIv
                                                         ipv88_soQp
                                                  of _ [Occ=Dead]
                                                  { (# ipv90_soQs [Occ=Once], ipv91_soQt [Occ=Once] #) ->
                                                  let {
                                                    sat_soQu [Occ=Once] :: GHC.Types.Int
                                                    [LclId, Str=DmdType]
                                                    sat_soQu =
                                                      Data.Tuple.snd
                                                        @ GHC.Types.Int
                                                        @ GHC.Types.Int
                                                        ipv91_soQt } in
                                                  case GHC.Prim.writeMutVar#
                                                         @ GHC.Prim.RealWorld
                                                         @ GHC.Types.Int
                                                         ipv21_snIy
                                                         sat_soQu
                                                         ipv90_soQs
                                                  of s2#17_soQv { __DEFAULT ->
                                                  letrec {
                                                    a43_soQw [Occ=LoopBreaker]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId,
                                                     Arity=1,
                                                     Str=DmdType <L,U>,
                                                     Unf=OtherCon []]
                                                    a43_soQw =
                                                      \ (eta4_soQx [Occ=Once]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               eta4_soQx
                                                        of _ [Occ=Dead]
                                                        { (# ipv92_soQz [Occ=Once], ipv93_soQA [Occ=Once] #) ->
                                                        let {
                                                          ix1_soQB [Dmd=<L,U(U)>] :: GHC.Types.Int
                                                          [LclId, Str=DmdType]
                                                          ix1_soQB =
                                                            Automata4Coms.indices_a_get_ix
                                                              ipv93_soQA } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ GHC.Types.Int
                                                               ipv17_snIs
                                                               ix1_soQB
                                                               ipv92_soQz
                                                        of s2#18_soQC { __DEFAULT ->
                                                        let {
                                                          sat_soQJ [Occ=Once, Dmd=<L,1*U>]
                                                            :: GHC.Base.String
                                                          [LclId, Str=DmdType]
                                                          sat_soQJ =
                                                            let {
                                                              sat_soQI [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId, Str=DmdType]
                                                              sat_soQI =
                                                                case ix1_soQB
                                                                of _ [Occ=Dead]
                                                                { GHC.Types.I# ww3_soQE [Occ=Once] ->
                                                                case GHC.Show.$wshowSignedInt
                                                                       0
                                                                       ww3_soQE
                                                                       (GHC.Types.[]
                                                                          @ GHC.Types.Char)
                                                                of _ [Occ=Dead]
                                                                { (# ww5_soQG [Occ=Once], ww6_soQH [Occ=Once] #) ->
                                                                GHC.Types.:
                                                                  @ GHC.Types.Char ww5_soQG ww6_soQH
                                                                }
                                                                } } in
                                                            GHC.CString.unpackAppendCString#
                                                              "filtd:"# sat_soQI } in
                                                        case GHC.IO.Handle.Text.hPutStr2
                                                               GHC.IO.Handle.FD.stdout
                                                               sat_soQJ
                                                               GHC.Types.True
                                                               s2#18_soQC
                                                        of _ [Occ=Dead]
                                                        { (# ipv94_soQL [Occ=Once], _ [Occ=Dead] #) ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               ipv94_soQL
                                                        of _ [Occ=Dead]
                                                        { (# ipv96_soQO [Occ=Once], ipv97_soQP [Occ=Once] #) ->
                                                        let {
                                                          sat_soQQ [Occ=Once]
                                                            :: (GHC.Types.Int, GHC.Types.Int)
                                                          [LclId, Str=DmdType]
                                                          sat_soQQ =
                                                            Automata4Coms.indices_a_inc_ix
                                                              ipv97_soQP } in
                                                        case GHC.Prim.writeMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               sat_soQQ
                                                               ipv96_soQO
                                                        of s2#19_soQR { __DEFAULT ->
                                                        case GHC.Prim.readMutVar#
                                                               @ GHC.Prim.RealWorld
                                                               @ (GHC.Types.Int, GHC.Types.Int)
                                                               ipv31_snIN
                                                               s2#19_soQR
                                                        of _ [Occ=Dead]
                                                        { (# ipv98_soQT [Occ=Once*], ipv99_soQU [Occ=Once] #) ->
                                                        case Automata4Coms.indices_a_check
                                                               ipv99_soQU
                                                        of _ [Occ=Dead] {
                                                          GHC.Types.False ->
                                                            case GHC.Prim.readMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ GHC.Types.Int
                                                                   ipv21_snIy
                                                                   ipv98_soQT
                                                            of _ [Occ=Dead]
                                                            { (# ipv100_soQX [Occ=Once], ipv101_soQY [Occ=Once] #) ->
                                                            let {
                                                              sat_soQZ [Occ=Once]
                                                                :: (GHC.Types.Int, GHC.Types.Int)
                                                              [LclId, Str=DmdType]
                                                              sat_soQZ =
                                                                Automata4Coms.indices_a_init
                                                                  ipv101_soQY } in
                                                            case GHC.Prim.writeMutVar#
                                                                   @ GHC.Prim.RealWorld
                                                                   @ (GHC.Types.Int, GHC.Types.Int)
                                                                   ipv31_snIN
                                                                   sat_soQZ
                                                                   ipv100_soQX
                                                            of s2#20_soR0 { __DEFAULT ->
                                                            letrec {
                                                              a45_soR2 [Occ=LoopBreaker]
                                                                :: GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                   -> (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         () #)
                                                              [LclId,
                                                               Arity=1,
                                                               Str=DmdType <L,U>,
                                                               Unf=OtherCon []]
                                                              a45_soR2 =
                                                                \ (eta5_soRF [Occ=Once]
                                                                     :: GHC.Prim.State#
                                                                          GHC.Prim.RealWorld) ->
                                                                  case GHC.Prim.readMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ GHC.Types.Int
                                                                         ipv5_snIa
                                                                         eta5_soRF
                                                                  of _ [Occ=Dead]
                                                                  { (# ipv102_soRH [Occ=Once], ipv103_soRI [Occ=Once] #) ->
                                                                  let {
                                                                    sat_soRJ [Occ=Once]
                                                                      :: GHC.Types.Int
                                                                    [LclId, Str=DmdType]
                                                                    sat_soRJ =
                                                                      inc_rgem ipv103_soRI } in
                                                                  case GHC.Prim.writeMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ GHC.Types.Int
                                                                         ipv15_snIp
                                                                         sat_soRJ
                                                                         ipv102_soRH
                                                                  of s2#21_soRK { __DEFAULT ->
                                                                  case GHC.Prim.readMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ GHC.Types.Int
                                                                         ipv15_snIp
                                                                         s2#21_soRK
                                                                  of _ [Occ=Dead]
                                                                  { (# ipv104_soRM [Occ=Once*], ipv105_soRN [Occ=Once!] #) ->
                                                                  case ipv105_soRN
                                                                  of _ [Occ=Dead]
                                                                  { GHC.Types.I# x1_soRP [Occ=Once] ->
                                                                  case GHC.Prim.># x1_soRP 10
                                                                  of sat_soRQ { __DEFAULT ->
                                                                  case GHC.Prim.tagToEnum#
                                                                         @ GHC.Types.Bool sat_soRQ
                                                                  of _ [Occ=Dead] {
                                                                    GHC.Types.False ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ [GHC.Types.Int]
                                                                             ipv1_snI4
                                                                             ipv104_soRM
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv106_soRT [Occ=Once*], ipv107_soRU [Occ=Once!] #) ->
                                                                      case ipv107_soRU
                                                                      of _ [Occ=Dead] {
                                                                        [] -> a13_snUO ipv106_soRT;
                                                                        : i2_soRW [Occ=Once]
                                                                          is2_soRX [Occ=Once] ->
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ [GHC.Types.Int]
                                                                                 ipv1_snI4
                                                                                 is2_soRX
                                                                                 ipv106_soRT
                                                                          of s2#22_soRY
                                                                          { __DEFAULT ->
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ GHC.Types.Int
                                                                                 ipv5_snIa
                                                                                 i2_soRW
                                                                                 s2#22_soRY
                                                                          of s2#23_soRZ
                                                                          { __DEFAULT ->
                                                                          a45_soR2 s2#23_soRZ
                                                                          }
                                                                          }
                                                                      }
                                                                      };
                                                                    GHC.Types.True ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ GHC.Types.Int
                                                                             ipv15_snIp
                                                                             ipv104_soRM
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv106_soS1 [Occ=Once], ipv107_soS2 [Occ=Once] #) ->
                                                                      case GHC.Prim.writeMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ GHC.Types.Int
                                                                             ipv13_snIm
                                                                             ipv107_soS2
                                                                             ipv106_soS1
                                                                      of s2#22_soS3 { __DEFAULT ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ GHC.Types.Int
                                                                             ipv13_snIm
                                                                             s2#22_soS3
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv108_soS5 [Occ=Once], ipv109_soS6 #) ->
                                                                      let {
                                                                        sat_soS7 [Occ=Once]
                                                                          :: (GHC.Types.Int,
                                                                              GHC.Types.Int)
                                                                        [LclId, Str=DmdType]
                                                                        sat_soS7 =
                                                                          (ipv109_soS6,
                                                                           ipv109_soS6) } in
                                                                      case GHC.Prim.writeMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv11_snIj
                                                                             sat_soS7
                                                                             ipv108_soS5
                                                                      of s2#23_soS8 { __DEFAULT ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv11_snIj
                                                                             s2#23_soS8
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv110_soSa [Occ=Once], ipv111_soSb [Occ=Once] #) ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv9_snIg
                                                                             ipv110_soSa
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv112_soSd [Occ=Once*], ipv113_soSe [Occ=Once] #) ->
                                                                      case Automata4Coms.merge_a_le_pair
                                                                             @ GHC.Types.Int
                                                                             ipv111_soSb
                                                                             ipv113_soSe
                                                                      of _ [Occ=Dead] {
                                                                        GHC.Types.False ->
                                                                          case GHC.Prim.readMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv9_snIg
                                                                                 ipv112_soSd
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv114_soSh [Occ=Once], ipv115_soSi #) ->
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv19_snIv
                                                                                 ipv115_soSi
                                                                                 ipv114_soSh
                                                                          of s2#24_soSj
                                                                          { __DEFAULT ->
                                                                          let {
                                                                            sat_soSD [Occ=Once,
                                                                                      Dmd=<L,1*U>]
                                                                              :: GHC.Base.String
                                                                            [LclId, Str=DmdType]
                                                                            sat_soSD =
                                                                              let {
                                                                                sat_soSC [Occ=Once]
                                                                                  :: [GHC.Types.Char]
                                                                                [LclId, Str=DmdType]
                                                                                sat_soSC =
                                                                                  case ipv115_soSi
                                                                                  of _ [Occ=Dead]
                                                                                  { (ww1_soSl [Occ=Once!], ww2_soSm [Occ=OnceL!]) ->
                                                                                  let {
                                                                                    sat_soSB [Occ=Once]
                                                                                      :: [GHC.Types.Char]
                                                                                    [LclId,
                                                                                     Str=DmdType]
                                                                                    sat_soSB =
                                                                                      case ww1_soSl
                                                                                      of _ [Occ=Dead]
                                                                                      { GHC.Types.I# ww4_soSo [Occ=Once] ->
                                                                                      let {
                                                                                        sat_soSw [Occ=Once]
                                                                                          :: [GHC.Types.Char]
                                                                                        [LclId,
                                                                                         Str=DmdType]
                                                                                        sat_soSw =
                                                                                          let {
                                                                                            sat_soSv [Occ=Once]
                                                                                              :: GHC.Base.String
                                                                                                 -> GHC.Base.String
                                                                                            [LclId,
                                                                                             Str=DmdType]
                                                                                            sat_soSv =
                                                                                              \ (w2_soSp [Occ=Once]
                                                                                                   :: GHC.Base.String) ->
                                                                                                case ww2_soSm
                                                                                                of _ [Occ=Dead]
                                                                                                { GHC.Types.I# ww6_soSr [Occ=Once] ->
                                                                                                case GHC.Show.$wshowSignedInt
                                                                                                       0
                                                                                                       ww6_soSr
                                                                                                       w2_soSp
                                                                                                of _ [Occ=Dead]
                                                                                                { (# ww8_soSt [Occ=Once], ww9_soSu [Occ=Once] #) ->
                                                                                                GHC.Types.:
                                                                                                  @ GHC.Types.Char
                                                                                                  ww8_soSt
                                                                                                  ww9_soSu
                                                                                                }
                                                                                                } } in
                                                                                          GHC.List.foldr1_$sfoldr1
                                                                                            @ (GHC.Base.String
                                                                                               -> GHC.Base.String)
                                                                                            GHC.Show.$fShow(,)1
                                                                                            sat_soSv
                                                                                            (GHC.Types.[]
                                                                                               @ GHC.Show.ShowS)
                                                                                            lvl4_rger } in
                                                                                      let {
                                                                                        sat_soSx [Occ=Once]
                                                                                          :: GHC.Base.String
                                                                                        [LclId,
                                                                                         Str=DmdType]
                                                                                        sat_soSx =
                                                                                          GHC.Types.:
                                                                                            @ GHC.Types.Char
                                                                                            GHC.Show.showList__1
                                                                                            sat_soSw } in
                                                                                      case GHC.Show.$wshowSignedInt
                                                                                             0
                                                                                             ww4_soSo
                                                                                             sat_soSx
                                                                                      of _ [Occ=Dead]
                                                                                      { (# ww6_soSz [Occ=Once], ww7_soSA [Occ=Once] #) ->
                                                                                      GHC.Types.:
                                                                                        @ GHC.Types.Char
                                                                                        ww6_soSz
                                                                                        ww7_soSA
                                                                                      }
                                                                                      } } in
                                                                                  GHC.Types.:
                                                                                    @ GHC.Types.Char
                                                                                    GHC.Show.shows13
                                                                                    sat_soSB
                                                                                  } } in
                                                                              GHC.CString.unpackAppendCString#
                                                                                "merg: "#
                                                                                sat_soSC } in
                                                                          case GHC.IO.Handle.Text.hPutStr2
                                                                                 GHC.IO.Handle.FD.stdout
                                                                                 sat_soSD
                                                                                 GHC.Types.True
                                                                                 s2#24_soSj
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv116_soSF [Occ=Once], _ [Occ=Dead] #) ->
                                                                          case GHC.Prim.readMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv19_snIv
                                                                                 ipv116_soSF
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv118_soSI [Occ=Once], ipv119_soSJ [Occ=Once] #) ->
                                                                          let {
                                                                            sat_soSK [Occ=Once]
                                                                              :: GHC.Types.Int
                                                                            [LclId, Str=DmdType]
                                                                            sat_soSK =
                                                                              Data.Tuple.snd
                                                                                @ GHC.Types.Int
                                                                                @ GHC.Types.Int
                                                                                ipv119_soSJ } in
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ GHC.Types.Int
                                                                                 ipv21_snIy
                                                                                 sat_soSK
                                                                                 ipv118_soSI
                                                                          of s2#25_soSL
                                                                          { __DEFAULT ->
                                                                          letrec {
                                                                            a46_soSM [Occ=LoopBreaker]
                                                                              :: GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                                 -> (# GHC.Prim.State#
                                                                                         GHC.Prim.RealWorld,
                                                                                       () #)
                                                                            [LclId,
                                                                             Arity=1,
                                                                             Str=DmdType <L,U>,
                                                                             Unf=OtherCon []]
                                                                            a46_soSM =
                                                                              \ (eta6_soSN [Occ=Once]
                                                                                   :: GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld) ->
                                                                                case GHC.Prim.readMutVar#
                                                                                       @ GHC.Prim.RealWorld
                                                                                       @ (GHC.Types.Int,
                                                                                          GHC.Types.Int)
                                                                                       ipv31_snIN
                                                                                       eta6_soSN
                                                                                of _ [Occ=Dead]
                                                                                { (# ipv120_soSP [Occ=Once], ipv121_soSQ [Occ=Once] #) ->
                                                                                let {
                                                                                  ix2_soSR [Dmd=<L,U(U)>]
                                                                                    :: GHC.Types.Int
                                                                                  [LclId,
                                                                                   Str=DmdType]
                                                                                  ix2_soSR =
                                                                                    Automata4Coms.indices_a_get_ix
                                                                                      ipv121_soSQ } in
                                                                                case GHC.Prim.writeMutVar#
                                                                                       @ GHC.Prim.RealWorld
                                                                                       @ GHC.Types.Int
                                                                                       ipv17_snIs
                                                                                       ix2_soSR
                                                                                       ipv120_soSP
                                                                                of s2#26_soSS
                                                                                { __DEFAULT ->
                                                                                let {
                                                                                  sat_soSZ [Occ=Once,
                                                                                            Dmd=<L,1*U>]
                                                                                    :: GHC.Base.String
                                                                                  [LclId,
                                                                                   Str=DmdType]
                                                                                  sat_soSZ =
                                                                                    let {
                                                                                      sat_soSY [Occ=Once]
                                                                                        :: [GHC.Types.Char]
                                                                                      [LclId,
                                                                                       Str=DmdType]
                                                                                      sat_soSY =
                                                                                        case ix2_soSR
                                                                                        of _ [Occ=Dead]
                                                                                        { GHC.Types.I# ww3_soSU [Occ=Once] ->
                                                                                        case GHC.Show.$wshowSignedInt
                                                                                               0
                                                                                               ww3_soSU
                                                                                               (GHC.Types.[]
                                                                                                  @ GHC.Types.Char)
                                                                                        of _ [Occ=Dead]
                                                                                        { (# ww5_soSW [Occ=Once], ww6_soSX [Occ=Once] #) ->
                                                                                        GHC.Types.:
                                                                                          @ GHC.Types.Char
                                                                                          ww5_soSW
                                                                                          ww6_soSX
                                                                                        }
                                                                                        } } in
                                                                                    GHC.CString.unpackAppendCString#
                                                                                      "filtd:"#
                                                                                      sat_soSY } in
                                                                                case GHC.IO.Handle.Text.hPutStr2
                                                                                       GHC.IO.Handle.FD.stdout
                                                                                       sat_soSZ
                                                                                       GHC.Types.True
                                                                                       s2#26_soSS
                                                                                of _ [Occ=Dead]
                                                                                { (# ipv122_soT1 [Occ=Once], _ [Occ=Dead] #) ->
                                                                                case GHC.Prim.readMutVar#
                                                                                       @ GHC.Prim.RealWorld
                                                                                       @ (GHC.Types.Int,
                                                                                          GHC.Types.Int)
                                                                                       ipv31_snIN
                                                                                       ipv122_soT1
                                                                                of _ [Occ=Dead]
                                                                                { (# ipv124_soT4 [Occ=Once], ipv125_soT5 [Occ=Once] #) ->
                                                                                let {
                                                                                  sat_soT6 [Occ=Once]
                                                                                    :: (GHC.Types.Int,
                                                                                        GHC.Types.Int)
                                                                                  [LclId,
                                                                                   Str=DmdType]
                                                                                  sat_soT6 =
                                                                                    Automata4Coms.indices_a_inc_ix
                                                                                      ipv125_soT5 } in
                                                                                case GHC.Prim.writeMutVar#
                                                                                       @ GHC.Prim.RealWorld
                                                                                       @ (GHC.Types.Int,
                                                                                          GHC.Types.Int)
                                                                                       ipv31_snIN
                                                                                       sat_soT6
                                                                                       ipv124_soT4
                                                                                of s2#27_soT7
                                                                                { __DEFAULT ->
                                                                                case GHC.Prim.readMutVar#
                                                                                       @ GHC.Prim.RealWorld
                                                                                       @ (GHC.Types.Int,
                                                                                          GHC.Types.Int)
                                                                                       ipv31_snIN
                                                                                       s2#27_soT7
                                                                                of _ [Occ=Dead]
                                                                                { (# ipv126_soT9 [Occ=Once*], ipv127_soTa [Occ=Once] #) ->
                                                                                case Automata4Coms.indices_a_check
                                                                                       ipv127_soTa
                                                                                of _ [Occ=Dead] {
                                                                                  GHC.Types.False ->
                                                                                    case GHC.Prim.readMutVar#
                                                                                           @ GHC.Prim.RealWorld
                                                                                           @ GHC.Types.Int
                                                                                           ipv21_snIy
                                                                                           ipv126_soT9
                                                                                    of _ [Occ=Dead]
                                                                                    { (# ipv128_soTd [Occ=Once], ipv129_soTe [Occ=Once] #) ->
                                                                                    let {
                                                                                      sat_soTf [Occ=Once]
                                                                                        :: (GHC.Types.Int,
                                                                                            GHC.Types.Int)
                                                                                      [LclId,
                                                                                       Str=DmdType]
                                                                                      sat_soTf =
                                                                                        Automata4Coms.indices_a_init
                                                                                          ipv129_soTe } in
                                                                                    case GHC.Prim.writeMutVar#
                                                                                           @ GHC.Prim.RealWorld
                                                                                           @ (GHC.Types.Int,
                                                                                              GHC.Types.Int)
                                                                                           ipv31_snIN
                                                                                           sat_soTf
                                                                                           ipv128_soTd
                                                                                    of s2#28_soTg
                                                                                    { __DEFAULT ->
                                                                                    a6_snOB
                                                                                      s2#28_soTg
                                                                                    }
                                                                                    };
                                                                                  GHC.Types.True ->
                                                                                    a46_soSM
                                                                                      ipv126_soT9
                                                                                }
                                                                                }
                                                                                }
                                                                                }
                                                                                }
                                                                                }
                                                                                }; } in
                                                                          a46_soSM s2#25_soSL
                                                                          }
                                                                          }
                                                                          }
                                                                          }
                                                                          };
                                                                        GHC.Types.True ->
                                                                          case GHC.Prim.readMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv11_snIj
                                                                                 ipv112_soSd
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv114_soTi [Occ=Once], ipv115_soTj #) ->
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv19_snIv
                                                                                 ipv115_soTj
                                                                                 ipv114_soTi
                                                                          of s2#24_soTk
                                                                          { __DEFAULT ->
                                                                          let {
                                                                            sat_soTE [Occ=Once,
                                                                                      Dmd=<L,1*U>]
                                                                              :: GHC.Base.String
                                                                            [LclId, Str=DmdType]
                                                                            sat_soTE =
                                                                              let {
                                                                                sat_soTD [Occ=Once]
                                                                                  :: [GHC.Types.Char]
                                                                                [LclId, Str=DmdType]
                                                                                sat_soTD =
                                                                                  case ipv115_soTj
                                                                                  of _ [Occ=Dead]
                                                                                  { (ww1_soTm [Occ=Once!], ww2_soTn [Occ=OnceL!]) ->
                                                                                  let {
                                                                                    sat_soTC [Occ=Once]
                                                                                      :: [GHC.Types.Char]
                                                                                    [LclId,
                                                                                     Str=DmdType]
                                                                                    sat_soTC =
                                                                                      case ww1_soTm
                                                                                      of _ [Occ=Dead]
                                                                                      { GHC.Types.I# ww4_soTp [Occ=Once] ->
                                                                                      let {
                                                                                        sat_soTx [Occ=Once]
                                                                                          :: [GHC.Types.Char]
                                                                                        [LclId,
                                                                                         Str=DmdType]
                                                                                        sat_soTx =
                                                                                          let {
                                                                                            sat_soTw [Occ=Once]
                                                                                              :: GHC.Base.String
                                                                                                 -> GHC.Base.String
                                                                                            [LclId,
                                                                                             Str=DmdType]
                                                                                            sat_soTw =
                                                                                              \ (w2_soTq [Occ=Once]
                                                                                                   :: GHC.Base.String) ->
                                                                                                case ww2_soTn
                                                                                                of _ [Occ=Dead]
                                                                                                { GHC.Types.I# ww6_soTs [Occ=Once] ->
                                                                                                case GHC.Show.$wshowSignedInt
                                                                                                       0
                                                                                                       ww6_soTs
                                                                                                       w2_soTq
                                                                                                of _ [Occ=Dead]
                                                                                                { (# ww8_soTu [Occ=Once], ww9_soTv [Occ=Once] #) ->
                                                                                                GHC.Types.:
                                                                                                  @ GHC.Types.Char
                                                                                                  ww8_soTu
                                                                                                  ww9_soTv
                                                                                                }
                                                                                                } } in
                                                                                          GHC.List.foldr1_$sfoldr1
                                                                                            @ (GHC.Base.String
                                                                                               -> GHC.Base.String)
                                                                                            GHC.Show.$fShow(,)1
                                                                                            sat_soTw
                                                                                            (GHC.Types.[]
                                                                                               @ GHC.Show.ShowS)
                                                                                            lvl4_rger } in
                                                                                      let {
                                                                                        sat_soTy [Occ=Once]
                                                                                          :: GHC.Base.String
                                                                                        [LclId,
                                                                                         Str=DmdType]
                                                                                        sat_soTy =
                                                                                          GHC.Types.:
                                                                                            @ GHC.Types.Char
                                                                                            GHC.Show.showList__1
                                                                                            sat_soTx } in
                                                                                      case GHC.Show.$wshowSignedInt
                                                                                             0
                                                                                             ww4_soTp
                                                                                             sat_soTy
                                                                                      of _ [Occ=Dead]
                                                                                      { (# ww6_soTA [Occ=Once], ww7_soTB [Occ=Once] #) ->
                                                                                      GHC.Types.:
                                                                                        @ GHC.Types.Char
                                                                                        ww6_soTA
                                                                                        ww7_soTB
                                                                                      }
                                                                                      } } in
                                                                                  GHC.Types.:
                                                                                    @ GHC.Types.Char
                                                                                    GHC.Show.shows13
                                                                                    sat_soTC
                                                                                  } } in
                                                                              GHC.CString.unpackAppendCString#
                                                                                "merg: "#
                                                                                sat_soTD } in
                                                                          case GHC.IO.Handle.Text.hPutStr2
                                                                                 GHC.IO.Handle.FD.stdout
                                                                                 sat_soTE
                                                                                 GHC.Types.True
                                                                                 s2#24_soTk
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv116_soTG [Occ=Once], _ [Occ=Dead] #) ->
                                                                          case GHC.Prim.readMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ (GHC.Types.Int,
                                                                                    GHC.Types.Int)
                                                                                 ipv19_snIv
                                                                                 ipv116_soTG
                                                                          of _ [Occ=Dead]
                                                                          { (# ipv118_soTJ [Occ=Once], ipv119_soTK [Occ=Once] #) ->
                                                                          let {
                                                                            sat_soTL [Occ=Once]
                                                                              :: GHC.Types.Int
                                                                            [LclId, Str=DmdType]
                                                                            sat_soTL =
                                                                              Data.Tuple.snd
                                                                                @ GHC.Types.Int
                                                                                @ GHC.Types.Int
                                                                                ipv119_soTK } in
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ GHC.Types.Int
                                                                                 ipv21_snIy
                                                                                 sat_soTL
                                                                                 ipv118_soTJ
                                                                          of s2#25_soTM
                                                                          { __DEFAULT ->
                                                                          a44_soR1 s2#25_soTM
                                                                          }
                                                                          }
                                                                          }
                                                                          }
                                                                          }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                      }
                                                                  }
                                                                  }
                                                                  }
                                                                  }
                                                                  }
                                                                  };
                                                              a44_soR1 [Occ=LoopBreaker]
                                                                :: GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                   -> (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         () #)
                                                              [LclId,
                                                               Arity=1,
                                                               Str=DmdType <L,U>,
                                                               Unf=OtherCon []]
                                                              a44_soR1 =
                                                                \ (eta5_soR3 [Occ=Once]
                                                                     :: GHC.Prim.State#
                                                                          GHC.Prim.RealWorld) ->
                                                                  case GHC.Prim.readMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ (GHC.Types.Int,
                                                                            GHC.Types.Int)
                                                                         ipv31_snIN
                                                                         eta5_soR3
                                                                  of _ [Occ=Dead]
                                                                  { (# ipv102_soR5 [Occ=Once], ipv103_soR6 [Occ=Once] #) ->
                                                                  let {
                                                                    ix2_soR7 [Dmd=<L,U(U)>]
                                                                      :: GHC.Types.Int
                                                                    [LclId, Str=DmdType]
                                                                    ix2_soR7 =
                                                                      Automata4Coms.indices_a_get_ix
                                                                        ipv103_soR6 } in
                                                                  case GHC.Prim.writeMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ GHC.Types.Int
                                                                         ipv17_snIs
                                                                         ix2_soR7
                                                                         ipv102_soR5
                                                                  of s2#21_soR8 { __DEFAULT ->
                                                                  let {
                                                                    sat_soRf [Occ=Once, Dmd=<L,1*U>]
                                                                      :: GHC.Base.String
                                                                    [LclId, Str=DmdType]
                                                                    sat_soRf =
                                                                      let {
                                                                        sat_soRe [Occ=Once]
                                                                          :: [GHC.Types.Char]
                                                                        [LclId, Str=DmdType]
                                                                        sat_soRe =
                                                                          case ix2_soR7
                                                                          of _ [Occ=Dead]
                                                                          { GHC.Types.I# ww3_soRa [Occ=Once] ->
                                                                          case GHC.Show.$wshowSignedInt
                                                                                 0
                                                                                 ww3_soRa
                                                                                 (GHC.Types.[]
                                                                                    @ GHC.Types.Char)
                                                                          of _ [Occ=Dead]
                                                                          { (# ww5_soRc [Occ=Once], ww6_soRd [Occ=Once] #) ->
                                                                          GHC.Types.:
                                                                            @ GHC.Types.Char
                                                                            ww5_soRc
                                                                            ww6_soRd
                                                                          }
                                                                          } } in
                                                                      GHC.CString.unpackAppendCString#
                                                                        "filtd:"# sat_soRe } in
                                                                  case GHC.IO.Handle.Text.hPutStr2
                                                                         GHC.IO.Handle.FD.stdout
                                                                         sat_soRf
                                                                         GHC.Types.True
                                                                         s2#21_soR8
                                                                  of _ [Occ=Dead]
                                                                  { (# ipv104_soRh [Occ=Once], _ [Occ=Dead] #) ->
                                                                  case GHC.Prim.readMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ (GHC.Types.Int,
                                                                            GHC.Types.Int)
                                                                         ipv31_snIN
                                                                         ipv104_soRh
                                                                  of _ [Occ=Dead]
                                                                  { (# ipv106_soRk [Occ=Once], ipv107_soRl [Occ=Once] #) ->
                                                                  let {
                                                                    sat_soRm [Occ=Once]
                                                                      :: (GHC.Types.Int,
                                                                          GHC.Types.Int)
                                                                    [LclId, Str=DmdType]
                                                                    sat_soRm =
                                                                      Automata4Coms.indices_a_inc_ix
                                                                        ipv107_soRl } in
                                                                  case GHC.Prim.writeMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ (GHC.Types.Int,
                                                                            GHC.Types.Int)
                                                                         ipv31_snIN
                                                                         sat_soRm
                                                                         ipv106_soRk
                                                                  of s2#22_soRn { __DEFAULT ->
                                                                  case GHC.Prim.readMutVar#
                                                                         @ GHC.Prim.RealWorld
                                                                         @ (GHC.Types.Int,
                                                                            GHC.Types.Int)
                                                                         ipv31_snIN
                                                                         s2#22_soRn
                                                                  of _ [Occ=Dead]
                                                                  { (# ipv108_soRp [Occ=Once*], ipv109_soRq [Occ=Once] #) ->
                                                                  case Automata4Coms.indices_a_check
                                                                         ipv109_soRq
                                                                  of _ [Occ=Dead] {
                                                                    GHC.Types.False ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ GHC.Types.Int
                                                                             ipv21_snIy
                                                                             ipv108_soRp
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv110_soRt [Occ=Once], ipv111_soRu [Occ=Once] #) ->
                                                                      let {
                                                                        sat_soRv [Occ=Once]
                                                                          :: (GHC.Types.Int,
                                                                              GHC.Types.Int)
                                                                        [LclId, Str=DmdType]
                                                                        sat_soRv =
                                                                          Automata4Coms.indices_a_init
                                                                            ipv111_soRu } in
                                                                      case GHC.Prim.writeMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ (GHC.Types.Int,
                                                                                GHC.Types.Int)
                                                                             ipv31_snIN
                                                                             sat_soRv
                                                                             ipv110_soRt
                                                                      of s2#23_soRw { __DEFAULT ->
                                                                      case GHC.Prim.readMutVar#
                                                                             @ GHC.Prim.RealWorld
                                                                             @ [GHC.Types.Int]
                                                                             ipv1_snI4
                                                                             s2#23_soRw
                                                                      of _ [Occ=Dead]
                                                                      { (# ipv112_soRy [Occ=Once*], ipv113_soRz [Occ=Once!] #) ->
                                                                      case ipv113_soRz
                                                                      of _ [Occ=Dead] {
                                                                        [] -> a13_snUO ipv112_soRy;
                                                                        : i2_soRB [Occ=Once]
                                                                          is2_soRC [Occ=Once] ->
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ [GHC.Types.Int]
                                                                                 ipv1_snI4
                                                                                 is2_soRC
                                                                                 ipv112_soRy
                                                                          of s2#24_soRD
                                                                          { __DEFAULT ->
                                                                          case GHC.Prim.writeMutVar#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 @ GHC.Types.Int
                                                                                 ipv5_snIa
                                                                                 i2_soRB
                                                                                 s2#24_soRD
                                                                          of s2#25_soRE
                                                                          { __DEFAULT ->
                                                                          a45_soR2 s2#25_soRE
                                                                          }
                                                                          }
                                                                      }
                                                                      }
                                                                      }
                                                                      };
                                                                    GHC.Types.True ->
                                                                      a44_soR1 ipv108_soRp
                                                                  }
                                                                  }
                                                                  }
                                                                  }
                                                                  }
                                                                  }
                                                                  }; } in
                                                            a45_soR2 s2#20_soR0
                                                            }
                                                            };
                                                          GHC.Types.True -> a43_soQw ipv98_soQT
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }; } in
                                                  a43_soQw s2#17_soQv
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              }
                                              };
                                            GHC.Types.True -> a42_soOe ipv74_soOB
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }
                                          }; } in
                                    a42_soOe s2#10_soOd
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                };
                              : i2_soTN [Occ=Once] is2_soTO [Occ=Once] ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ [GHC.Types.Int]
                                       ipv3_snI7
                                       is2_soTO
                                       ipv54_soMs
                                of s2#8_soTP { __DEFAULT ->
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ GHC.Types.Int
                                       ipv7_snId
                                       i2_soTN
                                       s2#8_soTP
                                of s2#9_soTQ { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv13_snIm s2#9_soTQ
                                of _ [Occ=Dead] { (# ipv56_soTS [Occ=Once], ipv57_soTT #) ->
                                let {
                                  sat_soTU [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soTU = (ipv57_soTT, ipv57_soTT) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       sat_soTU
                                       ipv56_soTS
                                of s2#10_soTV { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       s2#10_soTV
                                of _ [Occ=Dead]
                                { (# ipv58_soTX [Occ=Once], ipv59_soTY [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       ipv58_soTX
                                of _ [Occ=Dead]
                                { (# ipv60_soU0 [Occ=Once*], ipv61_soU1 [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv59_soTY ipv61_soU1
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_snIg
                                           ipv60_soU0
                                    of _ [Occ=Dead] { (# ipv62_soU4 [Occ=Once], ipv63_soU5 #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv63_soU5
                                           ipv62_soU4
                                    of s2#11_soU6 { __DEFAULT ->
                                    let {
                                      sat_soUq [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soUq =
                                        let {
                                          sat_soUp [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soUp =
                                            case ipv63_soU5
                                            of _ [Occ=Dead]
                                            { (ww1_soU8 [Occ=Once!], ww2_soU9 [Occ=OnceL!]) ->
                                            let {
                                              sat_soUo [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soUo =
                                                case ww1_soU8
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soUb [Occ=Once] ->
                                                let {
                                                  sat_soUj [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soUj =
                                                    let {
                                                      sat_soUi [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soUi =
                                                        \ (w2_soUc [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soU9
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soUe [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soUe w2_soUc
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soUg [Occ=Once], ww9_soUh [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soUg ww9_soUh
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soUi
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soUk [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soUk =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soUj } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soUb sat_soUk
                                                of _ [Occ=Dead]
                                                { (# ww6_soUm [Occ=Once], ww7_soUn [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soUm ww7_soUn
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soUo
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soUp } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_soUq
                                           GHC.Types.True
                                           s2#11_soU6
                                    of _ [Occ=Dead] { (# ipv64_soUs [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv64_soUs
                                    of _ [Occ=Dead]
                                    { (# ipv66_soUv [Occ=Once], ipv67_soUw [Occ=Once] #) ->
                                    let {
                                      sat_soUx [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soUx =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_soUw } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soUx
                                           ipv66_soUv
                                    of s2#12_soUy { __DEFAULT ->
                                    a40_soqn s2#12_soUy
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_snIj
                                           ipv60_soU0
                                    of _ [Occ=Dead] { (# ipv62_soUA [Occ=Once], ipv63_soUB #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv63_soUB
                                           ipv62_soUA
                                    of s2#11_soUC { __DEFAULT ->
                                    let {
                                      sat_soUW [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soUW =
                                        let {
                                          sat_soUV [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soUV =
                                            case ipv63_soUB
                                            of _ [Occ=Dead]
                                            { (ww1_soUE [Occ=Once!], ww2_soUF [Occ=OnceL!]) ->
                                            let {
                                              sat_soUU [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soUU =
                                                case ww1_soUE
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soUH [Occ=Once] ->
                                                let {
                                                  sat_soUP [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soUP =
                                                    let {
                                                      sat_soUO [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soUO =
                                                        \ (w2_soUI [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soUF
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soUK [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soUK w2_soUI
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soUM [Occ=Once], ww9_soUN [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soUM ww9_soUN
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soUO
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soUQ [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soUQ =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soUP } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soUH sat_soUQ
                                                of _ [Occ=Dead]
                                                { (# ww6_soUS [Occ=Once], ww7_soUT [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soUS ww7_soUT
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soUU
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soUV } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_soUW
                                           GHC.Types.True
                                           s2#11_soUC
                                    of _ [Occ=Dead] { (# ipv64_soUY [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv64_soUY
                                    of _ [Occ=Dead]
                                    { (# ipv66_soV1 [Occ=Once], ipv67_soV2 [Occ=Once] #) ->
                                    let {
                                      sat_soV3 [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soV3 =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv67_soV2 } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soV3
                                           ipv66_soV1
                                    of s2#12_soV4 { __DEFAULT ->
                                    a38_soql s2#12_soV4
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                }
                            }
                            };
                        a26_soq9 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a26_soq9 =
                          \ (eta2_sot4 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_sot4
                            of _ [Occ=Dead]
                            { (# ipv54_sot6 [Occ=Once], ipv55_sot7 [Occ=Once] #) ->
                            let {
                              ix_sot8 [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_sot8 = Automata4Coms.indices_a_get_ix ipv55_sot7 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_sot8
                                   ipv54_sot6
                            of s2#8_sot9 { __DEFAULT ->
                            let {
                              sat_sotg [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_sotg =
                                let {
                                  sat_sotf [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_sotf =
                                    case ix_sot8
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_sotb [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_sotb (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_sotd [Occ=Once], ww6_sote [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_sotd ww6_sote
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_sotf } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_sotg GHC.Types.True s2#8_sot9
                            of _ [Occ=Dead] { (# ipv56_soti [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv56_soti
                            of _ [Occ=Dead]
                            { (# ipv58_sotl [Occ=Once], ipv59_sotm [Occ=Once] #) ->
                            let {
                              sat_sotn [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_sotn = Automata4Coms.indices_a_inc_ix ipv59_sotm } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_sotn
                                   ipv58_sotl
                            of s2#9_soto { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#9_soto
                            of _ [Occ=Dead]
                            { (# ipv60_sotq [Occ=Once*], ipv61_sotr [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_sotr of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv60_sotq
                                of _ [Occ=Dead]
                                { (# ipv62_sotu [Occ=Once], ipv63_sotv [Occ=Once] #) ->
                                let {
                                  sat_sotw [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_sotw = Automata4Coms.indices_a_init ipv63_sotv } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_sotw
                                       ipv62_sotu
                                of s2#10_sotx { __DEFAULT ->
                                a41_soqo s2#10_sotx
                                }
                                };
                              GHC.Types.True -> a26_soq9 ipv60_sotq
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a31_soqe [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a31_soqe =
                          \ (eta2_soB4 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_soB4
                            of _ [Occ=Dead]
                            { (# ipv54_soB6 [Occ=Once], ipv55_soB7 [Occ=Once] #) ->
                            let {
                              ix_soB8 [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_soB8 = Automata4Coms.indices_a_get_ix ipv55_soB7 } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_soB8
                                   ipv54_soB6
                            of s2#8_soB9 { __DEFAULT ->
                            let {
                              sat_soBg [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_soBg =
                                let {
                                  sat_soBf [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_soBf =
                                    case ix_soB8
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_soBb [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_soBb (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_soBd [Occ=Once], ww6_soBe [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_soBd ww6_soBe
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_soBf } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_soBg GHC.Types.True s2#8_soB9
                            of _ [Occ=Dead] { (# ipv56_soBi [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv56_soBi
                            of _ [Occ=Dead]
                            { (# ipv58_soBl [Occ=Once], ipv59_soBm [Occ=Once] #) ->
                            let {
                              sat_soBn [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_soBn = Automata4Coms.indices_a_inc_ix ipv59_soBm } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_soBn
                                   ipv58_soBl
                            of s2#9_soBo { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#9_soBo
                            of _ [Occ=Dead]
                            { (# ipv60_soBq [Occ=Once*], ipv61_soBr [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_soBr of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv60_soBq
                                of _ [Occ=Dead]
                                { (# ipv62_soBu [Occ=Once], ipv63_soBv [Occ=Once] #) ->
                                let {
                                  sat_soBw [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soBw = Automata4Coms.indices_a_init ipv63_soBv } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_soBw
                                       ipv62_soBu
                                of s2#10_soBx { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 s2#10_soBx
                                of _ [Occ=Dead]
                                { (# ipv64_soBz [Occ=Once*], ipv65_soBA [Occ=Once!] #) ->
                                case ipv65_soBA of _ [Occ=Dead] {
                                  [] -> a14_snVR ipv64_soBz;
                                  : i2_soBC [Occ=Once] is2_soBD [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_snI4
                                           is2_soBD
                                           ipv64_soBz
                                    of s2#11_soBE { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_snIa
                                           i2_soBC
                                           s2#11_soBE
                                    of s2#12_soBF { __DEFAULT ->
                                    a30_soqd s2#12_soBF
                                    }
                                    }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a31_soqe ipv60_soBq
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a32_soqf [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a32_soqf =
                          \ (eta2_soBG [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   eta2_soBG
                            of _ [Occ=Dead]
                            { (# ipv54_soBI [Occ=Once], ipv55_soBJ [Occ=Once] #) ->
                            let {
                              ix_soBK [Dmd=<L,U(U)>] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              ix_soBK = Automata4Coms.indices_a_get_ix ipv55_soBJ } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv17_snIs
                                   ix_soBK
                                   ipv54_soBI
                            of s2#8_soBL { __DEFAULT ->
                            let {
                              sat_soBS [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                              [LclId, Str=DmdType]
                              sat_soBS =
                                let {
                                  sat_soBR [Occ=Once] :: [GHC.Types.Char]
                                  [LclId, Str=DmdType]
                                  sat_soBR =
                                    case ix_soBK
                                    of _ [Occ=Dead] { GHC.Types.I# ww3_soBN [Occ=Once] ->
                                    case GHC.Show.$wshowSignedInt
                                           0 ww3_soBN (GHC.Types.[] @ GHC.Types.Char)
                                    of _ [Occ=Dead]
                                    { (# ww5_soBP [Occ=Once], ww6_soBQ [Occ=Once] #) ->
                                    GHC.Types.: @ GHC.Types.Char ww5_soBP ww6_soBQ
                                    }
                                    } } in
                                GHC.CString.unpackAppendCString# "filtd:"# sat_soBR } in
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout sat_soBS GHC.Types.True s2#8_soBL
                            of _ [Occ=Dead] { (# ipv56_soBU [Occ=Once], _ [Occ=Dead] #) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   ipv56_soBU
                            of _ [Occ=Dead]
                            { (# ipv58_soBX [Occ=Once], ipv59_soBY [Occ=Once] #) ->
                            let {
                              sat_soBZ [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                              [LclId, Str=DmdType]
                              sat_soBZ = Automata4Coms.indices_a_inc_ix ipv59_soBY } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   sat_soBZ
                                   ipv58_soBX
                            of s2#9_soC0 { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   ipv31_snIN
                                   s2#9_soC0
                            of _ [Occ=Dead]
                            { (# ipv60_soC2 [Occ=Once*], ipv61_soC3 [Occ=Once] #) ->
                            case Automata4Coms.indices_a_check ipv61_soC3 of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy ipv60_soC2
                                of _ [Occ=Dead]
                                { (# ipv62_soC6 [Occ=Once], ipv63_soC7 [Occ=Once] #) ->
                                let {
                                  sat_soC8 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soC8 = Automata4Coms.indices_a_init ipv63_soC7 } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv31_snIN
                                       sat_soC8
                                       ipv62_soC6
                                of s2#10_soC9 { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ GHC.Types.Int ipv7_snId s2#10_soC9
                                of _ [Occ=Dead] { (# ipv64_soCb [Occ=Once], ipv65_soCc #) ->
                                let {
                                  sat_soCd [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                                  [LclId, Str=DmdType]
                                  sat_soCd = (ipv65_soCc, ipv65_soCc) } in
                                case GHC.Prim.writeMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       sat_soCd
                                       ipv64_soCb
                                of s2#11_soCe { __DEFAULT ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv11_snIj
                                       s2#11_soCe
                                of _ [Occ=Dead]
                                { (# ipv66_soCg [Occ=Once], ipv67_soCh [Occ=Once] #) ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld
                                       @ (GHC.Types.Int, GHC.Types.Int)
                                       ipv9_snIg
                                       ipv66_soCg
                                of _ [Occ=Dead]
                                { (# ipv68_soCj [Occ=Once*], ipv69_soCk [Occ=Once] #) ->
                                case Automata4Coms.merge_a_le_pair
                                       @ GHC.Types.Int ipv67_soCh ipv69_soCk
                                of _ [Occ=Dead] {
                                  GHC.Types.False ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv9_snIg
                                           ipv68_soCj
                                    of _ [Occ=Dead] { (# ipv70_soCn [Occ=Once], ipv71_soCo #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv71_soCo
                                           ipv70_soCn
                                    of s2#12_soCp { __DEFAULT ->
                                    let {
                                      sat_soCJ [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soCJ =
                                        let {
                                          sat_soCI [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soCI =
                                            case ipv71_soCo
                                            of _ [Occ=Dead]
                                            { (ww1_soCr [Occ=Once!], ww2_soCs [Occ=OnceL!]) ->
                                            let {
                                              sat_soCH [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soCH =
                                                case ww1_soCr
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soCu [Occ=Once] ->
                                                let {
                                                  sat_soCC [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soCC =
                                                    let {
                                                      sat_soCB [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soCB =
                                                        \ (w2_soCv [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soCs
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soCx [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soCx w2_soCv
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soCz [Occ=Once], ww9_soCA [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soCz ww9_soCA
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soCB
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soCD [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soCD =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soCC } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soCu sat_soCD
                                                of _ [Occ=Dead]
                                                { (# ww6_soCF [Occ=Once], ww7_soCG [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soCF ww7_soCG
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soCH
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soCI } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_soCJ
                                           GHC.Types.True
                                           s2#12_soCp
                                    of _ [Occ=Dead] { (# ipv72_soCL [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv72_soCL
                                    of _ [Occ=Dead]
                                    { (# ipv74_soCO [Occ=Once], ipv75_soCP [Occ=Once] #) ->
                                    let {
                                      sat_soCQ [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soCQ =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv75_soCP } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soCQ
                                           ipv74_soCO
                                    of s2#13_soCR { __DEFAULT ->
                                    a31_soqe s2#13_soCR
                                    }
                                    }
                                    }
                                    }
                                    };
                                  GHC.Types.True ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv11_snIj
                                           ipv68_soCj
                                    of _ [Occ=Dead] { (# ipv70_soCT [Occ=Once], ipv71_soCU #) ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv71_soCU
                                           ipv70_soCT
                                    of s2#12_soCV { __DEFAULT ->
                                    let {
                                      sat_soDf [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                                      [LclId, Str=DmdType]
                                      sat_soDf =
                                        let {
                                          sat_soDe [Occ=Once] :: [GHC.Types.Char]
                                          [LclId, Str=DmdType]
                                          sat_soDe =
                                            case ipv71_soCU
                                            of _ [Occ=Dead]
                                            { (ww1_soCX [Occ=Once!], ww2_soCY [Occ=OnceL!]) ->
                                            let {
                                              sat_soDd [Occ=Once] :: [GHC.Types.Char]
                                              [LclId, Str=DmdType]
                                              sat_soDd =
                                                case ww1_soCX
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww4_soD0 [Occ=Once] ->
                                                let {
                                                  sat_soD8 [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId, Str=DmdType]
                                                  sat_soD8 =
                                                    let {
                                                      sat_soD7 [Occ=Once]
                                                        :: GHC.Base.String -> GHC.Base.String
                                                      [LclId, Str=DmdType]
                                                      sat_soD7 =
                                                        \ (w2_soD1 [Occ=Once] :: GHC.Base.String) ->
                                                          case ww2_soCY
                                                          of _ [Occ=Dead]
                                                          { GHC.Types.I# ww6_soD3 [Occ=Once] ->
                                                          case GHC.Show.$wshowSignedInt
                                                                 0 ww6_soD3 w2_soD1
                                                          of _ [Occ=Dead]
                                                          { (# ww8_soD5 [Occ=Once], ww9_soD6 [Occ=Once] #) ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char ww8_soD5 ww9_soD6
                                                          }
                                                          } } in
                                                    GHC.List.foldr1_$sfoldr1
                                                      @ (GHC.Base.String -> GHC.Base.String)
                                                      GHC.Show.$fShow(,)1
                                                      sat_soD7
                                                      (GHC.Types.[] @ GHC.Show.ShowS)
                                                      lvl4_rger } in
                                                let {
                                                  sat_soD9 [Occ=Once] :: GHC.Base.String
                                                  [LclId, Str=DmdType]
                                                  sat_soD9 =
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      GHC.Show.showList__1
                                                      sat_soD8 } in
                                                case GHC.Show.$wshowSignedInt 0 ww4_soD0 sat_soD9
                                                of _ [Occ=Dead]
                                                { (# ww6_soDb [Occ=Once], ww7_soDc [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww6_soDb ww7_soDc
                                                }
                                                } } in
                                            GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soDd
                                            } } in
                                        GHC.CString.unpackAppendCString# "merg: "# sat_soDe } in
                                    case GHC.IO.Handle.Text.hPutStr2
                                           GHC.IO.Handle.FD.stdout
                                           sat_soDf
                                           GHC.Types.True
                                           s2#12_soCV
                                    of _ [Occ=Dead] { (# ipv72_soDh [Occ=Once], _ [Occ=Dead] #) ->
                                    case GHC.Prim.readMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           ipv19_snIv
                                           ipv72_soDh
                                    of _ [Occ=Dead]
                                    { (# ipv74_soDk [Occ=Once], ipv75_soDl [Occ=Once] #) ->
                                    let {
                                      sat_soDm [Occ=Once] :: GHC.Types.Int
                                      [LclId, Str=DmdType]
                                      sat_soDm =
                                        Data.Tuple.snd
                                          @ GHC.Types.Int @ GHC.Types.Int ipv75_soDl } in
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv21_snIy
                                           sat_soDm
                                           ipv74_soDk
                                    of s2#13_soDn { __DEFAULT ->
                                    a23_soq6 s2#13_soDn
                                    }
                                    }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> a32_soqf ipv60_soC2
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                        a20_soq3 [Occ=LoopBreaker]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        [LclId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
                        a20_soq3 =
                          \ (eta2_soqp [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5_snIa eta2_soqp
                            of _ [Occ=Dead]
                            { (# ipv54_soqr [Occ=Once], ipv55_soqs [Occ=Once] #) ->
                            let {
                              sat_soqt [Occ=Once] :: GHC.Types.Int
                              [LclId, Str=DmdType]
                              sat_soqt = inc_rgem ipv55_soqs } in
                            case GHC.Prim.writeMutVar#
                                   @ GHC.Prim.RealWorld
                                   @ GHC.Types.Int
                                   ipv15_snIp
                                   sat_soqt
                                   ipv54_soqr
                            of s2#8_soqu { __DEFAULT ->
                            case GHC.Prim.readMutVar#
                                   @ GHC.Prim.RealWorld @ GHC.Types.Int ipv15_snIp s2#8_soqu
                            of _ [Occ=Dead]
                            { (# ipv56_soqw [Occ=Once*], ipv57_soqx [Occ=Once!] #) ->
                            case ipv57_soqx
                            of _ [Occ=Dead] { GHC.Types.I# x1_soqz [Occ=Once] ->
                            case GHC.Prim.># x1_soqz 10 of sat_soqA { __DEFAULT ->
                            case GHC.Prim.tagToEnum# @ GHC.Types.Bool sat_soqA
                            of _ [Occ=Dead] {
                              GHC.Types.False ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 ipv56_soqw
                                of _ [Occ=Dead]
                                { (# ipv58_soqD [Occ=Once*], ipv59_soqE [Occ=Once!] #) ->
                                case ipv59_soqE of _ [Occ=Dead] {
                                  [] -> a15_snZq ipv58_soqD;
                                  : i2_soqG [Occ=Once] is2_soqH [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_snI4
                                           is2_soqH
                                           ipv58_soqD
                                    of s2#9_soqI { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_snIa
                                           i2_soqG
                                           s2#9_soqI
                                    of s2#10_soqJ { __DEFAULT ->
                                    a20_soq3 s2#10_soqJ
                                    }
                                    }
                                }
                                };
                              GHC.Types.True ->
                                case GHC.Prim.readMutVar#
                                       @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 ipv56_soqw
                                of _ [Occ=Dead]
                                { (# ipv58_soqL [Occ=Once*], ipv59_soqM [Occ=Once!] #) ->
                                case ipv59_soqM of _ [Occ=Dead] {
                                  [] -> a17_so9U ipv58_soqL;
                                  : i2_soqO [Occ=Once] is2_soqP [Occ=Once] ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ [GHC.Types.Int]
                                           ipv1_snI4
                                           is2_soqP
                                           ipv58_soqL
                                    of s2#9_soqQ { __DEFAULT ->
                                    case GHC.Prim.writeMutVar#
                                           @ GHC.Prim.RealWorld
                                           @ GHC.Types.Int
                                           ipv5_snIa
                                           i2_soqO
                                           s2#9_soqQ
                                    of s2#10_soqR { __DEFAULT ->
                                    a41_soqo s2#10_soqR
                                    }
                                    }
                                }
                                }
                            }
                            }
                            }
                            }
                            }
                            }; } in
                      case Automata4Coms.merge_a_le_pair
                             @ GHC.Types.Int ipv51_snQp ipv53_snQs
                      of _ [Occ=Dead] {
                        GHC.Types.False ->
                          case GHC.Prim.readMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv9_snIg
                                 ipv52_snQr
                          of _ [Occ=Dead] { (# ipv54_soV7 [Occ=Once], ipv55_soV8 #) ->
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv19_snIv
                                 ipv55_soV8
                                 ipv54_soV7
                          of s2#8_soV9 { __DEFAULT ->
                          let {
                            sat_soVt [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                            [LclId, Str=DmdType]
                            sat_soVt =
                              let {
                                sat_soVs [Occ=Once] :: [GHC.Types.Char]
                                [LclId, Str=DmdType]
                                sat_soVs =
                                  case ipv55_soV8
                                  of _ [Occ=Dead] { (ww1_soVb [Occ=Once!], ww2_soVc [Occ=OnceL!]) ->
                                  let {
                                    sat_soVr [Occ=Once] :: [GHC.Types.Char]
                                    [LclId, Str=DmdType]
                                    sat_soVr =
                                      case ww1_soVb
                                      of _ [Occ=Dead] { GHC.Types.I# ww4_soVe [Occ=Once] ->
                                      let {
                                        sat_soVm [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_soVm =
                                          let {
                                            sat_soVl [Occ=Once]
                                              :: GHC.Base.String -> GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_soVl =
                                              \ (w2_soVf [Occ=Once] :: GHC.Base.String) ->
                                                case ww2_soVc
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww6_soVh [Occ=Once] ->
                                                case GHC.Show.$wshowSignedInt 0 ww6_soVh w2_soVf
                                                of _ [Occ=Dead]
                                                { (# ww8_soVj [Occ=Once], ww9_soVk [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww8_soVj ww9_soVk
                                                }
                                                } } in
                                          GHC.List.foldr1_$sfoldr1
                                            @ (GHC.Base.String -> GHC.Base.String)
                                            GHC.Show.$fShow(,)1
                                            sat_soVl
                                            (GHC.Types.[] @ GHC.Show.ShowS)
                                            lvl4_rger } in
                                      let {
                                        sat_soVn [Occ=Once] :: GHC.Base.String
                                        [LclId, Str=DmdType]
                                        sat_soVn =
                                          GHC.Types.:
                                            @ GHC.Types.Char GHC.Show.showList__1 sat_soVm } in
                                      case GHC.Show.$wshowSignedInt 0 ww4_soVe sat_soVn
                                      of _ [Occ=Dead]
                                      { (# ww6_soVp [Occ=Once], ww7_soVq [Occ=Once] #) ->
                                      GHC.Types.: @ GHC.Types.Char ww6_soVp ww7_soVq
                                      }
                                      } } in
                                  GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soVr
                                  } } in
                              GHC.CString.unpackAppendCString# "merg: "# sat_soVs } in
                          case GHC.IO.Handle.Text.hPutStr2
                                 GHC.IO.Handle.FD.stdout sat_soVt GHC.Types.True s2#8_soV9
                          of _ [Occ=Dead] { (# ipv56_soVv [Occ=Once], _ [Occ=Dead] #) ->
                          case GHC.Prim.readMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv19_snIv
                                 ipv56_soVv
                          of _ [Occ=Dead]
                          { (# ipv58_soVy [Occ=Once], ipv59_soVz [Occ=Once] #) ->
                          let {
                            sat_soVA [Occ=Once] :: GHC.Types.Int
                            [LclId, Str=DmdType]
                            sat_soVA =
                              Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_soVz } in
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy sat_soVA ipv58_soVy
                          of s2#9_soVB { __DEFAULT ->
                          case GHC.Prim.readMutVar#
                                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy s2#9_soVB
                          of _ [Occ=Dead]
                          { (# ipv60_soVD [Occ=Once], ipv61_soVE [Occ=Once] #) ->
                          let {
                            sat_soVF [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                            [LclId, Str=DmdType]
                            sat_soVF = Automata4Coms.indices_a_init ipv61_soVE } in
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv31_snIN
                                 sat_soVF
                                 ipv60_soVD
                          of s2#10_soVG { __DEFAULT ->
                          case GHC.Prim.readMutVar#
                                 @ GHC.Prim.RealWorld @ [GHC.Types.Int] ipv1_snI4 s2#10_soVG
                          of _ [Occ=Dead]
                          { (# ipv62_soVI [Occ=Once*], ipv63_soVJ [Occ=Once!] #) ->
                          case ipv63_soVJ of _ [Occ=Dead] {
                            [] -> a14_snVR ipv62_soVI;
                            : i2_soVL [Occ=Once] is2_soVM [Occ=Once] ->
                              case GHC.Prim.writeMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ [GHC.Types.Int]
                                     ipv1_snI4
                                     is2_soVM
                                     ipv62_soVI
                              of s2#11_soVN { __DEFAULT ->
                              case GHC.Prim.writeMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv5_snIa
                                     i2_soVL
                                     s2#11_soVN
                              of s2#12_soVO { __DEFAULT ->
                              a30_soqd s2#12_soVO
                              }
                              }
                          }
                          }
                          }
                          }
                          }
                          }
                          }
                          }
                          };
                        GHC.Types.True ->
                          case GHC.Prim.readMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv11_snIj
                                 ipv52_snQr
                          of _ [Occ=Dead] { (# ipv54_soVQ [Occ=Once], ipv55_soVR #) ->
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv19_snIv
                                 ipv55_soVR
                                 ipv54_soVQ
                          of s2#8_soVS { __DEFAULT ->
                          let {
                            sat_soWc [Occ=Once, Dmd=<L,1*U>] :: GHC.Base.String
                            [LclId, Str=DmdType]
                            sat_soWc =
                              let {
                                sat_soWb [Occ=Once] :: [GHC.Types.Char]
                                [LclId, Str=DmdType]
                                sat_soWb =
                                  case ipv55_soVR
                                  of _ [Occ=Dead] { (ww1_soVU [Occ=Once!], ww2_soVV [Occ=OnceL!]) ->
                                  let {
                                    sat_soWa [Occ=Once] :: [GHC.Types.Char]
                                    [LclId, Str=DmdType]
                                    sat_soWa =
                                      case ww1_soVU
                                      of _ [Occ=Dead] { GHC.Types.I# ww4_soVX [Occ=Once] ->
                                      let {
                                        sat_soW5 [Occ=Once] :: [GHC.Types.Char]
                                        [LclId, Str=DmdType]
                                        sat_soW5 =
                                          let {
                                            sat_soW4 [Occ=Once]
                                              :: GHC.Base.String -> GHC.Base.String
                                            [LclId, Str=DmdType]
                                            sat_soW4 =
                                              \ (w2_soVY [Occ=Once] :: GHC.Base.String) ->
                                                case ww2_soVV
                                                of _ [Occ=Dead]
                                                { GHC.Types.I# ww6_soW0 [Occ=Once] ->
                                                case GHC.Show.$wshowSignedInt 0 ww6_soW0 w2_soVY
                                                of _ [Occ=Dead]
                                                { (# ww8_soW2 [Occ=Once], ww9_soW3 [Occ=Once] #) ->
                                                GHC.Types.: @ GHC.Types.Char ww8_soW2 ww9_soW3
                                                }
                                                } } in
                                          GHC.List.foldr1_$sfoldr1
                                            @ (GHC.Base.String -> GHC.Base.String)
                                            GHC.Show.$fShow(,)1
                                            sat_soW4
                                            (GHC.Types.[] @ GHC.Show.ShowS)
                                            lvl4_rger } in
                                      let {
                                        sat_soW6 [Occ=Once] :: GHC.Base.String
                                        [LclId, Str=DmdType]
                                        sat_soW6 =
                                          GHC.Types.:
                                            @ GHC.Types.Char GHC.Show.showList__1 sat_soW5 } in
                                      case GHC.Show.$wshowSignedInt 0 ww4_soVX sat_soW6
                                      of _ [Occ=Dead]
                                      { (# ww6_soW8 [Occ=Once], ww7_soW9 [Occ=Once] #) ->
                                      GHC.Types.: @ GHC.Types.Char ww6_soW8 ww7_soW9
                                      }
                                      } } in
                                  GHC.Types.: @ GHC.Types.Char GHC.Show.shows13 sat_soWa
                                  } } in
                              GHC.CString.unpackAppendCString# "merg: "# sat_soWb } in
                          case GHC.IO.Handle.Text.hPutStr2
                                 GHC.IO.Handle.FD.stdout sat_soWc GHC.Types.True s2#8_soVS
                          of _ [Occ=Dead] { (# ipv56_soWe [Occ=Once], _ [Occ=Dead] #) ->
                          case GHC.Prim.readMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv19_snIv
                                 ipv56_soWe
                          of _ [Occ=Dead]
                          { (# ipv58_soWh [Occ=Once], ipv59_soWi [Occ=Once] #) ->
                          let {
                            sat_soWj [Occ=Once] :: GHC.Types.Int
                            [LclId, Str=DmdType]
                            sat_soWj =
                              Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int ipv59_soWi } in
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy sat_soWj ipv58_soWh
                          of s2#9_soWk { __DEFAULT ->
                          case GHC.Prim.readMutVar#
                                 @ GHC.Prim.RealWorld @ GHC.Types.Int ipv21_snIy s2#9_soWk
                          of _ [Occ=Dead]
                          { (# ipv60_soWm [Occ=Once], ipv61_soWn [Occ=Once] #) ->
                          let {
                            sat_soWo [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)
                            [LclId, Str=DmdType]
                            sat_soWo = Automata4Coms.indices_a_init ipv61_soWn } in
                          case GHC.Prim.writeMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ (GHC.Types.Int, GHC.Types.Int)
                                 ipv31_snIN
                                 sat_soWo
                                 ipv60_soWm
                          of s2#10_soWp { __DEFAULT ->
                          a21_soq4 s2#10_soWp
                          }
                          }
                          }
                          }
                          }
                          }
                          }
                      }
                      }
                      }
                      }
                      }
                      }
                      }
                  }
                  }
                  }
                  }
                  }
                  }
              }
              }
              }
              }
              }
              }; } in
        a5_snLC s2#1_snLB
        }
        }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }

Automata4QQEg.bobo :: GHC.Types.IO ()
[GblId, Arity=1, Str=DmdType <L,U>, Unf=OtherCon []]
Automata4QQEg.bobo =
  (\ (eta_B1 [Occ=Once, OS=OneShot]
        :: GHC.Prim.State# GHC.Prim.RealWorld) ->
     Automata4QQEg.bobo1 eta_B1)
  `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)
          :: (GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             GHC.Types.IO ())



